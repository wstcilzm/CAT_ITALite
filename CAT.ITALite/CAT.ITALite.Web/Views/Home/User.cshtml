@{
    ViewBag.Title = "User";
}
<script type="text/javascript">
    $(function () {
        var user = {
            panel: $('.user-panel'),
            grid: $('.user-grid'),
            createToolbar: function () {
                var t = layout.toolbar;
                t.add('Refresh', 'Refresh', 'toolbar-showall', function () {
                    user.load();
                });
                t.add('AssignToGroup', 'AssignToGroup', 'toolbar-longword', function () {
                    var arra = [];
                    var selectedRows = user.grid.vgrid('selectedRows');
                    selectedRows.each(function () {
                        arra.push({ PartitionKey: $(this).attr('userId'), RowKey: $(this).attr('userName') });
                    });
                    window.location = "../Home/AssignUserToGroup?users=" + JSON.stringify(arra);
                });
                
                t.add('AddUser', 'AddUser', 'toolbar-add', function () {
                    //$(document).mask().click(function(){$(document).unmask()});
                    $('.assign-group-wizard').load('../Home/AddUser');
                });

                t.add('DelUser', 'DelUser', 'toolbar-delete', function () {
                    var selectedRows = user.grid.vgrid('selectedRows');
                    if (selectedRows.length < 1)
                    {
                        var errorId = 1;
                        var title = 'Must selecte items for delete!';
                        layout.action.create(errorId, { title: title });
                        layout.action.warning(errorId, 'At least one item must be selected!');
                        return;
                    }
                    deleteUser();
                });
                
                function deleteUser()
                {
                    layout.confirm('Remove this user?', yesToDeleteUser, null);
                }

                function yesToDeleteUser() {
                    //var arra = [];
                    //var selectedRows = user.grid.vgrid('selectedRows');
                    //selectedRows.each(function () {
                    //    arra.push({ PartitionKey: $(this).attr('userId'), RowKey: $(this).attr('userName') });
                    //});
                    var succId = 0;
                    var title = "Delete Successful！";
                    layout.action.create(succId, { title: title });
                    layout.action.success(succId, 'delete user.....');
                };
            },
            load: function () {
                user.panel.css({ 'min-height': layout.contantHeight , 'max-height': layout.contantHeight  }).vloading().vloading('show');
                $.ajax({
                    type: "GET",
                    url: vstorm.getApiServerUrl() + '/api/user/list',
                    traditional: true,
                    success: function (d) {
                        user.bindData(d.result);
                        user.panel.vloading('hide');
                    },
                    error: function (d) {
                        alert(d);
                        user.panel.vloading('hide');
                    }
                });
            },
            bindData: function (data) {
                user.grid.vgrid('bindData', data);
            },
            getGridSetting: function () {
                var gridSetting = {
                    caption: 'Users',
                    url: '/Home',
                    searchAction: 'GetApplications',
                    width: layout.contantWidth,
                    height: layout.contantHeight ,//* 2 / 3,
                    noDataMsg: 'No applications found',
                    rp: 20,
                    rowProps: [{ name: 'userName', field: 'RowKey' }, { name: 'userId', field: 'PartitionKey' }, {name:'displayName',field:'DisplayName'}],
                    orderBy: 'Homepage',
                    usePage: false,
                    filter: true,
                    checkbox: true,
                    scaleWidth: true,
                    columns: [
                        { caption: 'User Name', field: 'RowKey', width: 4, primary: true },
                        { caption: 'Display Name', field: 'DisplayName', width: 1.5 },
                        { caption: 'Account Enabled', field: 'AccountEnabled', width: 1.5 },
                        { caption: 'Mail Nickname', field: 'MailNickname', width: 1.5 },
                        { caption: 'Usage Location', field: 'UsageLocation', width: 1.5 },
                        { caption: 'User Type', field: 'UserType', type: 'number', width: 1 },
                        { caption: 'User Id', field: 'PartitionKey', width: 2 },
                    ],
                    primaryColumnClick: function (ev) {
                        ev.stopPropagation();
                        var tr = $(this).parent();
                        var userId = tr.attr('userid');
                        self.location = "../../Home/UserDetail?id=" + userId;
                    }
                };
                return gridSetting;
            },
            init: function () {
                user.grid.vgrid(user.getGridSetting());
            },
            groupOperate: function (groupId, op, field, msg, params, actionTitle, actionMsgTemplate, callback) {
                //
                //var trs = user.grid.vgrid('selectedRows');
                if (user.selectedList.count > 0) {
                    //var id = op;
                    //layout.action.create(id, { title: actionTitle });
                    //var colIdx = user.grid.vgrid("columnIndex", "UserName");
                    //colIdx = user.grid.vgrid("columnIndex", field);
                    if (!callback) {
                        callback = user.groupOperateCallback;
                    }
                    user.selectedList.each(function () {
                        var tr = $(this);
                        var userId = tr.attr('userId');
                        layout.action.push(id, actionMsgTemplate.info.format(tr.attr('userid')));
                        $.ajax({
                            type: 'Get',
                            url: 'http://localhost:33042/api/assignment/addusertogroup?userId=' + userId + '&groupId=' + groupId,
                            success: function (r) {
                                callback(r, tr, id, actionMsgTemplate);
                            },
                            error: function (e) {
                                layout.onGetJsonError(id, actionTitle, e);
                            }
                        });
                    });
                    user.grid.vgrid('unSelectAll');
                }
            },
            groupOperateCallback: function (data, tr, actionId, actionMsgTemplate) {
                var colIdx = user.grid.vgrid('columnIndex', 'State');
                if (data.status == 'success') {
                    layout.action.success(actionId, actionMsgTemplate.success.format(tr.attr('userid')));
                } else {
                    layout.action.error(actionId, actionMsgTemplate.error.format(tr.attr('userid')), data.Message);
                }
            },
            unShowMask: function () {
                $('#mask').hide();
            }
        };
        if (!window.user) {
            user.init();
            user.load();
            user.createToolbar();
            window.user = user;
        }
    });
</script>

<style>
    #tb-detail {
        text-align: left;
        padding: 1px;
        width: 800px;
        border: 1px solid black;
    }

        #tb-detail table tr th td {
            text-align: left;
            align-content: center;
            width: 300px;
        }

    .mask {
        background-color: #777;
        filter: alpha(opacity=60);
        opacity: 0.5;
        display: none;
        position: absolute;
        top: 0px;
        left: 0px;
        width: 100%;
        height: 100%;
        z-index: 100;
    }
</style>
<div class="user-panel">
    <div class="user-grid"></div>
    
</div>
<div class="assign-group-wizard">
</div>


