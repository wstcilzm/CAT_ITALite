<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.IT.Security.Core</name>
    </assembly>
    <members>
        <member name="T:Microsoft.IT.Security.Core.AzureADClaimsIdentityProvider">
            <summary>
            Implement IIdentityParser to parse Claim identity object (WIF 4.5 for Azure AD)
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.AzureADClaimsIdentityProvider.GetSecondaryCredentials">
            <summary>
            Parse identity object to retrieve subject specific information
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.ITSecurityCloudServiceConfigurationProvider">
            <summary>
            This class extends the IT Platform SDK base class provider to handle the retrieval of values
            from a Cloud Service Configuration (cscfg) file.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityCloudServiceConfigurationProvider.GetValue``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityCloudServiceConfigurationProvider.GetValue``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.IT.Security.Core.Flighting.FlightClientAdapter">
            <summary>
            Wraps the FlightClient provided by Carbon.Runtime
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Flighting.IFlightClient">
            <summary>
            Interface extracted from Flighting Library's FlightClient to help with dependency injection
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.IFlightClient.IsFeatureEnabled(System.String,Microsoft.Carbon.Flighting.Runtime.IFlightContext,Microsoft.Carbon.Flighting.Runtime.FlightEvaluationResult@)">
            <summary>
            Determines whether the provided feature is enabled for Flight
            </summary>
            <param name="featureId">The feature identifier.</param>
            <param name="context">The context parameter dictionary.</param>
            <param name="flightEvaluationResult">The flight evaluation result.</param>
            <returns>true if enabled, else false</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightClientAdapter.#ctor(Microsoft.Carbon.Flighting.Runtime.FlightClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IT.Security.Core.Flighting.FlightClientAdapter"/> class.
            </summary>
            <param name="flightClient">The flight client.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.Flighting.FlightClientAdapter.IsFeatureEnabled(System.String,Microsoft.Carbon.Flighting.Runtime.IFlightContext,Microsoft.Carbon.Flighting.Runtime.FlightEvaluationResult@)" -->
        <member name="T:Microsoft.IT.Security.Core.Flighting.FlightFactoryAdapter">
            <summary>
            Wraps the FlightFactory provided by Carbon.Runtime
            </summary>
            <remarks>The FlightFactory has to exist as a singleton across the application to be effective.</remarks>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Flighting.IFlightFactory">
            <summary>
            Interface extracted from Flighting Library's FlightFactory to help with DI
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.IFlightFactory.CreateFlightClient">
            <summary>
            Creates a FlghtClient.
            </summary>
            <typeparam name="T">Type of FlightClient</typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.IFlightFactory.Initialize(System.String,System.String,System.String,Microsoft.Carbon.Flighting.Runtime.FlightInitializationOptions)">
            <summary>
            Initializes for the specified environment name.
            </summary>
            <param name="environmentName">Name of the environment.</param>
            <param name="serviceName">Name of the service.</param>
            <param name="certificateSubjectName">Name of the certificate subject.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightFactoryAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IT.Security.Core.Flighting.FlightFactoryAdapter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightFactoryAdapter.#ctor(Microsoft.Carbon.Flighting.Runtime.FlightFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IT.Security.Core.Flighting.FlightFactoryAdapter"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightFactoryAdapter.CreateFlightClient">
            <summary>
            Creates a FlghtClient.
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.Flighting.FlightFactoryAdapter.Initialize(System.String,System.String,System.String,Microsoft.Carbon.Flighting.Runtime.FlightInitializationOptions)" -->
        <member name="T:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration">
            <summary>
            Initializes and contains the FlightingConfiguration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.CertificateSubjectForFlighting">
            <summary>
            The certificate subject for flighting. This should be a valid certificate installed on local machine under personal store.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.FlightingServiceName">
            <summary>
            The flighting service name as registered with the Universal store Carbon team
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.configPath">
            <summary>
            The configuration path
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.FixedResponse">
            <summary>
            IF set, the FlightingHelper will skip calling the Flighting Runtime and return whatever is provided via the config for this property.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.Environment">
            <summary>
            The Flighting environment where Flighting is being carried out. Not to be confused with ITA environments.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.sharedContextParametersDictionary">
            <summary>
            The shared context parameters dictionary
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.RefreshInterval">
            <summary>
            The interval (in seconds) with which the Flighting cache is refreshed from values in http://carbon portal
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.#cctor">
            <summary>
            Initializes the <see cref="T:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.AddToSharedContextParametersDictionary(System.String,System.String)">
            <summary>
            Adds or updates a context parameter to the shared context parameters dictionary. 
            To update, call this method with the same key, but updated value
            </summary>
            <param name="key">The key. Should be defined in the http://carbon portal</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.RemoveFromSharedContextParametersDictionary(System.String)">
            <summary>
            Removes from shared context parameters dictionary.
            </summary>
            <param name="key">The key to remove.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingConfiguration.ToString">
            <summary>
            This methods returns a string representation of this class.
            </summary>
            <returns>A string representation of this class.</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Flighting.FlightingHelper">
            <summary>
            Contains methods to initialize and evaluate Flighting.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Flighting.IFlightingHelper">
            <summary>
            Contains methods to initialize and evaluate Flighting.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.IFlightingHelper.IsFlighting(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Determines whether the specified feature name is flighting.
            </summary>
            <param name="featureName">Name of the feature.</param>
            <param name="contextParameters">The context parameters.</param>
            <returns>A bool value indicating the flight status</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IT.Security.Core.Flighting.FlightingHelper"/> class. Initialization is expensive, so consider using the static Instance available via the Instance property.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingHelper.#ctor(Microsoft.IT.Security.Core.Flighting.IFlightFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.IT.Security.Core.Flighting.FlightingHelper"/> class.
            </summary>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingHelper.SetFlightConfigAndInitializeFactory">
            <summary>
            Sets the flight configuration.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingHelper.GetFlightClientInstance">
            <summary>
            Gets the <see cref="T:Microsoft.Carbon.Flighting.Runtime.FlightClient"/> instance (initialized).
            </summary>
            <returns>An instance of the <see cref="T:Microsoft.Carbon.Flighting.Runtime.FlightClient"/> instance (initialized)</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingHelper.IsFlighting(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Determines whether the specified feature name is flighting.
            </summary>
            <param name="featureName">Name of the feature as specified in http://carbon portal (case sensitive).</param>
            <param name="contextParameters">The context parameters as specified in http://carbon portal (case sensitive).</param>
            <returns>A bool value indicating the flight status</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Flighting.FlightingHelper.PrintFlightingSettings">
            <summary>
            Prints the carbon library settings.
            </summary>
            <returns>A string for diagnostic purposes</returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Flighting.FlightingHelper.Instance">
            <summary>
            Gets the instance of the helper class. Initialization is expensive, so consider using this property instead of instantiating it yourself.
            </summary>
            <value>
            The shared instance of this class.
            </value>
        </member>
        <member name="T:Microsoft.IT.Security.Core.TokenInspector.BearerTokenBehavior">
            <summary>
            Endpoint behavior for Bearer Token
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.TokenInspector.BearerTokenExtensionElement">
            <summary>
            Represents a configuration element that specifies bearer token behavior extension, which enable the user to customize service or endpoint behaviors.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.TokenInspector.BearerTokenExtensionElement.CreateBehavior">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.IT.Security.Core.TokenInspector.BearerTokenExtensionElement.BehaviorType">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.IT.Security.Core.TokenInspector.BearerTokenMessageInspector">
            <summary>
            Class to validate that a valid authentication token is present in the incoming message header.
            Implementation below is done using the AAD sample at https://github.com/AzureADSamples/WebAPI-ManuallyValidateJwt-DotNet
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.TokenInspector.BearerTokenMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="channel"></param>
            <param name="instanceContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.TokenInspector.BearerTokenMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
            <summary>
            
            </summary>
            <param name="reply"></param>
            <param name="correlationState"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.TokenInspector.BearerTokenMessageInspector.AuthenticateAsync(System.String)">
            <summary>
            
            </summary>
            <param name="authHeader"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.Audit">
            <summary>
            Extenal Interface for accessing the Auditing Methods
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Audit.Write(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.IT.Security.Core.Diagnostics.AuditStatus,System.DateTime,System.String,System.String,System.String,System.String,Microsoft.IT.Security.Core.Diagnostics.SecondaryUserType,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Audit Write Method
            </summary>
            <param name="correlationId">Correlation Identifier</param>
            <param name="source">Audit Source</param>
            <param name="scenarioName">Scenario Name</param>
            <param name="xmlRequest">XML Request</param>
            <param name="context">Context</param>
            <param name="auditComponent">Audit Component</param>
            <param name="auditObject">Audit Object</param>
            <param name="auditOperation">Audit Operation</param>
            <param name="auditStatus">Audit Status</param>
            <param name="auditTimestamp">Audit TimeStamp</param>
            <param name="auditUser">Primary User</param>
            <param name="xmlResponse">XML Response</param>
            <param name="ipAddress">IP Address of the Client</param>
            <param name="message">Audit Message</param>
            <param name="secondaryUserType">Secondary User Type</param>
            <param name="secondaryUser">Secondary User</param>
            <param name="callerRealm">caller's authentication realm</param>
            <param name="secondUserRealm">second user's authentication realm</param>
            <param name="namedProtectionDomains">list of named protection domains</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Audit.WriteAudit(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Auditing DAL call
            </summary>
            <param name="correlationId">Correlation Identifier</param>
            <param name="source">Audit Source</param>
            <param name="scenarioName">Scenario Name</param>
            <param name="xmlRequest">XML Request</param>
            <param name="context">Context</param>
            <param name="auditComponent">Audit Component</param>
            <param name="auditObject">Audit Object</param>
            <param name="auditOperation">Audit Operation</param>
            <param name="auditStatus">Audit Status</param>
            <param name="auditTimestamp">Audit TimeStamp</param>
            <param name="auditUser">Primary User</param>
            <param name="xmlResponse">XML Response</param>
            <param name="ipAddress">IP Address of the Client</param>
            <param name="message">Audit Message</param>
            <param name="secondaryUserType">Secondary User Type</param>
            <param name="secondaryUser">Secondary User</param>
            <param name="callerRealm">caller's authentication realm</param>
            <param name="secondUserRealm">second user's authentication realm</param>
            <param name="namedProtectionDomains">list of named protection domains</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.DALHelper">
            <summary>
            Auditing DAL Helper class
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.DALHelper.spAuditIns">
            <summary>
            Audit Stored Procedure name
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.DALHelper.SaveAudit(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Save the Audit data to Infrastructure database 
            </summary>
            <param name="correlationId">Correlation Identifier</param>
            <param name="source">Audit Source</param>
            <param name="scenarioName">Scenario Name</param>
            <param name="xmlRequest">XML Request</param>
            <param name="context">Context</param>
            <param name="auditComponent">Audit Component</param>
            <param name="auditObject">Audit Object</param>
            <param name="auditOperation">Audit Operation</param>
            <param name="auditStatus">Audit Status</param>
            <param name="auditTimestamp">Audit TimeStamp</param>
            <param name="auditUser">Primary User</param>
            <param name="xmlResponse">XML Response</param>
            <param name="ipAddress">IP Address of the Client</param>
            <param name="message">Audit Message</param>
            <param name="secondaryUserType">Secondary User Type</param>
            <param name="secondaryUser">Secondary User</param>
            <param name="callerRealm">caller's authentication realm</param>
            <param name="secondUserRealm">second user's authentication realm</param>
            <param name="namedProtectionDomains">list of named protection domains</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Caching.CachingManager">
            <summary>
            AppFabric Helper class.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.RegionName">
            <summary>
            Region name
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.namedCacheCollection">
            <summary>
            Dictionary of named DataCache objects
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.cacheInitilizationRetryDelay">
            <summary>
            The amount of time to wait before attempting retry of cache initialization.  Defaults to 1 minute if not specified.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.cacheRetryDelay">
            <summary>
            The amount of time to wait before attempting retry of cache operation.  Defaults to 1ms (no delay) if not specified.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.maxCacheAttempts">
            <summary>
            The number of times to attempt access to the cache.  This value represents the original attempt plus retries. Default is 3.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.cacheValid">
            <summary>
            Flag indicating cache validity
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.validationTimer">
            <summary>
            Timer used to make cache valid after a defined amount of time
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.initializationTimer">
            <summary>
            Timer used to call Initialize() to create static instances if initialization failed after a defined amount of time
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.timerLock">
            <summary>
            Synchronizing object used to set lock timer and cacheValid
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.dictionaryLock">
            <summary>
            Lock used to lock namedCacheCollection dictionary access
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.cacheFactory">
            <summary>
            Data Cache Factory.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.defaultCache">
            <summary>
            Default cache used when named cache is not supported.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Caching.CachingManager.guid">
            <summary>
            Identify the static instance of this class.
            This value will be changed if this hosting process recycled. e.g., IIS resets or App Pool recycled.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Initialize">
            <summary>
            Initialize static instances used to connect cache service.
            Will retry after a specified amount of time if initialization failed.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.#ctor">
            <summary>
            Hidden public constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.IsCacheValid">
            <summary>
            Gets the value of cacheValid property
            </summary>
            <returns>The value of cacheValid property</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.CreateNamedDataCache(System.String)">
            <summary>
            Create a named data cache and add it to the data cache collection
            </summary>
            <param name="cacheName">Name of the cache.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.SetCacheInvalid">
            <summary>
            This method is called each time an exception occurs during a Get/Put/Remove call
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.SetCacheValid(System.Object)">
            <summary>
            This method is called by the timer delegate after the retry interval has elapsed
            </summary>
            <param name="state">State to persist</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.PerformRetryableOperation(System.String,System.String,System.String,System.Action)">
            <summary>
            This is an 'enclosure' method that puts a try/catch wrapper and a while loop around a passed in anonymous delegate
            so that we can implement retry and logging logic in a single place.
            </summary>
            <param name="key">
            The key to the cache item that is being processed.  Used here only for logging.
            </param>
            <param name="cacheName">
            The name of the cache that is being processed.  Used here only for logging.
            </param>
            <param name="operation">
            The cache operation being performed.  Used here only for logging.
            </param>
            <param name="callback">
            An anonymous delegate that is invoked to perform the desired cache action.
            </param>
            <returns>
            True if the cache operation was successful (even if it took multiple retries to succeed, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Get(System.String)">
            <summary>
            Get cached item.
            </summary>
            <param name="key">Cache key.</param>
            <returns>An object from cache if found. Null otherwise.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Get(System.String,System.String)">
            <summary>
            Get cached item from named cache.
            </summary>
            <param name="key">Cache key.</param>
            <param name="cacheName">Name of the cache.</param>
            <returns>An object from cache if found. Null otherwise.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Remove(System.String)">
            <summary>
            Remove cached item.
            </summary>
            <param name="key">Cache key.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Remove(System.String,System.String)">
            <summary>
            Remove cached item.
            </summary>
            <param name="key">Cache key.</param>
            <param name="cacheName"> Name of the cache from which to remove key</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Put(System.String,System.Object)">
            <summary>
            Puts the specified item in cache.
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Put(System.String,System.Object,System.String)">
            <summary>
            Puts the specified item in a named cache.
            </summary>
            <param name="key">The key.</param>
            <param name="item">The item.</param>
            <param name="cacheName">Name of the cache.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Caching.CachingManager.Put(System.String,System.Object,System.Int32)">
            <summary>
            Put item in cache with specified expiration time.
            </summary>
            <param name="key">Cache key.</param>
            <param name="item">Object to add/insert in cache.</param>
            <param name="timeoutDuration">Expiration time out in minutes.</param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Caching.CachingManager.CacheRetryOnFailureIntervalInMinutes">
            <summary>
            Gets the value of cache retry on failure interval
            </summary>
            <value>Cache Retry On Failure Interval in Minutes</value> 
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CharacterSet">
            <summary>
            This class represents a resuable set of characters that can be referenced from a <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationPattern"/> or a
            <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> in order to form a set of allowed or disallowed characters with which to validate a data entity.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CharacterSet.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CharacterSet.Initialize">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CharacterSet.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CharacterSet.Name">
            <summary>
            Gets and sets the name of the CharacterSet.  This name must be unique and is used by <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> instances to refer to a 
            set of validation and canonicalization patterns that can be reused.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CharacterSet.Description">
            <summary>
            Gets and sets a human readable description of characters that are defined by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CharacterSet.Characters">
            <summary>
            Gets and sets the set of characters that are defined by this instance.  This field should be formatted following the rules of
            a regular expression for character sets that are represented like [a-zA-Z0-9].  Do not include the square brackets, just the characters.
            For example: "a-zA-Z0-9"
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CharacterSetCollection">
            <summary>
            Represents a collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.CharacterSet"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CharacterSetCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CharacterSetCollection.Initialize(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <param name="dataDictionary">
            The instance of the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataDictionary"/> class that contains the instance being initialized.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown when any violation of internal data state is detected.
            </exception>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias">
            <summary>
            A static class that provides the names of all <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> Aliases used within a single application.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.AttributeName">
            <summary>
            A string with the value 'AttributeName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.AttributeValue">
            <summary>
            A string with the value 'AttributeValue' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.AllowNullInListInputParameter">
            <summary>
            A string with the value 'AllowNullInListInputParameter' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.AllowNullInputParameter">
            <summary>
            A string with the value 'AllowNullInputParameter' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.AutoRoleAssignmentExclusionList">
            <summary>
            A string with the value 'AutoRoleAssignmentExclusionList' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.BusinessStatus">
            <summary>
            A string with the value 'BusinessStatus' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.DefaultStringInputParameter">
            <summary>
            A string with the value 'DefaultStringInputParameter' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.DefaultListInputParameter">
            <summary>
            A string with the value 'DefaultListInputParameter' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.DefaultCollectionPropertyOptional">
            <summary>
            A string with the value 'DefaultCollectionPropertyOptional' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.DefaultCollectionPropertyRequired">
            <summary>
            A string with the value 'DefaultCollectionPropertyRequired' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.DefaultClassInputParameter">
            <summary>
            A string with the value 'DefaultClassInputParameter' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.Description">
            <summary>
            A string with the value 'Description' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.DomainValue">
            <summary>
            A string with the value 'DomainValue' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.DomainValueType">
            <summary>
            A string with the value 'DomainValueType' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.Email">
            <summary>
            A string with the value 'Email' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.EnumNotNone">
            <summary>
            A string with the value 'EnumNotNone' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.EnvironmentName">
            <summary>
            A string with the value 'EnvironmentName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ExpandedListInputParameter">
            <summary>
            A string with the value 'ExpandedListInputParameter' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.NpdNameRequired">
            <summary>
            A string with the value 'NpdNameRequired' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.NpdNameOptional">
            <summary>
            A string with the value 'NpdNameOptional' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ListInputParameterCorporatePemissions">
            <summary>
            A string with the value 'ListInputParameterCorporatePemissions' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.Operation">
            <summary>
            A string with the value 'Operation' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.Phone">
            <summary>
            A string with the value 'Phone' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ProvisioningSystem">
            <summary>
            A string with the value 'ProvisioningSystem' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ResourceNameRequired">
            <summary>
            A string with the value 'ResourceNameRequired' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ResourceNameOptional">
            <summary>
            A string with the value 'ResourceNameOptional' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.RoleName">
            <summary>
            A string with the value 'RoleName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.RealmName">
            <summary>
            A string with the value 'RealmName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.RoleTags">
            <summary>
            A string with the value 'RoleTags' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SearchAttributeName">
            <summary>
            A string with the value 'SearchAttributeName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SearchAttributeValue">
            <summary>
            A string with the value 'SearchAttributeValue' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SearchName">
            <summary>
            A string with the value 'SearchName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SearchExtendedName">
            <summary>
            A string with the value 'SearchExtendedName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SearchNamedProtectionDomainName">
            <summary>
            A string with the value 'SearchNamedProtectionDomainName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SearchResourceName">
            <summary>
            A string with the value 'SearchResourceName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SubjectKey">
            <summary>
            A string with the value 'SubjectKey' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.SearchSubjectKey">
            <summary>
            A string with the value 'SearchSubjectKey' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.UserPrincipalName">
            <summary>
            A string with the value 'UserPrincipalName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.TargetValue">
            <summary>
            A string with the value 'TargetValue' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.VersionWithMin">
            <summary>
            A string with the value 'VersionWithMin' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.VersionWithMinMax">
            <summary>
            A string with the value 'VersionWithMinMax' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.VersionWithMax">
            <summary>
            A string with the value 'VersionWithMax' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ScopeTypeName">
            <summary>
            A string with the value 'ScopeTypeName' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ListInputParameterScopeTypeDomainValueCollection">
            <summary>
            A string with the value 'ListInputParameterScopeTypeDomainValueCollection' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.ScopeTypeDomainValue">
            <summary>
            A string with the value 'ScopeTypeDomainValue' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.WindowsDomain">
            <summary>
            A string with the value 'WindowsDomain' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.UIOnlyNOP">
            <summary>
            A string with the value 'UIOnlyNOP' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.UIOnlyVersionString">
            <summary>
            A string with the value 'UIOnlyVersionString' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryAlias.UIOnlyAttributeSource">
            <summary>
            A string with the value 'UIOnlyAttributeSource' that is the Alias that uniquely identifies a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.EntityHelper">
            <summary>
            Helper methods to validate entities
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.EntityHelper.ToXml``1(System.Collections.Generic.IList{``0})">
            <summary>
            Convert an array of entities into Xml using DataContractSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.EntityHelper.ToXml``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            Convert an array of entities into Xml using DataContractSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.EntityHelper.ToXml``1(System.Collections.Generic.IList{``0},System.String,System.Boolean)">
            <summary>
            Convert an array of entities into Xml using DataContractSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.EntityHelper.ToXml``2(System.Collections.Generic.IList{``0},``1,System.String,System.String)">
            <summary>
            Convert an array of entities into Xml using DataContractSerializer.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ICustomCanonicalizer.CanonicalizationRaisedHandler(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs)">
            <summary>
            Defines an event handler that is capable of hooking into the DataValidator.CanonicalizationRaised event in order to provide custom 
            canonicalization for data entities.  This event is useful for ensuring collections are not null or for setting default values.
            This event will be called only once for each object instance and the implementation must adjust instance properties accordingly.
            </summary>
            <param name="sender">
            The originator of the event (typically the default <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataValidator"/>).
            </param>
            <param name="e">
            The event arguments containing the context information required for handling of the event.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ICustomValidator.ValidationRaisedHandler(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs)">
            <summary>
            Defines an event handler that is capable of hooking into the DataValidator.ValidationRaised event in order to provide custom 
            validation for data entities.
            </summary>
            <param name="sender">
            The originator of the event (typically the default <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataValidator"/>).
            </param>
            <param name="e">
            The event arguments containing the context information required for handling of the event.
            </param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ObjectOperationType">
            <summary>
            Define object operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ObjectOperationType.None">
            <summary>
            default
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ObjectOperationType.Create">
            <summary>
            Create operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ObjectOperationType.Update">
            <summary>
            Update operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ObjectOperationType.Delete">
            <summary>
            Delete operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ObjectOperationType.Add">
            <summary>
            Add operation
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.SubjectAccountType">
            <summary>
            SubjectAccountType enumeration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SubjectAccountType.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SubjectAccountType.User">
            <summary>
            User
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SubjectAccountType.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SubjectAccountType.Machine">
            <summary>
            Machine
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SubjectAccountType.Certificate">
            <summary>
            Certificate
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.SubjectAlternateIdType">
            <summary>
            SubjectAlternateIdType enumeration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SubjectAlternateIdType.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SubjectAlternateIdType.PersonnelNumber">
            <summary>
            User
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.ClaimIdentityIdentityProvider">
            <summary>
            Implement IIdentityParser to parse Claim identity object (Geneva token)
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.ClaimIdentityIdentityProvider.GetSecondaryCredentials">
            <summary>
            Parse identity object to retrieve subject specific information
            </summary>
            <param name="request">object passed in access control request.</param>
            <param name="identity">Identity object holding subject specific information</param>
            <param name="context">context with correlation id, etc</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.Credential.GetRealm(System.String)" -->
        <member name="M:Microsoft.IT.Security.Core.Credential.ConvertBytesToHexadecimalString(System.Byte[])">
            <summary>
            Converts byte array into hexadecimal string of X2
            </summary>
            <param name="byteValues">byte arrays</param>
            <returns>Hexadecimal string</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Credential.ParseIssuer(System.String)">
            <summary>
            returns issuer name and removes cn= expression
            </summary>
            <param name="issuer">issuer</param>
            <returns>returns issuer name</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Credential.ParseAlias(System.String)">
            <summary>
            returns domain name
            </summary>
            <param name="alias">alias</param>
            <returns>returns domain name</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Credential.ParseEmailAddress(System.String)">
            <summary>
            returns domain name
            </summary>
            <param name="emailAddress">Email Address</param>
            <returns>returns domain name</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.CustomContext">
            <summary>
            <c>CustomContext</c> class stores information related to current operation. This is information is used for logging and auditing.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.CorrelationId">
            <summary>
            Public accessor for attributeId.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.CallerId">
            <summary>
            Public accessor for callerId.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.Caller">
            <summary>
            Public accessor for Caller.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.OnBehalfUser">
            <summary>
            Public accessor for On Behalf User.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.ScenarioName">
            <summary>
            Public accessor for ScenarioName.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.EventId">
            <summary>
            eventid is used for logging
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.Component">
            <summary>
            component is used for logging
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.Entity">
            <summary>
            entity is used for logging
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.Operation">
            <summary>
            operation is used for logging
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.TracingScenario">
            <summary>
            Tracing Scenario
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.CustomContext.EndpointAddress">
            <summary>
            Endpoint Address for logging
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.CustomMessageHeaders">
            <summary>
            Custom Message header class for reading and writing 
            the correlationId, callerId, caller JWT token to the WCF message headers
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.CheckCorrelationId(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Checks the incoming message headers for the correlationid,
            if it exists, it returns the same correlationId,
            else, it creates a new correlationId
            </summary>
            <param name="context">custom context with correlation id</param>
            <returns>Guid</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.AddCorrelationId(System.ServiceModel.OperationContext,System.Guid)">
            <summary>
            Adds the correlationId to the out going message header
            </summary>
            <param name="operationContext"></param>
            <param name="outgoingCorrelationId"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.CheckCallerId(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Checks the incoming message headers for the caller identifer,
            if it exists, it returns the same caller credential,
            </summary>
            <param name="context">Custon context with caller Id.</param>
            <returns>Guid</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.CheckCaller(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Checks the incoming message headers for the caller credential,
            if it exists, it returns the same caller credential,
            </summary>
            <param name="context">Custom context with caller Id.</param>
            <returns>Caller credentials</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.CheckOnBehalfUser(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Checks the incoming message headers for the onbehalfuser,
            if it exists, it returns the onbehalfuser credential,
            else, it creates a new callerId
            </summary>
            <param name="context">Custom context with caller Id.</param>
            <returns>On behalf of caller credentials</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.AddCallerId(System.ServiceModel.OperationContext,System.Guid)">
            <summary>
            Adds the callerId to the out going message header.
            </summary>
            <param name="operationContext">Operation context instance.</param>
            <param name="outgoingCallerId">Caller Id to be added as part of outgoing call.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.GetPrimaryIdentity">
            <summary>
            Populates the Primary Identity.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.GetPrimaryIdentityFromHttpContext">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.CustomMessageHeaders.AddCallerToken(System.ServiceModel.OperationContext,System.String)">
            <summary>
            Adds the caller token to the out going message header.
            </summary>
            <param name="operationContext">Operation context instance.</param>
            <param name="outgoingCallerToken">JWT authorization token of the caller to be added as part of outgoing call.</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeDataType">
            <summary>
            Define Attribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.String">
            <summary>
            XmlSchema#string
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.Boolean">
            <summary>
            XmlSchema#boolean
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.Integer">
            <summary>
            XmlSchema#integer
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.Double">
            <summary>
            XmlSchema#double.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.Date">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.DayTimeDuration">
            <summary>
            WDxqueryoperators20020816dayTimeDuration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.YearMonthDuration">
            <summary>
            WD-xquery-operators-20020816#yearMonthDuration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.AnyUri">
            <summary>
            XmlSchemaanyURI
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.HexBinary">
            <summary>
            HexBinary
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.Base64Binary">
            <summary>
            XmlSchemabase64Binary
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.Rfc822Name">
            <summary>
            rfc822Name
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.X500Name">
            <summary>
            x500Name
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.IPAddress">
            <summary>
            IPAddress
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.DnsName">
            <summary>
            DnsName
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeDataType.StringCommaSeparated">
            <summary>
            StringCommaSeparated
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeEntity">
            <summary>
            Support generic attribute definition.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.Entity">
            <summary>
                Base class for all Access Administration classes.
                <para>
                    Entity contains definitions of properties and methods which are common to all classes in Access Administration.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.IEntity">
            <summary>
                Interface definition for all Access Administration classes.
                <para>
                    IEntity contains definitions of properties and methods which are common to all classes in Access Administration.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.IEntity.Status">
            <summary>
                Gets/Sets the status of the entity represented by the object.
                <para>
                    The status is used internall by services and data-access layer for logical transaction management and soft-deletes. It is not exposed to 
                    the consumers of service.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Entity.ToXml">
            <summary>
            Creates xml representation of entity.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Entity.Status">
            <summary>
                Gets/Sets the status of the entity represented by the object.
                <para>
                    The status is used internally by services and data-access layer for logical transaction management and soft-deletes. It is not exposed to 
                    the consumers of service.
                </para>
            </summary>                
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ICoreBusinessObject">
            <summary>
            Define common interface which will be implemented by core components. 
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ICoreBusinessObject.ExtractObjectScope(System.String)">
            <summary>
            Extract business object's scope. 
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.newAttributeKey">
            <summary>
            new AttributeKey is used to change the key
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.attributeKey">
            <summary>
            AttributeKey
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.attributeIssuer">
            <summary>
            Attribute issuer is issuing Authority of this Attribute.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.attributeDescription">
            <summary>
            Indicate attribute name.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.attributeType">
            <summary>
            Indicate type of an Attribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.dataType">
            <summary>
            Attribute data type, such as primitive (string, int) or any XACML Attribute Data types.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.domainValueSourceXml">
            <summary>
            Domain Value source XML to fetch the values to Update Domain values.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.query">
            <summary>
            Query is used to fetch the Attribute values from defined sources.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.isGlobal">
            <summary>
            isGlobal is to specify whether the attribute is public or not.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.status">
            <summary>
            status.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.attributeId">
            <summary>
            Internal GUID assigned for the attribute.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.domainValues">
            <summary>
            Domain Values
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.consumerNpds">
            <summary>
            consumer NPDs of this attribute.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.ownerNpds">
            <summary>
            Owner NPDs of this attribute.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.AddDomainValue(System.String)">
            <summary>
            Adding Domain value.
            </summary>
            <param name="attributeSource"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.RemoveDomainValue(System.String)">
            <summary>
            Remove domain value
            </summary>
            <param name="ownerNpd"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.AddConsumerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Adding Consumer Named Protection Domain
            </summary>
            <param name="attributeSource"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.RemoveConsumerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Remove Consumer Named protection Domain.
            </summary>
            <param name="ownerNpd"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.AddOwnerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Adding owner Named Protection Domain
            </summary>
            <param name="attributeSource"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.RemoveOwnerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Remove Owner Named protection Domain.
            </summary>
            <param name="ownerNpd"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.ValidationRaisedHandler(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.ValidateQueryXML(System.String,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to Validate Query XML against to Query XSD.
            </summary>
            <param name="source"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.Equals(Microsoft.IT.Security.Core.DataEntities.AttributeEntity)">
            <summary>
            Override default equals functin to compare attribute entity content
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.ExtractObjectScope(System.String)">
             <summary>
            
             </summary>
             <param name="entityAction"></param>
             <returns></returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.AttributeKey">
            <summary>
            AttributeKey
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.NewAttributeKey">
            <summary>
            NewAttributeKey
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.Issuer">
            <summary>
            AttributeIssuer. Its mandatory property to specify
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.AttributeDescription">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.AttributeType">
            <summary>
            AttributeType. Its mandatory property to specify
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.DataType">
            <summary>
            Public accessor for dataType.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.DomainValueSourceXml">
            <summary>
            Public accessor for Domain Value Source XML.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.Query">
            <summary>
            Query is used to fetch the values from defined sources
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.IsGlobal">
            <summary>
            Public accessor for Scope. if isGlobal is true consumer NPD list will be empty.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.Status">
            <summary>
            Public accessor for status.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.DomainValues">
            <summary>
            Public accessor for Domain Values.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.ConsumerNamedProtectionDomains">
            <summary>
            Public accessor for consumer NPDs..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.OwnerNamedProtectionDomains">
            <summary>
            Public accessor for Owner NPDs..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeEntity.AttributeId">
            <summary>
            Public accessor for attributeId.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeKey">
            <summary>
            Attribute key - To identify the attribute uniquely. Attribute key has URN.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeKey.attributeName">
            <summary>
            Indicate the Name of the  Attribute.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeKey.ToXml">
            <summary>
            Convert RuleKey to Xml
            </summary>
            <returns>Xml representation of RuleKey</returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeKey.AttributeName">
            <summary>
            Attribute Name to uniquely Identify.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria">
            <summary>
            Attribute Search Criteria
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.AttributeName">
            <summary>
            Attribute  name
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.AttributeIssuerName">
            <summary>
            Attribute IssuerName
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.AttributeType">
            <summary>
            Attribute Type
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.ConsumerNamedProtectionDomainName">
            <summary>
            Gets or sets the name of the consumer named protection domain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.IsGlobal">
            <summary>
            Is Global
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.OwnerNamedProtectionDomainName">
            <summary>
            Gets or sets the name of the owner named protection domain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.SystemRoleName">
            <summary>
            System Role Name
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria.UsedByNamedProtectionDomainName">
            <summary>
            Used by NamedProtectionDomainName
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer">
            <summary>
            Support generic attribute source definition, specify where to retrieve
            the specific attribute value.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.issuerKey">
            <summary>
            Attribute Issuer key
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.newIssuerKey">
            <summary>
            New issuer key in the case of update
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.status">
            <summary>
            To track the status
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.ownerNamedProtectionDomains">
            <summary>
            AttributeIssuer OwnerNPDs
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.consumerNpds">
            <summary>
            AttributeIssuer Consumer NPDs
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.attributeSourceList">
            <summary>
            AttributeSources
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.attributesList">
            <summary>
            AttributeSources
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.AddOwnerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Adding owner Named Protection Domain
            </summary>
            <param name="attributeSource"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.RemoveOwnerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Remove Owner Named protection Domain.
            </summary>
            <param name="ownerNpd"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.AddConsumerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Adding Consumer Named Protection Domain
            </summary>
            <param name="attributeSource"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.RemoveConsumerNamedProtectionDomain(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain)">
            <summary>
            Remove Consumer Named protection Domain.
            </summary>
            <param name="ownerNpd"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.AddAttributeSource(Microsoft.IT.Security.Core.DataEntities.AttributeSource)">
            <summary>
            Add Attribute Source
            </summary>
            <param name="attributeSource"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.RemoveAttributeSource(Microsoft.IT.Security.Core.DataEntities.AttributeSource)">
            <summary>
            Remove Attribute Source
            </summary>
            <param name="attributeSource"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.AddAttribute(Microsoft.IT.Security.Core.DataEntities.AttributeEntity)">
            <summary>
            Add Attribute 
            </summary>
            <param name="attributeEntity"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.RemoveAttribute(Microsoft.IT.Security.Core.DataEntities.AttributeEntity)">
            <summary>
            Remove Attribute 
            </summary>
            <param name="attributeEntity"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.Equals(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer)">
            <summary>
            Equals
            </summary>
            <param name="otherIssuer"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.GetIsDefaultCount(System.Collections.Generic.List{Microsoft.IT.Security.Core.DataEntities.AttributeSource})">
            <summary>
            To get the count of sources where isDefault = true;
            </summary>
            <param name="attributeSourceList"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.AttributeIssuerKey">
            <summary>
            Attribute Issuer Key
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.NewAttributeIssuerKey">
            <summary>
            NewAttributeKey
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.Status">
            <summary>
             To track the status
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.IsGlobal">
            <summary>
            Public accessor for Scope. if isGlobal is true consumer NPD list will be empty.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.IsOwner">
            <summary>
            whether the Issuer is owned by current user as BDM
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.OwnerNamedProtectionDomains">
            <summary>
            Owner Named protection Domain
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.ConsumerNamedProtectionDomains">
            <summary>
            Public accessor for consumer NPDs..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.AttributeSources">
            <summary>
            Attribute sources
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuer.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerKey">
            <summary>
            AttributeIssuer key - To identify the attributeIssuer uniquely.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerKey.issuerName">
            <summary>
            Name of the Issuer
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerKey.ToXml">
            <summary>
            Convert RuleKey to Xml
            </summary>
            <returns>Xml representation of RuleKey</returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerKey.IssuerName">
            <summary>
            Public accessor for Issuer Name.
            </summary>        
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria">
            <summary>
            Attribute Issuer Search Criteria
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria.attributeIssuerName">
            <summary>
            The Attribute Issuer Name
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria.AttributeIssuerName">
            <summary>
            Attribute IssuerName
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria.ConsumerNamedProtectionDomainName">
            <summary>
            Gets or sets the name of the consumer named protection domain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria.IsGlobal">
            <summary>
            Is Global
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria.OwnerNamedProtectionDomainName">
            <summary>
            Gets or sets the name of the owner named protection domain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria.SystemRoleName">
            <summary>
            System Role Name
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria.UsedByNamedProtectionDomainName">
            <summary>
            Used by NamedProtectionDomainName
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeScopeType">
            <summary>
            Define Attribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeScopeType.WithinSameNpd">
            <summary>
            WithinSameNPD
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeScopeType.OnlyAncestorNpd">
            <summary>
            OnlyAncestorNPD
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeScopeType.OnlyDescendantNpd">
            <summary>
            OnlyDescendantNPD
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeScopeType.SameNpdHierarchy">
            <summary>
            SameNPDHierarchy.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeSource">
            <summary>
            Support generic attribute source definition, specify where to retrieve
            the specific attribute value.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeSource._isDefault">
            <summary>
            Indicate whether attribute source is defaul attribute source for associated attribute.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeSource.source">
            <summary>
            Specify location of attribute source and any other required information by the attribute source,
            source is formatted as Xml.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeSource.operation">
            <summary>
            operation flag for database operation
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeSource.ExtractObjectScope(System.String)">
            <summary>
            ExtractObjectScope to extract scope of business object
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.AttributeSource.ValidationRaisedHandler(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSource.IsDefault">
            <summary>
            Public accessor for defaultAttributeSource.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.IT.Security.Core.DataEntities.AttributeSource.SourceName" -->
        <!-- Badly formed XML comment ignored for member "P:Microsoft.IT.Security.Core.DataEntities.AttributeSource.NewSourceName" -->
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSource.Source">
            <summary>
            Public accessor for source.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSource.Status">
            <summary>
            Public accessor for status.
            </summary>        
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.AttributeSource.Operation">
            <summary>
            Public accessor for operation.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.AttributeType">
            <summary>
            Define Attribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeType.Subject">
            <summary>
            Subject
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeType.Resource">
            <summary>
            Resource
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeType.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.AttributeType.Environment">
            <summary>
            Environment.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern">
            <summary>
            This class represents a match/replace pattern pair which is applied to a property value in order to normalize the
            representation of the data into a canonical form.  For example, this can be used for the extraction of leading, 
            embedded and trailing whitespace.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.Initialize">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.Name">
            <summary>
            Gets and sets the logical name for the canonicalization pattern.  Name values must be unique within the data dictionary 
            <see cref="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.CanonicalizationPatterns"/>
            collection of meta-data.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.Description">
            <summary>
            Gets and sets a human readable description of the match/replace pattern pair.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.MatchPattern">
            <summary>
            Gets and sets the regular expression which will be used to locate patterns which are to be replaced with 
            the <see cref="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.ReplacePattern"/>.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.ReplacePattern">
            <summary>
            Gets and sets the which will be used to replace the patterns which are located by 
            the <see cref="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.MatchPattern"/>.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.RegexOptions">
            <summary>
            Gets and sets the <see cref="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.RegexOptions"/> that should be used to evaluate the Regex expression.  Default is RegexOptions.None.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.Regex">
            <summary>
            Gets a reusable <see cref="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern.Regex"/> object instance to be used for performing the match function.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternCollection">
            <summary>
            A collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern"/> object instances.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternCollection.Initialize(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <param name="dataDictionary">
            The instance of the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataDictionary"/> class that contains the instance being initialized.
            </param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReference">
            <summary>
            This class represents a reference to a <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern"/>.  
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReference.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReference.Initialize">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when any violation of internal data state is detected.  This class requires the Name property not be null or empty.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReference.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReference.Name">
            <summary>
            Gets and sets the unique name assigned to the <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern"/> to which this instance refers.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReferenceCollection">
            <summary>
            A collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReference"/> object instances.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReferenceCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReferenceCollection.Initialize(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when the collection contains an reference that cannot be found in the collection of CanonicalizationPatterns.
            </exception>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CertificateIdentity">
            <summary>
            Custom Certificate Identity 
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CertificateIdentity.certificate">
            <summary>
            Represents an X.509 certificate.  
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CertificateIdentity.AuthenticationType">
             <summary>
            The type of authentication used. 
             </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CertificateIdentity.IsAuthenticated">
            <summary>
            Value that indicates whether the user has been authenticated. 
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CertificateIdentity.Name">
            <summary>
            The name of the current user. 
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CertificateIdentity.Certificate">
            <summary>
            The X.509 certificate. 
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.Clr40EnumEmulationExtensions">
            <summary>
            This class supplies some extension methods to replace existing .NET 4.0 functionality in a project compiled and targeted for V3.5.
            Once we can compile against V4.0 we can delete this class without needing to change any source.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Clr40EnumEmulationExtensions.HasFlag(Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.DataEntities.ValidationActions)">
            <summary>
            Extension method for use when targeting .NET V3.5 or lower that emulates .NET 4.0 functionality for enums.
            </summary>
            <param name="validationActions">The value you want to test.</param>
            <param name="flagsToLookFor">The value you want to test for.</param>
            <returns>True if all the bits of the <paramref name="flagsToLookFor"/> parameter are present in the <paramref name="validationActions"/> value, false otherwise. </returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm">
            <summary>
            Enforcement combining algorithm enumeration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.None">
            <summary>
            This indicates None as default value for enum
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.DenyOverrides">
            <summary>
            This indicates deny overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.PermitOverrides">
            <summary>
            This indicates permit overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.FirstApplicable">
            <summary>
            This indicates first applicable combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.OrderedDenyOverrides">
            <summary>
            This indicates ordered deny overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.OrderedPermitOverrides">
            <summary>
            This indicates ordered permit overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.AllPermit">
            <summary>
            This indicates custom combining algorithm that only when all children having permit, then return permit, otherwise retrun not applicable
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.PolicyCombiningAlgorithm.OnlyOneApplicable">
            <summary>
            This indicates only one applicable combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.RuleCombiningAlgorithm.None">
            <summary>
            This indicates None as default value for enum
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.RuleCombiningAlgorithm.DenyOverrides">
            <summary>
            This indicates deny overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.RuleCombiningAlgorithm.PermitOverrides">
            <summary>
            This indicates permit overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.RuleCombiningAlgorithm.FirstApplicable">
            <summary>
            This indicates first applicable combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.RuleCombiningAlgorithm.OrderedDenyOverrides">
            <summary>
            This indicates ordered deny overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.RuleCombiningAlgorithm.OrderedPermitOverrides">
            <summary>
            This indicates ordered permit overrides combining algorithm in XACML specification
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.RuleCombiningAlgorithm.AllPermit">
            <summary>
            This indicates custom combining algorithm that only when all children having permit, then return permit, otherwise retrun not applicable
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.CommonConstants">
            <summary>
            Common Component Constant definitions.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeNotExistExceptionErrorCode">
            <summary>
            AttributeNotExistExceptionErrorCode
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.DuplicateAttributeTypeFound">
            <summary>
            DuplicateAttributeTypeFound
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeCreateDatabaseFail">
            <summary>
            AttributeCreateDatabaseFail
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeUpdateDatabaseFail">
            <summary>
            AttributeUpdateDatabaseFail
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeDeleteDatabaseFail">
            <summary>
            AttributeDeleteDatabaseFail
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeGetDatabaseFail">
            <summary>
            AttributeGetDatabaseFail
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeNewKeyNotSet">
            <summary>
            NewAttributeKeyNotSet
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeKeyNotSet">
            <summary>
            AttributeKeyNotSet
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeIssuerCount">
            <summary>
            AttributeIssuerCount
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeTypeNotFound">
            <summary>
            AttributeTypeNotFound
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributesNull">
            <summary>
            AttributesNull
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeNotSet">
            <summary>
            Attribute Not Set Error Code
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.ResourceNotSet">
            <summary>
            Resource Not Set Error Code
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeAlreadyAssignedExErrCode">
            <summary>
            Attribute already assigned to Resource.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AssignAttributeToResourceExceptionErrorCode">
            <summary>
            Assign Rules To Policy ErrorCode
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.NamedProtectionDomainDoesNotExist">
            <summary>
            NamedProtectionDomainDoesNotExist
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeSearchDatabaseExceptionErrorCode">
            <summary>
            AttributeSearchDatabaseExceptionErrorCode
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.UnassignAttributeFromResourceExceptionErrorCode">
            <summary>
            UnAssign Attributes From Resource Exception ErrorCode
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeDataTypeNotFound">
            <summary>
            AttributeDataType Not Found
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeScopeNotFound">
            <summary>
            AttributeScope Not Found
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeScopeError">
            <summary>
            AttributeScopeError
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeReferenceError">
            <summary>
            AttributeReferenceError
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeIssuerDuplicateError">
            <summary>
            Attribute Issuer Duplicate Error
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeScopeBusinessError">
            <summary>
            Attribute Scope business error
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeTypeBusinessError">
            <summary>
            Attribute Type business error.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeSourceSchemaError">
            <summary>
            Attribute Souce Schema Error
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeSourceXmlInvalidError">
            <summary>
            Attribute Source Xml InvalidError
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeFullyQualifiedNameSetError">
            <summary>
            Attribute FQDN Set Error
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeScopeMessage">
            <summary>
            AttributeScopeMessage
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeReferenceMessage">
            <summary>
            AttributeReferenceMessage
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeIssuerDuplicateMessage">
            <summary>
            AttributeIssuerDuplicateMessage
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeDuplicateMessage">
            <summary>
            AttributeDuplicateMessage
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.AttributeDoesNotExistMessage">
            <summary>
            Attribute DoesNot ExistMessage
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.SchemaValidationEventId">
            <summary>
            Schema Validation Event ID.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.CommonConstants.CreateAttributeEventId">
            <summary>
            Attribute Event Identifier
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.CommonConstants.ComponentPath">
            <summary>
            Defines path value to get component value from CM. It Can be RA or PA based on the Service invocation
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.DataDictionary">
            <summary>
            This class represents the programming model for the IT Authorize data validation dictionary.  Rules, allowed
            character specifications, canonicalization patterns and other data characteristics such as minimum length or value
            and nullability are defined in meta-data that is used to formulate this model.  The class provides the 
            necessary methods and properties required to interact with other validation, canonicalization and parsing classes.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.DataDictionary.TrimWhitespacePatternName">
            <summary>
            Defines the special name for the one canonicalization patter that must always be present in every DataDictionary.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.#ctor">
            <summary>
            Private default constructor.  Use the static factory methods for acquiring an instance.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.Load(System.String)">
            <summary>
            Creates, loads and returns an object instance that is populated with the meta-data specified by <paramref name="filename"/>
            parameter.
            </summary>
            <param name="filename">
            A fully qualified or relative path to an XML file containing the data dictionary meta-data to be loaded.
            </param>
            <returns>
            Returns an object instance that is populated with the meta-data specified by <paramref name="filename"/> parameter.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.Load(System.String,System.EventHandler{Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs})">
            <summary>
            Creates, loads and returns an object instance that is populated with the meta-data specified by <paramref name="filename"/>
            parameter.
            </summary>
            <param name="filename">
            A fully qualified or relative path to an XML file containing the data dictionary meta-data to be loaded.
            </param>
            <param name="resolveXsdSchemaNameHandler">
            An event handler that customizes how the data dictionary will locate and resolve XML schema names specified on <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> instances.
            This is useful for applications like test apps that want to provide custom schema validation for fields but can't embed them as resources
            in the shipping library.  
            </param>
            <returns>
            Returns an object instance that is populated with the meta-data specified by <paramref name="filename"/> parameter.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.CreateDefault">
            <summary>
            Creates, loads and returns an object instance that is populated with the default meta-data embedded in the assembly.
            </summary>
            <returns>
            Returns an object instance that is populated with the default meta-data embedded in the assembly.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.CreateEmpty">
            <summary>
            Creates and returns an empty object instance - i.e. an instance with no data.
            </summary>
            <returns>
            Returns an empty object instance - i.e. an instance with no data.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.Parse(System.String)">
            <summary>
            Creates, loads and returns an object instance that is populated with the meta-data contained in the <paramref name="xml"/>
            parameter.
            </summary>
            <param name="xml">
            An XML string containing the data dictionary meta-data to be loaded.
            </param>
            <returns>
            Returns an object instance that is populated with the meta-data contained in the <paramref name="xml"/> parameter.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.Parse(System.String,System.EventHandler{Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs})">
            <summary>
            Creates, loads and returns an object instance that is populated with the meta-data contained in the <paramref name="xml"/>
            parameter.
            </summary>
            <param name="xml">
            An XML string containing the data dictionary meta-data to be loaded.
            </param>
            <param name="resolveXsdSchemaNameHandler">
            An event handler that customizes how the data dictionary will locate and resolve XML schema names specified on <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> instances.
            This is useful for applications like test apps that want to provide custom schema validation for fields but can't embed them as resources
            in the shipping library.  
            </param>
            <returns>
            Returns an object instance that is populated with the meta-data contained in the <paramref name="xml"/> parameter.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.XmlSerializer_UnknownNode(System.Object,System.Xml.Serialization.XmlNodeEventArgs)">
            <summary>
            Event handler for unknown nodes during XML deserialization.
            </summary>
            <param name="sender">n/a</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.XmlSerializer_UnknownElement(System.Object,System.Xml.Serialization.XmlElementEventArgs)">
            <summary>
            Event handler for element during XML deserialization.
            </summary>
            <param name="sender">n/a</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.XmlSerializer_UnknownAttribute(System.Object,System.Xml.Serialization.XmlAttributeEventArgs)">
            <summary>
            Event handler for unknown attribute during XML deserialization.
            </summary>
            <param name="sender">n/a</param>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.SaveAs(System.String)">
            <summary>
            Serializes and saves to disk the current state and contents of the object instance.
            </summary>
            <param name="filename">
            The fully qualified or relative path to the file to which the data will be saved. Existing files will be overwritten.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.ToXml">
            <summary>
            Serializes and returns the current state and contents of the object instance as an XML string.
            </summary>
            <returns>
            Returns the current state and contents of the object instance as an XML string.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.Initialize">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Thrown when any violation of internal data state is detected.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.GetXmlSchema(Microsoft.IT.Security.Core.DataEntities.DictionaryEntry)">
            <summary>
            This method will make the calls to the registered schema resolvers and ultimately return the XSD schema required for XML validation.
            </summary>
            <param name="dictionaryEntry">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> for which the schema is required.
            </param>
            <returns>
            The XSD schema required for XML validation.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.AddTrimWhitespacePatternIfMissing">
            <summary>
            Ensures that the mandatory TrimWhitespace canonicalization pattern exists in the collection and creates one if it doesn't.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.ResolveXmlSchemaName">
            <summary>
            An event that is fired to acquire the XSD schema to be used for XML schema validation.  By default XSD schemas
            must be an embedded resource in the hosting library.  This event allows a caller to override that and supply
            a custom schema at runtime.  This is especially useful for testing purposes.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.DefaultDataDictionary">
            <summary>
            Gets a singleton instance of the default DataDictionary.  This is the same as the one returned via the call to CreateDefault().
            This is the preferred (and most efficient) way to access the default data dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.MetaDataVersion">
            <summary>
            Gets and sets a value that represents the version of the meta-data that is represented by the current instance.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.IsInitialized">
            <summary>
            Gets a value that indicates whether or not the the initialization validation checks have been performed or not.
            True means the <see cref="M:Microsoft.IT.Security.Core.DataEntities.DataDictionary.Initialize"/> method 
            has been called and succeeded, false if it has not been called or it was called and failed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.ValidationPatterns">
            <summary>
            Gets a collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationPattern"/> instances that are used by this instance for performaning data validation.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.CanonicalizationPatterns">
            <summary>
            Gets a collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern"/> instances that are used by this instance for normalizing
            the representation of property values prior to being stored in the database.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.DictionaryEntries">
            <summary>
            Gets the collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> instances, each of which represent a set of validation and canonicalization rules.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataDictionary.CharacterSets">
            <summary>
            Gets the collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.CharacterSet"/> instances, each of which represent a set of validation and canonicalization rules
            that can be referenced by other <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> instances in order to reuse common sets of validation rules.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataProviders.ManagerBase">
            <summary>
            Provides a base implementation to manger class
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.ManagerBase.RetrieveConnectionString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Retrieve connection string either from configuration management or it returns connection string override at manager level.
            The method returns the connection string. This value can come from an encrypted or
            un-encrypted source based on the flag "IsDeploymentInAzure".
            </summary>
            <param name="configurationValues">collection of configuration parameters</param>
            <returns>return connection string</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataProviders.ProviderBase">
            <summary>
            Provides a base implementation for the extensible provider model.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.ProviderBase.#ctor">
            <summary>
            Initializes a new instance of the Microsoft.IT.Security.Internal.RBX.Configuration.ProviderBase class.
            </summary>       
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.ProviderBase.QualifiedName(System.String)">
            <summary>
            Prefix object with schema
            </summary>
            <param name="objectName">object name</param>
            <returns>object with schema as prefix</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.ProviderBase.QualifiedName(System.String,System.String)">
            <summary>
            Prefix object with schema
            </summary>
            <param name="schema">schema value</param>
            <param name="objectName">object name</param>
            <returns>object with schema as prefix</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            <param name="name">Provider Identifier</param>
            <param name="config">Collection of the name-value pairs represents the provider specific information to create a custom provider</param>
            </summary>        
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.ProviderBase.Clone">
            <summary>
            Creates clone of the current provider
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataProviders.ProviderBase.Name">
            <summary>
            Provider name
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataProviders.ProviderBase.Description">
            <summary>
            Provider description
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataProviders.ProviderBase.Parameters">
            <summary>
            Configurable parameters
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataProviders.ProviderBase.LegacySqlProviderError">
            <summary>
            Gets a single event for use by derived classes to log errors consistent with V2.0.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataProviders.ProviderFactory">
            <summary>
            ProviderFactory is used to create component specific provider object
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters">
            <summary>
            This class is generated from the meta-data file of the same name.  It provides the specific details for a
            an instance of an object that derives from the PerformanceCounters abstract base class.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.NumberOfCallsAttemptedCounterName">
            <summary>The number of times a method was called.  This is a delta counter and therefore the number reflected is since the last time the counter sample was acquired.</summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.NumberOfSystemErrorsCounterName">
            <summary>The number of times a method failed for system reasons (e.g. EndpointNotFound, Timeout, etc.).  This is a delta counter and therefore the number reflected is since the last time the counter sample was acquired.</summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.NumberOfBusinessErrorsCounterName">
            <summary>The number of times a method failed for business reasons (e.g. invalid data, etc.).  This is a delta counter and therefore the number reflected is since the last time the counter sample was acquired.</summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.NumberOfSLAViolationsCounterName">
            <summary>The number of times a method succeeded but exceeded the prescribed response time SLA.  This is a delta counter and therefore the number reflected is since the last time the counter sample was acquired.</summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.AverageResponseTimeCounterName">
            <summary>The average amount of time a method took to execute.</summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.AverageResponseTimeCounterNameBase">
            <summary>Obligatory base counter for Average response time</summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.GetCounterCreationData">
            <summary>
            Constructs and returns a CounterCreationDataCollection for the performance counters.
            </summary>
            <returns>A CounterCreationDataCollection for the the performance counters.</returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.CategoryName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.CategoryHelp">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.CategoryType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.CounterCreationDataCollection">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.CounterNames">
            <summary>
            Gets a read-only collection of the names of all counters that are managed by this instance.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCounters.CounterGroupNames">
            <summary>
            Gets a read-only collection of the names of all counter groups that are managed by this instance.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1">
            <summary>
            A class that manages a collection <see cref="T:Microsoft.IT.Diagnostics.PerformanceCounters"/> by instance name.  This class allows an application to 
            implement multiple instances of the same counter category and increment them by passing the instance and counter names.
            </summary>
            <typeparam name="T">
            The type of collection that will be managed.  This is the application's derived class from the Platform SDK's 
            <see cref="T:Microsoft.IT.Diagnostics.PerformanceCounters"/> class.
            </typeparam>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.#ctor(System.String)">
            <summary>
            Constructs an instance of the class retaining the passed in <paramref name="instancePrefix"/>.
            </summary>
            <param name="instancePrefix">
            Specifies a value that will be prepended to the instance name to form a complete instance name.  This is used
            to differentiate counters that are used by one process from identical counters in a different process.  For example,
            one process acts as a client and makes a call to a method whose service is hosted on the same box. If MethodName is the instance
            name there is no way to distinguish between the client/outbound call and the service/inbound call. Specifying client/service
            or inbound/outbound for this value will resolve that.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.IncrementCounters(System.String,System.Int64,System.Exception)">
            <summary>
            Use this method when the instrumented method results in an exception and you want this API to determine whether the exception
            represents a business failure or system failure.  This call will update all 5 monitoring delta counters and will handle the 
            additional overhead of determining the SLA threshold beyond which a method call is determined to be too slow.
            </summary>
            <param name="methodName">
            The name of the method for which the timings are to be reported.  
            </param>
            <param name="duration">
            Specifies the amount of time that was spent in processing the method.  If this value exceeds the SLA for the method then
            the counter representing SLA violations will be incremented.
            </param>
            <param name="exception">
            The <see cref="T:System.Exception"/> or <see cref="T:System.ServiceModel.FaultException"/> that resulted in the call to <paramref name="methodName"/>.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.IncrementCounters(System.String,System.Int64,System.String)">
            <summary>
            This overload is specific to enforcement calls to the ContextHandler service.  Use this overload for calls that 
            do not generate an exception and do return a result.  That result will be used to determine via the application 
            configuration whether or not the result is interpreted as a success, business failure or system failure.
            This call will update all 5 monitoring delta counters and will handle the 
            additional overhead of determining the SLA threshold beyond which a method call is determined to be too slow.
            </summary>
            <param name="methodName">
            The name of the method for which the timings are to be reported.  
            </param>
            <param name="duration">
            Specifies the amount of time that was spent in processing the method.  If this value exceeds the SLA for the method then
            the counter representing SLA violations will be incremented.
            </param>
            <param name="enforcementResult">
            The <paramref name="enforcementResult"/> value will be used to determine via the application 
            configuration whether or not the result is interpreted as a success, business failure or system failure.
            </param>
            <remarks>
            Note that the application has complete control over which counter gets incremented for each result. By creating a configuration
            value with a key of <paramref name="enforcementResult"/> - e.g. 'NotApplicable', 'Deny', etc. and a value which is the 
            name of the counter to be incremented - e.g. 'Number of system errors since last sample', etc. - the application can explictly
            instruct this method to increment the system failures counter for all 'NotApplicable' results.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.IncrementCounters(System.String,System.Int64,System.Boolean,System.Boolean)">
            <summary>
            This overload is used when you need total control over which (if any) of the failure counters get incremented.
            This call will update all 5 monitoring delta counters and will handle the 
            additional overhead of determining the SLA threshold beyond which a method call is determined to be too slow.
            </summary>
            <param name="methodName">
            The name of the method for which the timings are to be reported.  
            </param>
            <param name="duration">
            Specifies the amount of time that was spent in processing the method.  If this value exceeds the SLA for the method then
            the counter representing SLA violations will be incremented.
            </param>
            <param name="isBusinessFailure">
            True to cause the business failure performance counter to be incremented, false otherwise.
            </param>
            <param name="isSystemFailure">
            True to cause the system failure performance counter to be incremented, false otherwise.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.GetInstance(System.String)">
            <summary>
            Retrieves the <see cref="T:Microsoft.IT.Diagnostics.PerformanceCounters"/> group from the collection and constructs and adds it 
            if it does not yet exist.
            </summary>
            <param name="instanceName">
            The instance name of the collection to retrieve or create.
            </param>
            <returns>
            The <see cref="T:Microsoft.IT.Diagnostics.PerformanceCounters"/> group from the collection with the specified <paramref name="methodName"/>.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.Dispose(System.Boolean)">
            <summary>
            Standard implementation of the Dispose pattern. This method releases all managed resources.
            </summary>
            <param name="disposing">
            True when Dispose is called explicitly, false otherwise.
            </param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.MonitoringPerformanceCountersManager`1.InstancePrefix">
            <summary>
            Gets the value that is prepended to the instance names passed on the increment methods to disambiguate
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.EmailModule">
            <summary>
            Using this enum controls whether send SMTP email for each ITA module.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.EmailModuleInfo">
            <summary>
            Email module information.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.EmailManager">
            <summary>
            SMTP email manager.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.EmailManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.EmailManager.LoadRequestEmailParameters">
            <summary>
            Load parameters control whether send SMTP email.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.EmailManager.InitSmtpClient(System.Net.Mail.SmtpClient)">
            <summary>
            Initial SMTP client.
            </summary>
            <param name="smtpClient">SmtpClient to be initialized.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.EmailManager.UpdateEmailStatusToDatabase(Microsoft.IT.Security.Core.MailMessageInfo)">
            <summary>
            Update email status to database.
            </summary>
            <param name="message">Email message.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.EmailManager.SendEmailBySmtp(System.Net.Mail.SmtpClient,Microsoft.IT.Security.Core.MailMessageInfo)">
            <summary>
            Send email by SMTP.
            </summary>
            <param name="smtpClient">SmtpClient used to send email.</param>
            <param name="emailInfo">Mail message info.</param>
            <returns>Whether succeed.</returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.EmailManager.Instance">
            <summary>
            Singleton instance.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.EmailManager.SqlHelper">
            <summary>
            SQL help instance used to request/send SMTP email.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.EmailManager.MaxRetryCount">
            <summary>
            SMTP send email max retry count.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.EmailManager.BatchEmailCount">
            <summary>
            SMTP send email thread count.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.EmailManager.SenderEmailCredential">
            <summary>
            SMTP credential.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.MailMessageInfo">
            <summary>
            Email Message class is used to retreive message from Email Message Queue
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.MailMessageInfo.GetRecipientAddress(System.String,System.String)" -->
        <member name="M:Microsoft.IT.Security.Core.MailMessageInfo.ToString">
            <summary>
            ToString
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MailMessageInfo.CorrelationId">
            <summary>
            CorrelationId
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MailMessageInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MailMessageInfo.From">
            <summary>
            From email address
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MailMessageInfo.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MailMessageInfo.IsBodyHtml">
            <summary>
            Gets or sets whether the body is html
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MailMessageInfo.Body">
            <summary>
            Gets or sets the email body.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.MessageRecipient">
            <summary>
            Message Recipient
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.MessageRecipient.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MessageRecipient.Id">
            <summary>
            Recipient ID
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MessageRecipient.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MessageRecipient.Address">
            <summary>
            Gets or sets the address.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MessageRecipient.RecipientType">
            <summary>
            Gets or sets the type of the recipient.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MessageRecipient.EmailStatus">
            <summary>
            Gets or sets the email status.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.MessageRecipient.RetryCount">
            <summary>
            Gets or sets the retry count.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.EmailPriority">
            <summary>
            Email Priority
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.RecipientType">
            <summary>
            Recipient Type
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.EmailStatus">
            <summary>
            Email Status
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.FaultHelper">
            <summary>
            <c>FaultHelper</c> class provides helper methods to convert all exceptions into FaultExceptions. 
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.FaultHelper.GetFaultException(System.Exception)">
            <summary>
            Creates and returns the appropriate fault for the passed in exception based on the declarative
            FaultTypeAttribute decorating the exception.
            </summary>
            <param name="error">The exception for which a fault is requested.</param>
            <returns>The fault exception for the passed in exception.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.FaultHelper.GetFaultCodeValue(System.Int32)">
            <summary>
            This method is an attempt to replace the FaultCode / ErrorCode that is generated from the V3.0 data validation
            with the legacy values used in V2.0.  This method does not guarantee perfect backward compatibility since new errors
            are now generated for conditions not previously tested.  There are also ambiguities in the backward mappings.
            </summary>
            <param name="errorCode">
            The V3.0 ErrorCode that would be returned to the caller.
            </param>
            <returns>
            A close approximation to the V2.0 ErrorCode that should be returned to the caller. The ErrorCode is a 4 part integer
            of the form CCEEOOxx which is returned as CCEEOOyy where xx is the new ErrorCode and yy is the old ErrorCode.
            </returns>
            <remarks>
            This method does nothing but return the same value if the '/IsErrorCodeConversionEnabled' config value is false or non-existent.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.FaultHelper.ReturnVerboseMessageToCaller(System.Int32)">
            <summary>
            Determines if we should return detailed error message corresponding to the error to the caller.
            </summary>
            <param name="errorCode">Error code that would be returned to the caller.</param>
            <returns>True for error codes that should return detailed error message to caller.</returns>
        </member>
        <member name="T:Microsoft.IT.Security.ServiceModel.DataValidationAttribute">
            <summary>
            An attribute used to decorate web service methods to declaratively establish the type of action performed by
            the method.  This <see cref="P:Microsoft.IT.Security.Core.DataEntities.DataValidationAttribute.ValidationActions"/>
            property is used by the service to enable validations of all properties in the input parameters for the action specified.
            </summary>
            <remarks>
            This class also implements the <see cref="T:System.ServiceModel.Description.IOperationBehavior"/> and <see cref="T:System.ServiceModel.Dispatcher.IParameterInspector"/> interfaces and therefore
            when used automatically provides data validation and canonicalization via the channel stack behavior.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.#ctor(Microsoft.IT.Security.Core.DataEntities.ValidationActions)">
            <summary>
            Constructs an instance from the passed in <paramref name="validationActions"/> parameter.
            </summary>
            <param name="validationActions">
            Specifies the type of action that is performed by the web method and therefore the type of data validations to be performed.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.BeforeCall(System.String,System.Object[])">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.AfterCall(System.String,System.Object[],System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.InitializeParameterInfo">
            <summary>
            This initialization is called one time for each operation.  The work performed cannot be done in 
            the IOperationBehavior.ApplyDispatchBehavior() method because we need the service instance object
            that implements the method. It is the implementation that has the ParameterValidation attributes.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ValidationActions">
            <summary>
            Gets the type of action that is performed by the web method and therefore the type of data validations to be performed.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails">
            <summary>
            This is an internal convenience class that is used for capturing data to be easily reported in the exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails.InterfaceName">
            <summary>
            Gets the name of the interface that is being processed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails.MethodName">
            <summary>
            Gets the name of the method that is being processed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails.ValidationActionRequested">
            <summary>
            Gets the ValidationActions that were defined on the <see cref="T:Microsoft.IT.Security.ServiceModel.DataValidationAttribute"/> of the method that is being processed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails.ParameterCount">
            <summary>
            Gets the number of parameters on the method being processed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails.ParameterType">
            <summary>
            Gets the type name of the parameter that is being processed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails.ParameterName">
            <summary>
            Gets the name of the parameter that is being processed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.DataValidationAttribute.ProcessingDetails.ParameterValidationAlias">
            <summary>
            Gets the Alias of the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that was specified on the <see cref="T:Microsoft.IT.Security.ServiceModel.ParameterValidationAttribute"/> (if there was one).
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.DataValidator">
            <summary>
            This class provides the methods that perform data validation and canonicalization on data contract properties based
            on the definitions of the instrinsic <see cref="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.DataDictionary"/>.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.#ctor(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Constructs an instance utilizing the supplied <see cref="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.DataDictionary"/>.
            </summary>
            <param name="dataDictionary">
            The <see cref="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.DataDictionary"/> to be used for acquiring the requisite validation and canonicalization patterns.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown when the passed in <paramref name="dataDictionary"/> instance has not been initialized and the call to initializes it fails.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.Validate(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Validates the passed in value against the rules defined by the meta-data in the supplied <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>
            and throws if invalid.
            </summary>
            <param name="value">
            The value to be validated.
            </param>
            <param name="dictionaryEntry">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> containing the meta-data which defines the validation rules to be used.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ValidationException">
            Thrown when the data of the <paramref name="value"/> parameter does not conform to all the conditions specified by the passed in <paramref name="dictionaryEntry"/>.
            </exception>
            <remarks>
            Successful calls simply return.  Exceptions are thrown for invalid data conditions.  
            See <see cref="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.IsValid(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry)"/> 
            for alternate way to determine validity without exceptions.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.Validate(System.Object,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Validates the passed in value against the rules defined by the meta-data which is acquired by searching the data dictionary for 
            the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that matches the passed in <paramref name="alias"/> and throws if invalid.
            </summary>
            <param name="value">
            The value to be validated.
            </param>
            <param name="alias">
            Specifies the alias name that uniquely identifies the desired DictionaryEntry.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ValidationException">
            Thrown when the data of the <paramref name="value"/> parameter does not conform to all the conditions specified by 
            the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> identified by the <paramref name="alias"/> parameter.
            </exception>
            <remarks>
            Successful calls simply return.  Exceptions are thrown for invalid data conditions.  
            See <see cref="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.IsValid(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry)"/> 
            for alternate way to determine validity without exceptions.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.Validate(System.Object,System.String,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Validates the passed in value against the rules defined by the meta-data which is acquired by searching the data dictionary for 
            the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that matches the passed in type, property and <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> and throws if invalid.
            </summary>
            <param name="value">
            The value to be validated.
            </param>
            <param name="typeName">
            The fully qualified class name of the data contract that contains the property to be validated.
            </param>
            <param name="propertyName">
            The name of the property to be validated.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ValidationException">
            Thrown when the data of the <paramref name="value"/> parameter does not conform to all the conditions specified by corresonding dictionaryEntry.
            </exception>
            <remarks>
            Successful calls simply return.  Exceptions are thrown for invalid data conditions.  
            See <see cref="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.IsValid(System.Object,System.String,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions)"/> 
            for alternate way to determine validity without exceptions.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.Validate(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Validates the passed in <paramref name="classInstance"/> by iterating through and validating each of the properties 
            which are atomic string or numeric types based on the rules defined by the data dictionary meta-data.  This method
            will also recursively iterate through the child properties of data contract types which are themselves properties of 
            the class instance. 
            </summary>
            <param name="classInstance">
            The class instance which will be recursed via reflection and have each property value that is defined in the data dictionary validated.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ValidationException">
            Thrown when the first occurrence of invalid data is encountered.  The exception details will identify the class and property in error.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.IsValid(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.DataEntities.ValidationActions)">
            <summary>
            Validates the passed in value against the rules defined by the meta-data in the supplied <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>
            and returns a flag indicating successful or not.
            </summary>
            <param name="value">
            The value to be validated.
            </param>
            <param name="dictionaryEntry">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> containing the meta-data which defines the validation rules to be used.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <returns>
            True if the data passes validation, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.IsValid(System.Object,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions)">
            <summary>
            Validates the passed in value against the rules defined by the meta-data in the supplied <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>
            and returns a flag indicating successful or not.
            </summary>
            <param name="value">
            The value to be validated.
            </param>
            <param name="alias">
            Specifies the alias name that uniquely identifies the desired DictionaryEntry.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <returns>
            True if the data passes validation, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.IsValid(System.Object,System.String,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions)">
            <summary>
            Validates the passed in value against the rules defined by the meta-data which is acquired by searching the data dictionary for 
            the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that matches the passed in type, property and <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> and returns a flag indicating
            successful or not.
            </summary>
            <param name="value">
            The value to be validated.
            </param>
            <param name="typeName">
            The fully qualified class name of the data contract that contains the property to be validated.
            </param>
            <param name="propertyName">
            The name of the property to be validated.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <returns>
            True if the data passes validation, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.IsValid(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationActions)">
            <summary>
            Validates the passed in <paramref name="classInstance"/> by iterating through and validating each of the properties 
            which are atomic string or numeric types based on the rules defined by the data dictionary meta-data.  This method
            will also recursively iterate through the child properties of data contract types which are themselves properties of 
            the class instance. 
            </summary>
            <param name="classInstance">
            The class instance which will be recursed via reflection and have each property value that is defined in the data dictionary validated.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for validation.
            </param>
            <returns>
            True if the data passes validation, false otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.Canonicalize(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Normalizes the passed in value using the rules defined by the meta-data in the passed in <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>.
            </summary>
            <param name="value">
            The value to be canonicalized.
            </param>
            <param name="dictionaryEntry">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> containing the meta-data which defines the canonicalization patterns to be used.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for canonicalization.
            </param>
            <returns>
            A canonicalized representation of the passed in value.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.Canonicalize(System.Object,System.String,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Normalizes the passed in value using the rules defined by the meta-data which is acquired by searching the data dictionary for 
            the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that matches the passed in type, property and <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/>.
            </summary>
            <param name="value">
            The value to be canonicalized.
            </param>
            <param name="typeName">
            The fully qualified class name of the data contract that contains the property to be canonicalized.
            </param>
            <param name="propertyName">
            The name of the property to be canonicalized.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for canonicalization.
            </param>
            <returns>
            A canonicalized representation of the passed in value.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.Canonicalize(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Processes the passed in <paramref name="classInstance"/> by iterating through and canonicalizing each of the 
            string properties based on the rules defined by the data dictionary meta-data.  This method
            will also recursively iterate through the child properties of data contract types which are themselves properties of 
            the class instance. 
            </summary>
            <param name="classInstance">
            The class instance which will be recursed via reflection and have each property value that is defined in the data dictionary canonicalized.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> identifying the context used for canonicalization.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.TraverseClassInstance(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationActions,System.Object,System.String,System.Collections.ObjectModel.Collection{System.Object},System.Boolean,Microsoft.IT.Security.Core.DataEntities.DataValidator.TraverseClassInstanceCallback)">
            <summary>
            This utility method will use reflection to recurse through object instances that are decorated with <see cref="T:System.Runtime.Serialization.DataContractAttribute"/> 
            and make a callback for each property encountered that is decorated with a <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/>.
            </summary>
            <param name="classInstance">
            The instantiated instance that is to be processed.
            </param>
            <param name="validationActions">
            Identifies the context within which the call is being made. This value is used to locate the appropriate <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> for each property.
            </param>
            <param name="parentInstance">
            The object instance that exposes the <paramref name="classInstance"/> as a public property.
            </param>
            <param name="parentPropertyName">
            The name of the property on the <paramref name="parentInstance"/> that exposes the <paramref name="classInstance"/>.
            </param>
            <param name="quitOnMissingDictionaryEntry">
            When set to true the recursion will stop if no meta-data exists for a property.  This is used for Validation to ignore properties 
            of classes that should be ignored.  When false recursion will continue even if no meta-data exists for a property. This is 
            used for canonicalization.
            </param>
            <param name="visitedObjects">
            A collection of objects that have already been recursed into.  This is used to prevent infinite recursion with circular references.
            </param>
            <param name="callback">
            The callback implementation that actually performs the processing on the property.  This is typically either validation or canonicalization.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.PerformNullityChecks(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Performs validation of properties for null values.
            </summary>
            <param name="value">The value to be inspected.</param>
            <param name="dictionaryEntry">The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that defines the rules to be enforced.</param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.PerformRangeChecks(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Performs range validation for a property. It validates collection sizes, string lengths and numeric value ranges.
            </summary>
            <param name="value">The value to be inspected.</param>
            <param name="dictionaryEntry">The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that defines the rules to be enforced.</param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.PerformSyntaxChecks(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Performs validation of a string property for valid and/or invalid characters and other string patterns.
            </summary>
            <param name="value">The value to be inspected.</param>
            <param name="dictionaryEntry">The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that defines the rules to be enforced.</param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.PerformXmlSchemaValidation(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Performs validation of a string containing XML against a predefined schema.
            </summary>
            <param name="value">The value to be inspected.</param>
            <param name="dictionaryEntry">The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that defines the rules to be enforced.</param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.PerformExtensionChecks(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Performs custom validations for complex properties like constraint expressions that must be parsed and sub-elements validated.
            </summary>
            <param name="value">The value to be inspected.</param>
            <param name="dictionaryEntry">The <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that defines the rules to be enforced.</param>
            <param name="customContext">
            The standard <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> that is required whereever an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> is thrown.
            </param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.DataDictionary">
            <summary>
            Gets the <see cref="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.DataDictionary"/> that was supplied in the constructor.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.DefaultDataValidator">
            <summary>
            Gets a singleton instance of the default DataValidator that uses the default <see cref="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.DataDictionary"/>.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.DataValidator.TraverseClassInstanceCallback">
            <summary>
            This defines the callback signature used by the TraversClassInstance method.  Implementors provide implementation to process
            properties of DataContracts that are decorated with a <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/>.
            </summary>
            <param name="propertyInfo">The meta-data about the property being processed.</param>
            <param name="dictionaryEntry">The DataDictionary <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that applies to the property.</param>
            <param name="objectInstance">The object instance of the data contract class that has the property.</param>
            <param name="propertyValue">The current value of the property</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.DataValidator.ValidationDetails">
            <summary>
            An internal class used to augment the exception details.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DataValidator.ValidationDetails.#ctor(System.Object,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions)">
            <summary>
            Default constructor.
            </summary>
            <param name="parentInstance">The type name of the parent instance that has the property being validated.</param>
            <param name="parentPropertyName">The name of the property on the parent instance that is being validated.</param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.ValidationDetails.ParentType">
            <summary>
            Gets and sets the type name of the parent instance that has the property being validated.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.ValidationDetails.ParentPropertyName">
            <summary>
            Gets and sets the name of the property on the parent instance that is being validated.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DataValidator.ValidationDetails.ValidationActionsBeingProcessed">
            <summary>
            Gets and sets the <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> value that was requested. This value is used to locate the effective DictionaryEntry.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry">
            <summary>
            This class represents a set of validation and canonicalization rules and patterns the govern the validation of data for a 
            particular property of a particular type for a particular CRUD action.  Additional attributes specify nullability and 
            min/max length of strings or min/max values for numbers.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.Initialize(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <param name="dataDictionary">
            The instance of the <see cref="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.DataDictionary"/> class that contains the instance being initialized.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown when any violation of internal data state is detected.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.TypeName">
            <summary>
            Gets and sets the fully qualified type name for the data contract class containing the property.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.PropertyName">
            <summary>
            Gets and sets the name of the target property.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.ValidationActions">
            <summary>
            Gets and sets the CRUD action for the which the contained rules and patterns should be applied.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.Alias">
            <summary>
            Gets and sets a value that can be used as an alias to uniquely identify this entry.  This can be used in lieu
            of the combination of TypeName, PropertName and ValidationActions.  It is particularly useful for UI applications
            that don't necessarily use the same data contracts that the middle tier does.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.Min">
            <summary>
            Gets and sets a value which specifies the minimum scope (based on the data type) of the value of the property.
            <para/>When used in conjunction with a string property it represents the minimum length of the string.
            <para/>When used in conjunction with a numeric property it represents the minimum value the property can accept.
            <para/>When used in conjunction with an <see cref="T:System.Collections.IEnumerable"/> property it represents the minimum number of elements in the collection.
            <para/>When not specified (i.e. value is double.NaN) no minimum length/value/count validation is performed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.Max">
            <summary>
            Gets and sets a value which specifies the maximum scope (based on the data type) of the value of the property.
            <para/>When used in conjunction with a string property it represents the maximum length of the string.
            <para/>When used in conjunction with a numeric property it represents the maximum value the property can accept.
            <para/>When used in conjunction with an <see cref="T:System.Collections.IEnumerable"/> property it represents the maximum number of elements in the collection.
            <para/>When not specified (i.e. value is double.NaN) no maximum length/value/count validation is performed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.IsNullable">
            <summary>
            Gets and sets a value that indicates whether or not a NULL value is acceptable for the specified property.
            When not specified in the DataDictionary XML file the default value will be true.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.XmlSchemaName">
            <summary>
            Gets and sets the name of the XML schema file that will be used to validate properties in XML format.  When not 
            specified (i.e. value is null) no XML schema validation is performed.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.Tags">
            <summary>
            Gets and sets an optional comma delimited list of arbitrary tag values useful for providing custom validation on certain elements.
            For example, to perform extended validation on a string that represents a constraint expresssion include "ConstraintExpression" 
            in the list of tags.  The ConstraintExpressionValidationHandler looks at this to determine whether or not to process.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.ValidationPatternReference">
            <summary>
            Gets and sets an optional reference to a <see cref="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.ValidationPattern"/> that should be used for performing validation.
            When this property is specified the IncludeCharacterSets and ExcludeCharacterSets properties should not be supplied.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.DictionaryEntryReference">
            <summary>
            Gets and sets an optional reference to a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that should be used for performing validation.
            When this property is specified the value must match the Alias of an existing DictionaryEntry and all other properties are ignored.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.CollectionItemDictionaryEntryReference">
            <summary>
            Gets and sets an optional reference to a <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> that should be used for performing validation
            on the items in a collection that are atomic types (like string) and not data contract classes.
            This value should only be applied to properties that are collections.
            When this property is specified the value must match the Alias of an existing DictionaryEntry.  
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.IncludeCharacterSets">
            <summary>
            Gets and sets a comma delimited set of references to <see cref="T:Microsoft.IT.Security.Core.DataEntities.CharacterSet"/> instances that will be concatenated 
            to form the set of allowed characters for a string field when performing validation.
            When this property is specified the ValidationPattern property cannot be specified. Use ExcludeCharacterSets property when desired 
            to omit certain characters from the final effective regular expression.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.ExcludeCharacterSets">
            <summary>
            Gets and sets a comma delimited set of references to <see cref="T:Microsoft.IT.Security.Core.DataEntities.CharacterSet"/> instances that will be concatenated 
            to form the set of characters that are not allowed for a string field when performing validation.
            When this property is specified the IncludeCharacterSets property is required.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.CanonicalizationPatternReferences">
            <summary>
            Gets a collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPatternReference"/> instances that point to the actual <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern"/>s 
            to be used to canonicalize a value.  This is an internal collection to optimize memory.  Use the <see cref="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.CanonicalizationPatterns"/>
            collection to obtain the referred to instances.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.DataDictionary">
            <summary>
            Gets the data dictionary that was supplied to the call to <see cref="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.Initialize()"/> 
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.ValidationPattern">
            <summary>
            Gets the effective <see cref="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.ValidationPattern"/> instance that represents the validation that 
            should be performed for the instance's value.  
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.CanonicalizationPatterns">
            <summary>
            Gets a collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern"/> instances that represent the various manipulations that 
            should be performed for the instance's value.  All <see cref="T:Microsoft.IT.Security.Core.DataEntities.CanonicalizationPattern"/>s referenced will be applied
            sequentially.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.SurrogateDictionaryEntry">
            <summary>
            Gets an optional DictionaryEntry that should be used for validation instead of this one.  This value is acquired when the DictionaryEntryReference 
            property specifies the Alias of another existing entry that provides identical validation controls required for this instance.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.IsOptionalForMethodNames">
            <summary>
            Gets and sets the comma delimited list of names via deserialization.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.IsOptionalForMethodNamesList">
            <summary>
            Gets a list of method names for which override logic applies.  When specific methods are identified the validation will ignore
            checks for IsNullable=false when applied to a class or string and Min=1 when applied to a string, number or collection.
            This list is generated from the comma delimited list of names in the DictionaryEntry's OptionalForMethodNames attribute.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry.Notes">
            <summary>
            Gets and sets a string that contains human-readable notes regarding any special processing that might occur for this 
            property to which it applies.  A developer can document custom canonicalization and custom validation logic here.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryCollection">
            <summary>
            A collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> object instances.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryCollection.Find(System.String,System.Boolean)">
            <summary>
            Finds and returns the value of the collection that is specified by the <paramref name="alias"/> parameter.
            </summary>
            <param name="alias">
            Specifies the alias name that uniquely identifies the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> to be returned.
            </param>
            <param name="throwOnNotFound">
            When true the method will throw an <see cref="T:System.InvalidOperationException"/> if the specified entry could not be found.
            When false the method will not throw and will return null.
            </param>
            <returns>
            The value of the collection that is specified by the <paramref name="alias"/> parameter.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            Thrown when <paramref name="throwOnNotFound"/> is true and the requested entry could not be found.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryCollection.Find(System.String,System.String,Microsoft.IT.Security.Core.DataEntities.ValidationActions,System.Boolean)">
            <summary>
            Finds and returns the value of the collection that is specified by the <paramref name="typeName"/>, <paramref name="propertyName"/>
            and <paramref name="validationActions"/>.
            </summary>
            <param name="typeName">
            Specifies the fully qualified typename of the class containing the property.
            </param>
            <param name="propertyName">
            The name of the property to be found or updated.
            </param>
            <param name="validationActions">
            The <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions"/> for which the designated property rules are to be found or updated.
            </param>
            <param name="throwOnNotFound">
            When true the method will throw an <see cref="T:System.InvalidOperationException"/> if the specified entry could not be found.
            When false the method will not throw and will return null.
            </param>
            <returns>
            The value of the collection that is specified by the <paramref name="typeName"/>, <paramref name="propertyName"/>
            and <paramref name="validationActions"/>.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.DictionaryEntryCollection.Initialize(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <param name="dataDictionary">
            The instance of the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataDictionary"/> class that contains the instance being initialized.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown when any violation of internal data state is detected.
            </exception>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain">
            <summary>
            Represents NamedProtectionDomain information.
            </summary>   
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.childNamedProtectionDomains">
            <summary>
            The immediate children of the NamedProtectionDomain. Click here to see the details of <see cref="T:Microsoft.IT.Security.Common.NamedProtectionDomainKey"/>
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.#ctor">
            <summary>
            Constructor for NamedProtectionDomain
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.ValidationRaisedHandler(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.ExtractObjectScope(System.String)">
            <summary>
            ExtractObjectScope
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.Id">
            <summary>
            N/A
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.NamedProtectionDomainKey">
            <summary>
            NamedProtectionDomainKey object. Click here to see the details of <see cref="T:Microsoft.IT.Security.Common.NamedProtectionDomainKey"/>     
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.ChildNamedProtectionDomains">
            <summary>
            ChildrenNamedProtectionDomain object. Children NamedProtectionDomains of the NamedProtectionDomain
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.NewNamedProtectionDomainKey">
            <summary>
            NamedProtectionDomainKey object. Click here to see the details of <see cref="T:Microsoft.IT.Security.Common.NamedProtectionDomainKey"/>
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.Description">
            <summary>
            Description about NamedProtectionDomain. It is nullable property.
            <para><c>MaxLengh:</c> 400</para>
            <para><c>Valid characters:</c> 0-9a-zA-Z&quot;&amp;'()\-.@_space\r</para>
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.ParentName">
            <summary>
            Name of the parent of current NamedProtectionDomain.
            <para><c>MaxLengh:</c> 250</para>
            <para><c>Valid characters:</c> 0-9a-zA-Z&quot;&amp;'()-.@_space</para>
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.BusinessStatus">
            <summary>
            Business status
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.CombiningAlgorithmDefault">
            <summary>
            Default policy combining alogorithm to be used for current NamedProtectionDomain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.AttributeIssuers">
            <summary>
            Contains list of attribute issuers for which this current npd is either a owner or consumer npd
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain.Attributes">
            <summary>
            Contains list of attributes for which this current npd is either a owner or consumer npd
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainKey">
            <summary>
            NamedProtectionDomainKey is used to uniquely identify NamedProtectionDomain in system. Values presented by object of this class should always be unique for NamedProtectionDomain in the system.
            </summary>    
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainKey.name">
            <summary>
            Name of the NamedProtectionDomain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainKey.NamedProtectionDomainName">
            <summary>
            Unique name of the NamedProtectionDomain.
            <para><c>MaxLengh:</c> 250</para>
            <para><c>Valid characters:</c> 0-9a-zA-Z&quot;&amp;'()-.@_space</para>
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria">
            <summary>
            NamedProtectionDomainSearchCriteria class is used to search Named Protection Domains within the system.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria.Validate(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Validates the search criteria.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria.Name">
            <summary>
            Named Protection Domain name value to be used as criteria like 'MyDomain*'. It means search for all NamedProtectionDomains that starts with MyDomain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria.ParentName">
            <summary>
            Parent NamedProtectionDomain name value to be used as criteria like 'MyRootDomain*'. It means search for all NamedProtectionDomains having parent NamedProtectionDomain name starts with MyRootDomain.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria.BusinessStatus">
            <summary>
            Status value to be used as criteria like 'Draft*'. It means all named protection domains having status that starts with Draft.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria.RetrieveAllNamedProtectionDomains">
            <summary>
            Boolean search criteria that lets a BDM retrieve all Named Protection Domains in the system
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria.SystemRoleName">
            <summary>
            System Role Name
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.Operation">
            <summary>
            This is a summary of the possible operations for comparing various value and attributes.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Operation.Equals">
            <summary>
            This indicates an equal value operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Operation.NotEquals">
            <summary>
            This indicates a not equal value operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Operation.GreaterThan">
            <summary>
            This indicates an greater than value operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Operation.LessThan">
            <summary>
            This indicates an less than value operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Operation.Contains">
            <summary>
            This indicates an contains value operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Operation.NotContains">
            <summary>
            This indicates an not contains value operation
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.OperationType">
            <summary>
            Define database operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.OperationType.None">
            <summary>
            Insert operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.OperationType.Insert">
            <summary>
            Insert operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.OperationType.Delete">
            <summary>
            Delete operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.OperationType.Update">
            <summary>
            Update operation
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.OperationType.Get">
            <summary>
            Get operation
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.Page">
            <summary>
                <c>Page</c> represents a page or intended navigtion in paginated APIs.  
                <para>
                   In paginated APIs like Search APIs page to navigate to is identified by a combination of page number and page size /&gt;
                </para>
                <para>
                    <see cref="P:Microsoft.IT.Security.Core.DataEntities.Page.Size"/> is an optional parameter.
                    <see cref="P:Microsoft.IT.Security.Core.DataEntities.Page.Number"/> is an optional parameter.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Page.CanonicalizationRaisedHandler(System.Object,Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Page.Number">
            <summary>
                Indicates the page number to navigate to.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Page.Size">
            <summary>
                Number of records to fetch in the intended fetch. 
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs">
            <summary>
            Arguments passed to ResolveXmlSchemaName event to allow extensibility for providing XsdSchemas to the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataValidator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs.#ctor(Microsoft.IT.Security.Core.DataEntities.DictionaryEntry)">
            <summary>
            Constructs an instance from the passed in <paramref name="dictionaryEntry"/>.
            </summary>
            <param name="dictionaryEntry">
            The <see cref="P:Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs.DictionaryEntry"/> containing an XsdSchema name that requires resolution.
            </param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs.DictionaryEntry">
            <summary>
            Gets the <see cref="P:Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs.DictionaryEntry"/> containing an XsdSchema name that requires resolution.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ResolveXsdSchemaEventArgs.XsdSchema">
            <summary>
            Gets and sets the XsdSchema that is to be used for data validation.  Implementors of the event handler should set this
            property with the XSD schema that is to be used or leave it if the handler does not recognize the request.  If this
            value is set no further events will be posted.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.Resource">
            <summary>
            Represents resource information.
            </summary>    
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Resource.ExtractObjectScope(System.String)">
            <summary>
            ExtractObjectScope
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Resource.ResourcesToXml(Microsoft.IT.Security.Core.DataEntities.Resource,System.Xml.XmlWriter,System.String)">
            <summary>
            Convert Resource to XACML Xml
            </summary>
            <param name="resourceKey">resource key</param>
            <param name="xmlWriter"> XML writer used to write the entire resource object</param>
            <param name="ns">XACML NameSpace</param>
            <returns>XACML Xml representation of Resources</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Resource.FromXml(System.Xml.XmlReader)">
            <summary>
            PolicySet Xml Reader
            </summary>
            <param name="xmlReader">Xml Reader</param>
            <returns> Resource Object</returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Resource.Id">
            <summary>
            N/A
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Resource.PolicySource">
            <summary>
            Resource PolicySource Xml
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Resource.NewResourceKey">
            <summary>
            ResourceKey object.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Resource.ResourceKey">
            <summary>
            ResourceKey object.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Resource.Description">
            <summary>
            Description about resource. It is nullable property.
            <para><c>MaxLengh:</c> 400</para>
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.Resource.BusinessStatus">
            <summary>
            Status of the resource. It is nullable property.
            <para><c>MaxLengh:</c> 20</para>
            <para><c>Valid characters:</c> 0-9a-zA-Z&quot;&amp;'()-.@_space\r</para>
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ResourceKey">
            <summary>
            ResourceKey is used to uniquely identify resource in system. Values presented by object of this class should always be unique for resource in the system.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ResourceKey.ResourceName">
            <summary>
            Unique resource name within specified NamedProtectionDomain.
            <para><c>MaxLengh:</c> 2000</para>
            <para><c>Valid characters:</c> 0-9a-zA-Z&quot;&amp;'()-.@_space</para>
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ResourceKey.NamedProtectionDomain">
            <summary>
            It defines scope of resource.
            <para><c>MaxLengh:</c> 250</para>
            <para><c>Valid characters:</c> 0-9a-zA-Z&quot;&amp;'()-.@_space</para>
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ResourceSearchCriteria">
            <summary>
            ResourceSearchCriteria class is used to search resources within specified Named Protection Domain.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ResourceSearchCriteria.Validate(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Validates the search criteria.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ResourceSearchCriteria.BusinessStatus">
            <summary>
            Status value to be used as criteria like 'Draft%'. It means all resources having status that starts with Draft.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ResourceSearchCriteria.ResourceName">
            <summary>
            Resource name value should be used as criteria like 'MyPage%'. It means all resources which starts with MyPage.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ResourceSearchCriteria.SystemRoleName">
            <summary>
            Gets or sets the name of the system role.
            </summary>
            <value>The name of the system role.</value>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.SchemaValidator">
            <summary>
            Schema Validator to validate the attribute source Schema.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.SchemaValidator.#ctor(System.String,System.String)">
            <summary>
            Initialize xml reader object for passed in xacmlXml with schema validation settings
            </summary>
            <param name="xacmlXml">passed in xacml xml to attached schema validator</param>
            <param name="xacmlXmlType">xacml xml type(request,response, policyset etc)</param>
            <param name="context">context with correlation id, etc</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.SchemaValidator.Initialize">
            <summary>
            Initializes the static private variables that hold the schema data.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.SchemaValidator.ValidationHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
            <summary>
            Validator delegate will be called when xml contains elements/attributes which are not comply to schema
            </summary>
            <param name="sender">sender object</param>
            <param name="args">validation event argument</param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.SchemaValidator.XmlReader">
            <summary>
            Xml reader
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.SearchFilter">
            <summary>
            Represents Search Filter information to be used for Saerch/List APIs.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.IT.Security.Core.DataEntities.SearchResult`1" -->
        <member name="F:Microsoft.IT.Security.Core.DataEntities.SearchResult`1._results">
            <summary>
            List that stores list of results
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.SearchResult`1.Total">
            <summary>
            Total number of results that match the given search criteria. Actual number of items returned with SearchResult&lt;TEntity&gt; will
            depend on request Page&lt;TEntity&gt; and Page&lt;TEntity&gt;.Count requested or default Page size.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.SearchResult`1.Results">
            <summary>
            Actual set of results that are returned with this <see cref="T:Microsoft.IT.Security.Core.DataEntities.SearchResult`1"/>.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.NamedProtectionDomainNotExistErrorCode">
            <summary>
            NamedProtectionDomain not exist in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.NamedProtectionDomainAlreadyExistErrorCode">
            <summary>
            NamedProtectionDomain already exists in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.NamedProtectionDomainDependentObjectsExistErrorCode">
            <summary>
            NamedProtectionDomain dependent objects exists in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.NamedProtectionDomainDependentObjectsExistErrorMessage">
            <summary>
            NamedProtectionDomain dependent objects exists database error message
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ChildNamedProtectionDomainAlreadyExistErrorCode">
            <summary>
            Child NamedProtectionDomain exists in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.NamedProtectionDomainNotExistErrorMessage">
            <summary>
            NamedProtectionDomain does not exist database error message
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ChildNamedProtectionDomainAlreadyExistErrorMessage">
            <summary>
            Child NamedProtectionDomain already exists database error message
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ParentNamedProtectionDomainRequiredErrorCode">
            <summary>
            This error code is for scenario where during the creation of a NPD, we expect the user to supply the Parent NPD name also
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ParentNamedProtectionDomainRequiredErrorMessage">
            <summary>
            This error code is for scenario where during the creation of a NPD, we expect the user to supply the Parent NPD name also
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.InvalidParentNamedProtectionDomainErrorCode">
            <summary>
            This error code is for scenario where during the creation of a First-Level NPD, we expect the user to NOT supply the Parent NPD name
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.InvalidParentNamedProtectionDomainErrorMessage">
            <summary>
            This error code is for scenario where during the creation of a First-Level NPD, we expect the user to NOT supply the Parent NPD name
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ResourceNotExistErrorCode">
            <summary>
            Resource not exist in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ResourceAlreadyExistErrorCode">
            <summary>
            Resource already exists in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ResourceAlreadyExistDatabaseCode">
            <summary>
            Database error constant
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SubjectNotExistErrorCode">
            <summary>
            Subject not exist in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SubjectAlreadyExistErrorCode">
            <summary>
            Subject already exists in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SubjectConstraintValuesAssignErrorCode">
            <summary>
            Subject ContstraintValues Assign ErrorCode
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SubjectConstraintValuesUnassignErrorCode">
            <summary>
            Subject ContstraintValues Unassign ErrorCode
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.RealmNotExistErrorCode">
            <summary>
            Realm not exist in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.RealmAlreadyExistErrorCode">
            <summary>
            Realm already exists in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AttributeNotExistErrorCode">
            <summary>
            Attribute not exist in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AttributeAlreadyExistErrorCode">
            <summary>
            Attribute already exists in system
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AttributeSourceDefaultErrorCode">
            <summary>
            Only one source should be default.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AttributeSourceDefaultMinimumErrorCode">
            <summary>
            Attribute should have atleast one default source.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AttributeSourceNotUniqueErrorCode">
            <summary>
            Attribute should have unique sources
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ArgumentNullErrorCode">
            <summary>
            Error code for argument null exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ElementNullErrorCode">
            <summary>
            Element in argument collection null exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.EmptyCollectionErrorCode">
            <summary>
            Empty collection exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.PropertyNullErrorCode">
            <summary>
            Property null exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.PropertyMaxLengthErrorCode">
            <summary>
            Property max length exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.InvalidCharacterErrorCode">
            <summary>
            Invalid character exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ObjectAlreadyExistErrorCode">
            <summary>
            Object already exist exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ObjectNotExistErrorCode">
            <summary>
            Object doesn't exist exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AssignmentExistErrorCode">
            <summary>
            Assignment already exist exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AssignmentNotExistErrorCode">
            <summary>
            Assignment doesn't exist exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.CreateFailErrorCode">
            <summary>
            Create fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.UpdateFailErrorCode">
            <summary>
            Update fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.DeleteFailErrorCode">
            <summary>
            Delete fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.GetFailErrorCode">
            <summary>
            Get fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AssignFailErrorCode">
            <summary>
            Assign fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.UnassignFailErrorCode">
            <summary>
            Unassign fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SearchFailErrorCode">
            <summary>
            Search fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ListFailErrorCode">
            <summary>
            List fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SetFailErrorCode">
            <summary>
            Set fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.RemoveFailErrorCode">
            <summary>
            Remove fail exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.BulkLimitExceededErrorCode">
            <summary>
            Bulk limit exceeded exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.DuplicateObjectsErrorCode">
            <summary>
            Duplicate Objects in the list exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.ProviderNullErrorCode">
            <summary>
            Provider is not initialized exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SubjectDoesNotHaveRoles">
            <summary>
            Subject does not have specified roles exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.RoleToPermissionAssignmentDoesExist">
            <summary>
            Role to permission association does not exist exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.DelegatedRoleIsBeingDelegated">
            <summary>
            Delegation role is being delegated again exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.StartDateTimeIsInPast">
            <summary>
            Start date time is in past exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.EndDateTimeIsInPast">
            <summary>
            End date time is in past exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.StartDateGreaterThanEndDate">
            <summary>
            Start date is in future w.r.t. end date exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.TargetSubjectDoesNotHaveDirectRoleForObo">
            <summary>
            Target subject does not have direct role for OBO grant
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.CreatePrivilegeAssignmentFailed">
            <summary>
            CreatePrivilegeAssignmentFailed exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.DeletePrivilegeAssignmentFailed">
            <summary>
            DeletePrivilegeAssignmentFailed exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.UpdatePrivilegeAssignmentFailed">
            <summary>
            UpdatePrivilegeAssignmentFailed exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.AssignRolePermissionToPrivilegeAssignmentFailed">
            <summary>
            AssignRolePermissionToPrivilegeAssignmentFailed exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.UnassignRolePermissionFromPrivilegeAssignmentFailed">
            <summary>
            UnassignRolePermissionFromPrivilegeAssignmentFailed exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.GetPrivilegeAssignmentFailed">
            <summary>
            GetPrivilegeAssignmentFailed exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SearchPrivilegeAssignmentsFailed">
            <summary>
            SearchPrivilegeAssignmentsailed exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.PrivilegeAssignmentCannotExistWithoutAnyRoleOrPermission">
            <summary>
            PrivilegeAssignment should be created with atleast one role or permissions exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.NoRolePermissionToAssignToPrivilegeAssignment">
            <summary>
            No role permissions to assign exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.NoRolePermissionToUnassignToPrivilegeAssignment">
            <summary>
            No role permissions to unassign exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SourceSubjectCannotBeUpdated">
            <summary>
            Source subject is not allowed to be updated exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.PrivilegeAssignmentTypeNotSet">
            <summary>
            Privilege assignment type not set exception
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.PrivilegeSearchCriteriaTypeError">
            <summary>
            Privilege search criteria type error
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.SourceSubjectCannotBeSameAsTargetSubject">
            <summary>
            source subject can't be same as target subject error
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.VelocityExceptionErrorCode">
            <summary>
            Velocity get data error constant.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.FailedToInitializeCaching">
            <summary>
            Failed to initialize cache manager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.FailedToGetCacheValidationIntervalFromConfiguration">
            <summary>
            Failed to get cache interval for validation from CM or config file
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ErrorCodes.FailedToPutObjectInCache">
            <summary>
            Failed to add or replace an object in the cache. 
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.Status">
            <summary>
            Access Integration Status types used for enabling logical transactions. 
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.None">
            <summary>
            None means default status.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.Active">
            <summary>
            Active means that the object is in a usable state and can be used safely.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.Inactive">
            <summary>
            Inactive means that the object is essentially disabled, or should not be used.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.PendingCreate">
            <summary>
            PendingCreate means that the object is pending to be created in the system, 
            and will change to either Active or Deleted depending on its dependencies.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.PendingDelete">
            <summary>
            PendingDelete means that the object is pending to be deleted in the system, 
            and will change to either Deleted or Back to its previous setting, depending 
            on its dependencies.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.PendingUpdate">
            <summary>
            PendingUpdate means that the object is pending to be updated in the system, 
            and will change to Active once it has been udpated across depended systems.
            on its dependencies.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.Deleted">
            <summary>
            Deleted means that the object is essentially disabled, or should not be used, 
            will be cleaned up by a periodic cleanup job.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.PendingProvisioning">
            <summary>
            PendingProvisioning means that the requested provisioning object/resource is currently pending to be provisioned (though it may or may not be processed for provisioning)
            to the external system. This should not be cleaned up by periodic cleanup job.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.Provisioned">
            <summary>
            Provisioned means that the requested provisioning object/resource is successfully provisioned to the external system.
            This should not be cleaned up by periodic cleanup job.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.FailedProvisioning">
            <summary>
            Provisioned means that the requested provisioning object/resource is not provisioned to the external system.
            This should not be cleaned up by periodic cleanup job.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.PendingProcessing">
            <summary>
            PendingProcessing means that AIS Service Provisioning Request Processor has picked up the Request and is currently under processing.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.Status.FailedProcessing">
            <summary>
            FailedProcessing means that AIS Service Provisioning Request Processor was unable to process the Request.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.GetCallerCredentialForServiceBusRelayEndpoint">
            <summary>
            //Populate identity based on the claims in the incoming message properties. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.HasDuplicates``1(System.Collections.Generic.IList{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
            Check if has duplication in a list of any type with a customized comparer
            </summary>
            <typeparam name="T">Type of the item in the list.</typeparam>
            <param name="list">A list of items of type T.</param>
            <param name="areSame">A function to compare two objects of type T. Return true if they equal</param>
            <returns>true if has duplication, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.HasDuplicates(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeEntity})">
            <summary>
            Check if has duplication in a list of AttributeEntity
            </summary>
            <param name="list">A list of instances of type AttributeEntity.</param>
            <returns>true if has duplication, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.HasDuplicates(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeIssuer})">
            <summary>
            Check if has duplication in a list of AttributeIssuer
            </summary>
            <param name="list">A list of instances of type AttributeIssuer.</param>
            <returns>true if has duplication, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.HasDuplicates(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain})">
            <summary>
            Check if has duplication in a list of NamedProtectionDomain
            </summary>
            <param name="list">A list of instances of type NamedProtectionDomain.</param>
            <returns>true if has duplication, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.HasDuplicates(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeSource})">
            <summary>
            Check if has duplication in a list of AttributeSource
            </summary>
            <param name="list">A list of instances of type AttributeSource.</param>
            <returns>true if has duplication, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.HasDuplicates(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.Resource})">
            <summary>
            Check if has duplication in a list of AttributeSource
            </summary>
            <param name="list">A list of instances of type AttributeSource.</param>
            <returns>true if has duplication, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.HasDuplicates(System.Collections.Generic.IList{System.String})">
            <summary>
            Check if has duplication in a list of Tags (RoleTag, PermissionTag)
            </summary>
            <param name="list">A list of instances of type string.</param>
            <returns>true if has duplication, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.TrimValue(System.String)">
            <summary>
            To Trim leading and trailing spaces in a string property.
            </summary>
            <param name="value">String value to be trimmed.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.CreateStreamWriter(System.String)">
            <summary>
            Create StreamWriter from XML text.
            </summary>
            <param name="xmlText">Input XML text.</param>
            <returns>Created MemoryStream.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.CreateDtdFreeXmlReader(System.IO.Stream)">
            <summary>
            Create XMLReader from MemoryStream.
            </summary>
            <param name="stream">Stream to load XML.</param>
            <returns>Created XMLReader.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.CreateXmlDocument(System.String)">
            <summary>
            Create XmlDocument for string.
            </summary>
            <param name="xml">The xml string.</param>
            <returns>The XmlDocument.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.CreateXPathDocument(System.String)">
            <summary>
            Create XmlDocument for string.
            </summary>
            <param name="xml">The xml string.</param>
            <returns>The XPathDocument.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.Utility.GetCredential(System.String,System.String@,System.String@)">
            <summary>
            Populates subject key and realmname by querying Subject table
            </summary>
            <param name="userPrincipalName"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ValidationActions">
            <summary>
            A [Flags] based enumeration describing the various CRUD actions for which validation rules will apply.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.None">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Create">
            <summary>
            Validations would apply to operations that add new data.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Read">
            <summary>
            Validations would apply to read-only operations like lookups for existing data. 
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Update">
            <summary>
            Validations would apply to operations that modify existing data.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Delete">
            <summary>
            Validation would apply to operations that delete existing data.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Assign">
            <summary>
            Validation would apply to operations that create relationships between existing data and potentially new data.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Unassign">
            <summary>
            Validation would apply to operations that delete relationships between existing data instances.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Search">
            <summary>
            Validation would apply to operations that provide searching capabilities and allow the potential use of wildcard characters.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.Enforcement">
            <summary>
            Validation would apply to enforcement operations.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.CreateVersion">
            <summary>
            Validation would apply to operations that create versions for policies, rules and attributes.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.ReadVersion">
            <summary>
            Validation would apply to operations that read versions for policies, rules and attributes.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.UpdateVersion">
            <summary>
            Validation would apply to operations that update versions for policies, rules and attributes.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.DeleteVersion">
            <summary>
            Validation would apply to operations that delete versions for policies, rules and attributes.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.AllCrud">
            <summary>
            Validation would apply to all CRUD operations. Currently defined as Create | Read | Update | Delete | Assign | Unassign.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.ValidationActions.AllCrudVersion">
            <summary>
            Validation would apply to all version related CRUD operations. Currently defined as CreateVersion | ReadVersion | UpdateVersion | DeleteVersion.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs">
            <summary>
            The event argurments that are passed to the validation callback event handlers in order to extend validation with custom rules
            no directly supported by the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataValidator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.#ctor(System.Object,Microsoft.IT.Security.Core.DataEntities.DictionaryEntry,Microsoft.IT.Security.Core.DataEntities.ValidationActions,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Constructs an instance from the passed in values which correspond to the public properties of the same name.
            </summary>
            <param name="value">
            The value that is to be validated.
            </param>
            <param name="dictionaryEntry">
            The <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.DictionaryEntry"/> that specifies the dictionary rules defined for the value to be validated.
            </param>
            <param name="validationActions">
            The <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.ValidationActions"/> identifying the context used for canonicalization and validation.
            </param>
            <param name="customContext">
            The <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.CustomContext"/> that is used for event logging on validation failures.
            </param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.Value">
            <summary>
            Gets the value that is to be validated or canonicalized.  This value may be null.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.DictionaryEntry">
            <summary>
            Gets the <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.DictionaryEntry"/> that specifies the dictionary rules defined for the value to be validated or canonicalized.  This value may be null.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.ValidationActions">
            <summary>
            Gets the <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.ValidationActions"/> value that is specific to the method that is currently being evaluated.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.CustomContext">
            <summary>
            Gets the <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationEventArgs.CustomContext"/> that is to be used for any validation exceptions that are thrown.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ValidationPattern">
            <summary>
            This class represents a single regular expression pattern that is to be applied to the value of a data entity property.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.Initialize(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <param name="dataDictionary">
            The instance of the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataDictionary"/> class that contains the instance being initialized.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown when any violation of internal data state is detected.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.Name">
            <summary>
            Gets and sets the logical name for the validation pattern.  Name values must be unique within the data dictionary ValidationPatterns collection of meta-data.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.Description">
            <summary>
            Gets and sets a human readable description of what the Pattern property regular expression is validating.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.Pattern">
            <summary>
            Gets and sets the regular expression that constitutes the validation pattern.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.RegexOptions">
            <summary>
            Gets and sets the <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.RegexOptions"/> that should be used to evaluate the Regex expression.  Default is RegexOptions.None.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.IncludeCharacterSets">
            <summary>
            Gets and sets a comma delimited set of references to <see cref="T:Microsoft.IT.Security.Core.DataEntities.CharacterSet"/> instances that will be concatenated 
            to form the set of allowed characters for a string field when performing validation.
            When this property is specified the ValidationPattern property cannot be specified. Use ExcludeCharacterSets property when desired 
            to omit certain characters from the final effective regular expression.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.ExcludeCharacterSets">
            <summary>
            Gets and sets a comma delimited set of references to <see cref="T:Microsoft.IT.Security.Core.DataEntities.CharacterSet"/> instances that will be concatenated 
            to form the set of characters that are not allowed for a string field when performing validation.
            When this property is specified the IncludeCharacterSets property is required.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.Regex">
            <summary>
            Gets a reusable <see cref="P:Microsoft.IT.Security.Core.DataEntities.ValidationPattern.Regex"/> object instance to be used for performing the data validations.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.ValidationPatternCollection">
            <summary>
            A collection of <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationPattern"/> object instances.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ValidationPatternCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataEntities.ValidationPatternCollection.Initialize(Microsoft.IT.Security.Core.DataEntities.DataDictionary)">
            <summary>
            Internal method called by the parent object to have this instance perform validation of internal state.
            This method's implemenation should validate the instance properties and call Initialize() on all child objects.
            </summary>
            <param name="dataDictionary">
            The instance of the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DataDictionary"/> class that contains the instance being initialized.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown when any violation of internal data state is detected.
            </exception>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataEntities.MatchResultOption">
            <summary>
            An enumeration that is used to mark <see cref="T:Microsoft.IT.Security.Core.DataEntities.ValidationPattern"/> instances as to how the results from a call to Regex.Match() method are to be interpreted.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.MatchResultOption.Undefined">
            <summary>
            Specifies an undefined value.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.MatchResultOption.MustMatch">
            <summary>
            Specifies that when the ValidationPattern is applied the result will be considered successful only if the return value from Regex.Match() method is true.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.DataEntities.MatchResultOption.MustNotMatch">
            <summary>
            Specifies that when the ValidationPattern is applied the result will be considered successful only if the return value from Regex.Match() method is false.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataProviders.CommonManager">
            <summary>
            Common manager provides abstraction to accessing data for service layer.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.#cctor">
            <summary>
            Create provider list and keep them in memory
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.#ctor">
            <summary>
            Set default provider to the application level default provider
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.#ctor(Microsoft.IT.Security.Core.DataProviders.CommonProvider)">
            <summary>
            Set default provider to the passed provider while creating manager
            </summary>
            <param name="dataProvider">dataprovider object</param>    
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.#ctor(System.String)">
            <summary>
            Set default provider to the passed provider Name while creating manager.
            </summary>
            <param name="dataProvider">dataprovider object</param>    
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.SetProvider(Microsoft.IT.Security.Core.DataProviders.CommonProvider)">
            <summary>
            Sets default provider to the passed provider.
            </summary>
            <param name="dataProvider">dataprovider object</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.GetProvider(System.String)">
            <summary>
            Returns specific dataprovider.
            </summary>
            <param name="provider">provider name</param>
            <returns>dataprovider object</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.Create``1(``0,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Create entities using appropriate provider
            </summary>
            <typeparam name="TEntity">entity type</typeparam>
            <param name="entities">entity collection</param>                
            <param name="context">context with corelation id etc</param>
            <returns>return entities list</returns>        
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.Update``1(``0,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Update entities using appropriate provider
            </summary>
            <typeparam name="TEntity">entity type</typeparam>
            <param name="entities">entity collection</param>                
            <param name="context">context with corelation id etc</param>
            <returns>return entities list</returns> 
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.Update(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            
            </summary>
            <param name="attributeEntity"></param>
            <param name="isAttributeReferenced"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.Get``1(``0,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Get entity object for passed in criteria
            </summary>
            <typeparam name="TEntity">entity type</typeparam>
            <param name="entity">passed in criteria</param>                
            <param name="context">context with corelation id etc</param>
            <returns>return entity object</returns> 
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.Delete``1(``0,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Delete entities using appropriate provider
            </summary>
            <param name="entity">passed in entity.</param> 
            <param name="context">context with corelation id etc.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.IsReferenced(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to find out whether Attribute is referenced in Policy administration
            </summary>
            <param name="attribute"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonManager.IsReferenced(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to find out whether Attribute is referenced in Policy administration
            </summary>
            <param name="attribute"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataProviders.CommonManager.CommonDefaultProvider">
            <summary>
            Get default dataprovider
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.DataProviders.CommonManager.ProviderList">
            <summary>
            Get list of all the configured dataprovider.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataProviders.CommonProvider">
            <summary>
            Base class for Common Data Provider.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Create(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to create new NamedProtectionDomain.
            </summary>
            <param name="namedProtectionDomain">Named protection domain object to be created in source.</param>
            <param name="context">Custom context.</param>
            <returns>Created named protection domain object which might be changed due to create operation.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Update(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to update existing NamedProtectionDomain.
            </summary>
            <param name="namedProtectionDomain">Named protection domain object to be created in source.</param>
            <param name="context">Custom context.</param>
            <returns>Updated named protection domain object which might be changed due to update operation.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Delete(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to delete existing NamedProtectionDomain.
            </summary>
            <param name="namedProtectionDomain">Named protection domain object contains data which is required to delete object from source.</param>
            <param name="context">Custom context.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Get(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to get existing NamedProtectionDomain.
            </summary>
            <param name="namedProtectionDomain">Named protection domain object to be found.</param>
            <param name="context">Custom context.</param>
            <returns>Found named protection domain object.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Search(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomainSearchCriteria,Microsoft.IT.Security.Core.DataEntities.Page,System.Collections.Generic.List{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Search named protection domains.
            </summary>
            <param name="criteria">Search criteria.</param>
            <param name="page">Page</param>
            <param name="accessibleNamedProtectionDomainList">List of NamedProtecitonDomain names on which current user is having access.</param>
            <param name="context">Custom context.</param>
            <returns>Search result having found named protection domains.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.ListDescendant(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to list all the descendents of a given NamedProtectionDomain
            </summary>
            <param name="namedProtectionDomain">NamedProtectionDomain object contains data which is required to fetch the children objects</param>
            <param name="accessibleNamedProtectionDomainList">List of NamedProtecitonDomain names on which current user is having access.</param>
            <returns>Returns the hierarchical structure that contains the children in it</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.ListAscendant(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to list all the ancestors of a given NamedProtectionDomain
            </summary>
            <param name="namedProtectionDomain"></param>
            <param name="accessibleNamedProtectionDomainList">List of NamedProtecitonDomain names on which current user is having access.</param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Create(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to create resources in database
            </summary>
            <param name="resource">IList&lt;Resource&gt; collection will be created in source</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns IList&lt;resource&gt; collection which might be changed due to create operation</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Delete(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to delete existing resources
            </summary>
            <param name="resource">Resource object will be created in source</param>
            <param name="context">context with corelation id etc</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Update(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to update existing resources
            </summary>
            <param name="entities">IList&lt;Resource&gt; collection will be created in source</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns IList&lt;resource&gt; collection which might be changed due to create operation</returns>       
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Get(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Overriding Get method to get existing Resource
            </summary>        
            <param name="entity">resource object contains data which is required to find object from source</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns Resource object</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Search(Microsoft.IT.Security.Core.DataEntities.ResourceSearchCriteria,Microsoft.IT.Security.Core.DataEntities.Page,System.Collections.Generic.List{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Result list of result for specified criteria
            </summary>
            <param name="criteria">Resource search criteria</param>
            <param name="page">page information</param>
            <param name="namedProtectionDomain">namedprotectiondomain</param>
            <param name="includeChildNamedProtectionDomain">include child namedprotectiondomain</param>
            <param name="context">context with corelation id etc</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Create(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to create new Attribute
            </summary>
            <param name="attributeEntity">Attribute object contains data which is required to create new attribute</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Update(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to update existing Attribute
            </summary>
            <param name="attributeEntity">attributeEntity object contains data which is required to update the existing Attribute</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Delete(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to delete existing Attribute
            </summary>
            <param name="attributeEntity"> object contains data which is required to delete the existing Attribute</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.GetAttributesWithIDs(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeEntity},Microsoft.IT.Security.Core.CustomContext)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Get(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.CustomContext)" -->
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.GetAttributeDetail(System.Collections.Generic.IList{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Gets details of attributes based on attribute ids
            </summary>
            <param name="attributeIds"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.GetPolicySetsByResource(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Gets all policyset associated with resource
            </summary>
            <param name="resource">resource</param>
            <param name="context"></param>
            <returns>all policysets associated with resource</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Assign(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            verride this method to Assign
            </summary>
            <param name="attribute"></param>
            <param name="resource"></param>
            <param name="context"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Unassign(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)" -->
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Create(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Update(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Delete(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Get(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.Search(Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria,Microsoft.IT.Security.Core.DataEntities.Page,System.Collections.Generic.List{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Searches for Attribute Issuers
            </summary>
            <param name="criteria"></param>
            <param name="sortFilter"></param>
            <param name="accessibleNpdList"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.CheckReference(System.String,System.String,System.String,System.Double,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check reference of RA/PA object in common database
            </summary>
            <param name="namedProtectionDomain">object's named protection domain</param>
            <param name="objectName">object name</param>
            <param name="objectType">object type (PolicySet, Policy etc)</param>
            <param name="objectVersion">object version</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns boolean, true means there is reference of RA/PA in common, false means there is no reference</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.CheckReference(System.String,System.String,System.String,System.Double,System.String,System.String,System.Double,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check reference of RA/PA object in common database
            </summary>
            <param name="namedProtectionDomain">object's named protection domain</param>
            <param name="objectName">object name</param>
            <param name="objectType">object type (PolicySet, Policy etc)</param>
            <param name="objectVersion">object version</param>
            <param name="parentObjectName">parent object name</param>
            <param name="parentObjectType">parent object type (PolicySet, Policy etc)</param>
            <param name="parentObjectVersion">parent object version</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns boolean, true means there is reference of RA/PA in common, false means there is no reference</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.ValidateTypeAndFunction(System.Collections.Generic.List{Microsoft.IT.Security.Core.DataEntities.AttributeFunctionIDPair},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check data type and function are matached in common database, will throw exception if data type and function not match
            </summary>
            <param name="typeFunction">pair of type and function</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.ValidateTypeAndFunction(System.Collections.Generic.List{Microsoft.IT.Security.Core.DataEntities.AttributeFunctionNamePair},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check data type and function are matached in common database,function is passed as xacml format, will throw exception if data type and function not match
            </summary>
            <param name="typeFunction">pair of type and function</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.ConvertFunction(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to convert functions between XACML compatiable function and platform short function name
            </summary>
            <param name="functions">list of function</param>
            <param name="fromShortToLong">if true, convert from short to long name, if false, convert from long to short name</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.CommonProvider.GetWithScopeCheck(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,System.Collections.Generic.IList{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to get existing NamedProtectionDomain.
            </summary>
            <param name="namedProtectionDomain">Named protection domain object to be found.</param>
            <param name="context">Custom context.</param>
            <returns>Found named protection domain object.</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.DataProviders.SqlProvider">
            <summary>
            SqlProvider is used to connect to the Sql Server database
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize provider.
            </summary>
            <param name="providerName">provider name</param>
            <param name="config">configurable parameters</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Create(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Registers the specified NamedProtectionDomain object.
            </summary>
            <param name="namedProtectionDomain">NamedProtectionDomain object to be created.</param>
            <param name="context">Custom context.</param>
            <returns>Registerred NamedProtectionDomain object.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Delete(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Removes the specified NamedProtectionDomain object.
            </summary>
            <param name="namedProtectionDomain">NamedProtectionDomain object to be created.</param>
            <param name="context">Custom context.</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Get(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Finds the specified NamedProtectionDomain details.
            </summary>
            <param name="namedProtectionDomain">NamedProtectionDomain object to be created.</param>
            <param name="context">Custom context.</param>
            <returns>Found named protection domain.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.ListDescendant(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Searches the specified NamedProtectionDomains as per criteria specified.
            </summary>
            <param name="criteria">Criteria to be used for search.</param>
            <param name="page">Page</param>
            <param name="namedProtectionDomain">Named protection domain under whihc serch will be performed.</param>
            <param name="includeChildNamedProtectionDomains">Flag to indicate whether childs to be considered in search or not.</param>
            <param name="context">Custom context.</param>
            <returns>Search result having found objects.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.ListAscendant(Microsoft.IT.Security.Core.DataEntities.NamedProtectionDomain,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to list all the ancestors of a given NamedProtectionDomain
            </summary>
            <param name="namedProtectionDomain"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Create(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Overriding Create method to create resources in database
            </summary>
            <param name="resource">IList&lt;Resource&gt; collection will be created in source</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns IList&lt;resource&gt; collection which might be changed due to create operation</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Delete(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Override this method to delete existing Resource
            </summary>
            <param name="resource">Resource object will be created in source</param>
            <param name="context">context with corelation id etc</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Update(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Overriding this method to update existing Resource
            </summary>
            <param name="entities">IList&lt;Resource&gt; collection will be created in source</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns IList&lt;resource&gt; collection which might be changed due to create operation</returns>        
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Get(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Overriding Get method to get existing Resource
            </summary>        
            <param name="resource">resource object contains data which is required to find object from source</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns Resource object</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Search(Microsoft.IT.Security.Core.DataEntities.ResourceSearchCriteria,Microsoft.IT.Security.Core.DataEntities.Page,System.Collections.Generic.List{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Result list of result for specified criteria
            </summary>
            <param name="criteria">resoruce search criteria</param>
            <param name="page">page information</param>
            <param name="namedProtectionDomain">namedprotectiondomain</param>
            <param name="includeChildNamedProtectionDomain">include child namedprotectiondomain</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Create(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Creates the Attribute
            </summary>
            <param name="attributeEntity"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Update(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Updates the Attribute
            </summary>
            <param name="attributeEntity"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Delete(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Deletes the Attribute
            </summary>
            <param name="attributeEntity"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Get(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Fetches the Attribute
            </summary>
            <param name="attributeEntity"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.GetWithScopeCheck(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,System.Collections.Generic.IList{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Fetches the Attribute
            </summary>
            <param name="attributeEntity"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.GetPolicySetsByResource(Microsoft.IT.Security.Core.DataEntities.Resource,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Gets all policyset associated with resource
            </summary>
            <param name="resource">resource</param>
            <param name="context"></param>
            <returns>all policysets associated with resource</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.GetAttributeDetail(System.Collections.Generic.IList{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Fetches the Attribute with attribute id and npd id also
            </summary>
            <param name="attributeEntity"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.GetAttributesWithIDs(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeEntity},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Fetches the Attribute with attribute id and npd id also
            </summary>
            <param name="attributeEntity"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Search(Microsoft.IT.Security.Core.DataEntities.AttributeSearchCriteria,Microsoft.IT.Security.Core.DataEntities.Page,System.Collections.Generic.List{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to search attributes in database.
            </summary>
            <param name="criteria">AttributeSearchCriteria</param>
            <param name="page">AttributeEntity</param>
            <param name="npd">npd</param>
            <param name="context">context</param>
            <returns>AttributeEntity</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Search(Microsoft.IT.Security.Core.DataEntities.AttributeIssuerSearchCriteria,Microsoft.IT.Security.Core.DataEntities.Page,System.Collections.Generic.List{System.String},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to search attribute issuers in database.
            </summary>
            <param name="criteria">AttributeIssuerSearchCriteria</param>
            <param name="page">Page</param>
            <param name="npd">npd</param>
            <param name="context">context</param>
            <returns>AttributeIssuer</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Create(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to create attribute Issuer.
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Update(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to update issuer details
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Delete(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             This method is used to delete attribute issuer
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.Get(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            This method is used to get  attribute Issuer details.
            </summary>
            <param name="attributeIssuer"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.CheckReference(System.String,System.String,System.String,System.Double,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check reference of RA/PA object in common database
            </summary>
            <param name="namedProtectionDomain">object's named protection domain</param>
            <param name="objectName">object name</param>
            <param name="objectType">object type (PolicySet, Policy etc)</param>
            <param name="objectVersion">object version</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns boolean, true means there is reference of RA/PA in common, false means there is no reference</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.CheckReference(System.String,System.String,System.String,System.Double,System.String,System.String,System.Double,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check reference of RA/PA object in common database
            </summary>
            <param name="namedProtectionDomain">object's named protection domain</param>
            <param name="objectName">object name</param>
            <param name="objectType">object type (PolicySet, Policy etc)</param>
            <param name="objectVersion">object version</param>
            <param name="parentObjectName">parent object name</param>
            <param name="parentObjectType">parent object type (PolicySet, Policy etc)</param>
            <param name="parentObjectVersion">parent object version</param>
            <param name="context">context with corelation id etc</param>
            <returns>returns boolean, true means there is reference of RA/PA in common, false means there is no reference</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.ValidateTypeAndFunction(System.Collections.Generic.List{Microsoft.IT.Security.Core.DataEntities.AttributeFunctionIDPair},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check data type and function are matached in common database
            </summary>
            <param name="typeFunction">pair of type and function</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.ValidateTypeAndFunction(System.Collections.Generic.List{Microsoft.IT.Security.Core.DataEntities.AttributeFunctionNamePair},Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to check data type and function are matached in common database
            </summary>
            <param name="typeFunction">pair of type and function</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.DataProviders.SqlProvider.ConvertFunction(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
             Override this method to convert functions between XACML compatiable function and platform short function name
            </summary>
            <param name="functions">list of function</param>
            <param name="fromShortToLong">if true, convert from short to long name, if false, convert from long to short name</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.ExtensionMethods">
            <summary>
            Extension Class for SQL Strings
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.ExtensionMethods.TrimAttributeValueTag(System.String)">
            <summary>
            Removes leading and trailing whitespaces from AttributeValue in rule condition
            </summary>
            <param name="condition">Rule Condition string</param>
            <returns>Rule condition with trimmed AttributeValue</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.ExtensionMethods.Truncate(System.String,System.Int32)">
            <summary>
            Truncates the specified string to a maximum length.
            </summary>
            <param name="value">The value.</param>
            <param name="maxLength">The maximum length.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.IdentityType">
            <summary>
            Define identity types
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.IdentityType.Certificate">
            <summary>
            This indicates certificate is subject identity data type
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.IdentityType.Sts">
            <summary>
            This indicates STS is subject identity data type
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.IdentityType.Windows">
            <summary>
            This indicates Windows Principal is subject identity data type
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.IdentityType.SingleSignOnIdentity">
            <summary>
            This indicates single sign on identity data type
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.IdentityType.AzureAD">
            <summary>
            This indicates Azure Active Directory identity data type
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.IObjectInformationExtractor">
            <summary>
            Defines the interface which must be implemented by objects who are interested in authorization through interceptor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.IObjectInformationExtractor.ExtractObjectInformation">
            <summary>
            Extract business object's scope. 
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeIssuerService.CreateAttributeIssuer(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeIssuer})">
            <summary>
            This operation allows the caller to create Attribute issuer.
            </summary>
            <param name="attributeIssuers"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeIssuerService.UpdateAttributeIssuer(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeIssuer})">
            <summary>
            This operation allows to Update the attribute Issuer details ( Issuer Properties and sources)
            </summary>
            <param name="attributeIssuers"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeIssuerService.RequestDeleteAttribute(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer)">
            <summary>
            This operation allows the caller to delete the AttributeIssuer
            </summary>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeIssuerService.DeleteAttributeIssuer(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer,System.String)">
            <summary>
            This operation allows the caller to delete the Attribute issuer.
            </summary>
            <param name="attributeIssuer"></param>
            <param name="deleteRequestKey"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeIssuerService.GetAttributeIssuer(Microsoft.IT.Security.Core.DataEntities.AttributeIssuer)">
            <summary>
            This operation allows the caller to get the Attribute Issuer details.
            </summary>
            <param name="attributeIssuer"></param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.AttributeService.SsmSyncSqlProviderName">
            <summary>
            SsmSyncSqlProviderName
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeService.CreateAttribute(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeEntity})">
            <summary>
            This operation allows the caller to create Attribute under issuing Authority.
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeService.UpdateAttribute(System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeEntity})">
            <summary>
            This operation allows the caller to Update the Attribute details
            </summary>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeService.RequestDeleteAttribute(Microsoft.IT.Security.Core.DataEntities.AttributeEntity)">
            <summary>
            This operation allows the caller to delete the Attribute
            </summary>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeService.DeleteAttribute(Microsoft.IT.Security.Core.DataEntities.AttributeEntity,System.String,System.Transactions.TransactionScope)">
            <summary>
            This operation allows the caller to delete the Attribute asynchronously.
            </summary>
            <param name="attribute"></param>
            <param name="deleteRequestKey"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.AttributeService.GetAttribute(Microsoft.IT.Security.Core.DataEntities.AttributeEntity)">
            <summary>
            This operation allows the caller to get the attribute details of given attribute.
            </summary>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ServiceIdentityType">
            <summary>
            Defines identity type for wcf communication channel
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.ServiceIdentityType.DomainNameSystem">
            <summary>
            to specify dns value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.ServiceIdentityType.UserPrincipalName">
            <summary>
            to specify upn value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.ServiceIdentityType.ServicePrincipalName">
            <summary>
            to specify spn value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.ServiceIdentityType.PublicKey">
            <summary>
            to specify rsa value
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.BindingType">
            <summary>
            Defines binding type for wcf communication channel
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.BindingType.BasicHttpBinding">
            <summary>
            to use BasicHttpBinding protocol
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.BindingType.WSHttpBinding">
            <summary>
            to use wsHttpBinding protocol
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.BindingType.NetTcpBinding">
            <summary>
            to use NetTcpBinding protocol
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Server.BindingType.WSFederationHttpBinding">
            <summary>
            to use WSFederationHttpBinding protocol
            </summary>        
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ChannelFactory">
            <summary>
            This calss is used to create communication channel
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ChannelFactory.CreateChannel``1(System.String)">
            <summary>
            creates proxy object
            </summary>
            <typeparam name="TEntity">contract interface type</typeparam>
            <param name="path">Proxy's configuration items folder path</param>        
            <returns>returns proxy object</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ChannelFactory.CreateChannel``1(System.String,System.Uri)">
            <summary>
            creates proxy object
            </summary>
            <typeparam name="TEntity">contract interface type</typeparam>
            <param name="path">Proxy's configuration items folder path</param>
            <param name="overrideUrl">Service url to override the value specified in config</param>
            <returns>returns proxy object</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ChannelFactory.CreateServiceIdentityType(System.String)">
            <summary>
            creates service identity type enum
            </summary>
            <param name="serviceIdentityType">service identity type value</param>
            <returns>returns service identity type enum</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ChannelFactory.CreateBindingType(System.String)">
            <summary>
            creates binding type enum
            </summary>
            <param name="bindingType">binding type value</param>
            <returns>returns binding enum</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ConstraintExpressionHelper.ConvertToConstraintExpressionWithAttributeName(System.String,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Converts a constraint expression having attribute ids to one which is having attribute FQDNs
            </summary>
            <param name="originalConstraintExpression">CE with AttributeIDs</param>
            <returns>CE with AttributeIDs replaced by Attribute FQDNs</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ConstraintExpressionHelper.ConvertToConstraintExpressionWithAttributeName(System.String,System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeKey}@,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Converts a constraint expression having attribute ids to one which is having attribute FQDNs
            </summary>
            <param name="originalConstraintExpression">CE with AttributeIDs</param>
            <param name="attributeList">Gets list of attributes used in the constraint expression</param>
            <returns>CE with AttributeIDs replaced by Attribute FQDNs</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ConstraintExpressionHelper.ConvertToConstraintExpressionWithAttributeIds(System.String,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Converts a constraint expression having attribute FQDNs to one which is having attribute ids.
            Here we parse the expression to convert Attribute FQDNs to Attribute IDs and as well as get the list of attributes used in the expression. 
            This is so that we can optimize doing both the things at the same time.
            </summary>
            <param name="originalConstraintExpression">CE with Attribute FQDNs</param>
            <returns>CE with AttributeIDs</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ConstraintExpressionHelper.ConvertToConstraintExpressionWithAttributeIds(System.String,System.Collections.Generic.IList{Microsoft.IT.Security.Core.DataEntities.AttributeKey}@,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Converts a constraint expression having attribute FQDNs to one which is having attribute ids.
            Here we parse the expression to convert Attribute FQDNs to Attribute IDs and as well as get the list of attributes used in the expression. 
            This is so that we can optimize doing both the things at the same time.
            </summary>
            <param name="originalConstraintExpression">CE with Attribute FQDNs</param>
            <param name="attributeList">Gets list of attributes used in the constraint expression</param>
            <returns>CE with AttributeIDs</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ConstraintExpressionHelper.ParseAttributeName(System.String)">
            <summary>
            Construct AttributeEntity object from a FQDN string representation of a Attribute
            </summary>
            <param name="attributeFullyQualifiedName">Attribute's FQDN</param>
            <returns>AttributeEntity object</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ConstraintExpressionHelper.ParseAttribute(System.String,System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Gets the attribute key object when given an attribute FQDN or AttributeID
            </summary>
            <param name="attributeDetail">A string representation of a attribute in FQDN or AttributeID form</param>
            <param name="isAttributeFqdn">Flag to check indicate if provided detail is a FQDN or not</param>
            <returns>AttributeKey object</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ConstraintExpressionHelper.ModifyConstraintExpression(System.String,Microsoft.IT.Security.Core.DataEntities.AttributeKey,System.Text.StringBuilder,System.Boolean,Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Helper method to modify the Constraint Expression to either ID or FQDN
            </summary>
            <param name="attributeDetail"></param>
            <param name="attributeKey"></param>
            <param name="modifiedConstraintExpression"></param>
            <param name="convertToAttributeIds"></param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ErrorBehaviorAttribute">
            <summary>
            Attaches <see cref="T:Microsoft.IT.Security.Core.Server.ErrorHandler"/> to a service
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ErrorBehaviorAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            Implementation of AddBindingParameters 
            </summary>
            <param name="serviceDescription"></param>
            <param name="serviceHostBase"></param>
            <param name="endpoints"></param>
            <param name="bindingParameters"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ErrorBehaviorAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            ApplyDispatchBehavior implementation - add error handler to each channelDispatcher
            </summary>
            <param name="serviceDescription"></param>
            <param name="serviceHostBase"></param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ErrorBehaviorAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
            <summary>
            Validate implementation - do nothing here
            </summary>
            <param name="serviceDescription"></param>
            <param name="serviceHostBase"></param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ErrorHandler">
            <summary>
            <c>ErrorHandler</c> class converts all exceptions into FaultExceptions. 
            It provides a kind of catch-all mechanism where no exception leaks to client
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ErrorHandler.HandleError(System.Exception)">
            <summary>
            HandleError - returns true indicating that the error was handled
            </summary>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
            <summary>
            <c>ProvideFault</c> is the actual method that converts exceptions to their corresponding faults.
            </summary>
            <param name="error">
            </param>
            <param name="version"></param>
            <param name="fault"></param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ExtensionMethods">
            <summary>
            Extension Class for SQL Strings
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ExtensionMethods.SanctifyStringForSQL(System.String)">
            <summary>
            Trims the Role name / Name and escapes ' char
            </summary>
            <param name="name"></param>
            <returns>Santified String for SQL Calls</returns>
        </member>
        <member name="T:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute">
            <summary>
            <c>LogBehavior</c> can be attached to a service operation as an attribute. If attached it would invoke the service operation using <see cref="T:Microsoft.IT.Security.ServiceModel.LogInvoker"/>
            which does concise logging for operation.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>
            AddBindingParameter implementation - does nothing
            </summary>
            <param name="operationDescription"></param>
            <param name="bindingParameters"></param>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
            <summary>
            ApplyClientBehavior implementation does nothing
            </summary>
            <param name="operationDescription"></param>
            <param name="clientOperation"></param>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
            <summary>
            ApplyDispatchBehavior implementation, assigns <see cref="T:Microsoft.IT.Security.ServiceModel.LogInvoker"/> instance to <see paramref="dispatchOperation"/>
            </summary>
            <param name="operationDescription"></param>
            <param name="dispatchOperation"></param>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
            <summary>
            Validate implementation - does nothing
            </summary>
            <param name="operationDescription"></param>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.EventId">
            <summary>
            Read only public accessor for eventId
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.Component">
            <summary>
            Read only public accessor for Component
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.EntityName">
            <summary>
            Read only public accessor for EntityName
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.LogBehaviorAttribute.OperationName">
            <summary>
            Read only public accessor for OperationName
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.ServiceModel.LogInvoker">
            <summary>
            <c>LogInvoker</c> implements IOperationInvoker to do concise logging
            <para>
                LogInvoker logs before and after the call and in case of an error, it logs verbosely. 
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogInvoker.#ctor(System.ServiceModel.Dispatcher.IOperationInvoker,System.String,System.Int32,Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName)">
            <summary>
            Create context for scenario, store reference to default invoker
            </summary>
            <param name="invoker">
                Default invoker
            </param>
            <param name="scenarioName">
                Scenario in which the operation is being invoked
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogInvoker.AllocateInputs">
            <summary>
            AllocateInputs - default behavior
            </summary>
            <returns>
                object array
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
            <summary>
            <c>Invoke</c> implementation
            <para>
                Attaches scenario to OperationContext during the operation - this ensures callerId and correlationId are obtained from OperationContext. 
                Logs a message before and after operation, logs verbosely in case of an exception.
                Remove the op
            </para>
            </summary>
            <param name="instance"></param>
            <param name="inputs"></param>
            <param name="outputs"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
            <summary>
            Invokes the operation asynchronously 
            </summary>
            <param name="instance"></param>
            <param name="inputs"></param>
            
            <param name="callback"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.LogInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
            <summary>
            Ends an asynchronous operation
            </summary>
            <param name="instance"></param>
            <param name="outputs"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.LogInvoker.IsSynchronous">
            <summary>
            Returns if asynchronous
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.ServiceModel.ParameterValidationAttribute">
            <summary>
            An attribute that can be used to decorate the input parameters of a web method in order to override the default data validation behavior.
            By default parameters are validated to be not null and collection type parameters are validated to have at least 1 item and 
            all items are validated to ensure the collection does not contain a null item.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.ParameterValidationAttribute.#ctor(System.String)">
            <summary>
            Constructs an instance setting the alias name of that will be used to identify the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/>
            to be used to validate the parameter.
            </summary>
            <param name="dictionaryEntryAlias">
            The alias name of that will be used to identify the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> to be used to validate the parameter.
            </param>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.ParameterValidationAttribute.DictionaryEntryAlias">
            <summary>
            Gets the alias name of that will be used to identify the <see cref="T:Microsoft.IT.Security.Core.DataEntities.DictionaryEntry"/> to be used to validate the parameter.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.ServiceContext.RegisterServiceContext(System.String)">
            <summary>
            Creates and registers an instance of the ServiceContext with the OperationContext if not already registered.
            If it is already registered the currently registered instance is returned.
            </summary>
            <param name="methodBase">
            Reflection info for the method from which the context properties will be acquired.
            </param>
            <returns>
            An instance of the ServiceContext that is registered with the OperationContext.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.ServiceModel.ServiceContext.UnregisterServiceContext">
            <summary>
            Removes the current instance from the OperationContext.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.ServiceModel.ServiceContext.IsRegistered">
            <summary>
            Gets a value that identifies whether or not the ServiceContext has been registered with a web request or not.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ThreadPoolManager">
            <summary>
            ThreadPoolManager class puts wrapper over ThreadPool class
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ThreadPoolManager.QueueUserWorkItem(Microsoft.IT.Security.Core.Server.ThreadTask,Microsoft.IT.Security.Core.Server.ThreadState,System.Int32)">
            <summary>
            Add thread item to work queue
            </summary>
            <param name="task">Thread task passed in to process by this thread</param>
            <param name="handle">Handle is used to pass signals to main thread</param>
            <param name="timeOut">Thread time out value</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ThreadPoolManager.ProcessThreadItem(System.Object)">
            <summary>
            ProcessThreadItem starts the timer and executes task's process method
            </summary>
            <param name="state">handle which can be used to put main thread in wait state</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ThreadPoolManager.timer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Timer event
            </summary>
            <param name="sender">sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ThreadState">
            <summary>
            This class keeps track of group threads and help thread pool manager 
            to give signal back to main thread 
            when all the threads in group finish with its execution
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ThreadState.#ctor(System.Threading.AutoResetEvent,System.Int32)">
            <summary>
            Initialize properties with parameterized contructor
            </summary>
            <param name="handle">AutoResetEvent to give signal back to main thread</param>
            <param name="threadCount">Number of threads in a group</param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Server.ThreadState.Handle">
            <summary>
            Get/Set AutoResetEvent to give signal back to main thread
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Server.ThreadTask">
            <summary>
            ThreadTask abstract class acts base class for all the classes which will define thread task
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ThreadTask.Process">
            <summary>
            All derived classes will override this method and provider specific implementation
            </summary>        
        </member>
        <member name="M:Microsoft.IT.Security.Core.Server.ThreadTask.Abort">
            <summary>
            All derived classes will override this method and provider specific implementation
            </summary>        
        </member>
        <member name="T:Microsoft.IT.Security.Core.SingleSignInIdentityProvider">
            <summary>
            Implement IIdentityParser to parse SingleSignOnIdentity object (websso)
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SingleSignInIdentityProvider.GetSecondaryCredentials">
            <summary>
            Parse identity object to retrieve subject specific information
            </summary>
            <param name="request">object passed in access control request.</param>
            <param name="identity">Identity object holding subject specific information</param>
            <param name="context">context with correlation id, etc</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.SqlHelper">
            <summary>
            The SqlHelper class is intended to encapsulate high performance, scalable best practices for 
            common uses of SqlClient
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.#ctor">
            <summary>
            Default Constructor for SqlHelper
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.ExecuteDataSet(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset("GetOrders", 24, 36);
            </remarks>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.ExecuteReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>		
            e.g.:  
             SqlDataReader dr = ExecuteReader("GetOrders", 24, 36);
            </remarks>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.ExecuteNonQuery(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  For getting the returned value create a parameter 
            with ParameterDirection as ParameterDirection.ReturnValue
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery("PublishOrders", 24, 36);
            </remarks>
            <param name="spName">The name of the stored prcedure</param>
            <param name="commandParameters">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.ExecuteScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  For getting the returned value create a parameter 
            with ParameterDirection as ParameterDirection.ReturnValue
            </summary>
            <remarks>
            e.g.:  
             object result = ExecuteScalar("PublishOrders", 24, 36);
            </remarks>
            <param name="spName">The name of the stored prcedure</param>
            <param name="commandParameters">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.GetEmptyNpdTable">
            <summary>
            Creates the Empty NPD Table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.CreateSearchParameter(System.Data.DataTable,System.Data.DataTable,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Data.SqlClient.SqlParameter)">
            <summary>
            Create the SQL search parameter to be passed to the Search stored procedures.
            </summary>
            <param name="page">The page.</param>
            <param name="accessibleNpdListTable">The accessible Named Protection Domain list table.</param>
            <param name="criteriaTable">The criteria table.</param>
            <param name="countParameter">The count output parameter used for returning total number of results satisfying the search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.CreateSearchParameter(System.Data.DataTable,System.Data.DataTable,System.Data.DataTable,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Data.SqlClient.SqlParameter)">
            <summary>
            Create the SQL search parameter to be passed to the Search stored procedures.
            </summary>
            <param name="page">The page.</param>
            <param name="accessibleNpdListTable">The accessible Named Protection Domain list table.</param>
            <param name="criteriaTable">The criteria table.</param>
            <param name="searchTargetTable">Table containing search targets</param>
            <param name="countParameter">The count output parameter used for returning total number of results satifying the search criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.SqlHelper.CreateSearchParameter(System.Data.DataTable,System.Data.DataTable,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Data.SqlClient.SqlParameter)">
            <summary>
            Create the SQL search parameter to be passed to the Search stored procedures.
            </summary>
            <param name="page">The page.</param>
            <param name="accessibleNpdListTable">The accessible Named Protection Domain list table.</param>
            <param name="criteriaTable">The criteria table.</param>
            <param name="searchedForNPDName">The name of the NPD to search within.</param>
            <param name="searchTargetTable">Table containing search targets</param>
            <param name="pageNum">The page number.</param>
            <param name="count">The size of the page.</param>
            <param name="countParameter">The count output parameter used for returning total number of results satifying the search criteria.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.SystemAction">
            <summary>
            System action enumeration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Create">
            <summary>
            This indicates Create action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Update">
            <summary>
            This indicates Update action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Delete">
            <summary>
            This indicates Delete action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Get">
            <summary>
            This indicates Get action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.GetVersion">
            <summary>
            This indicates Get specific version action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Search">
            <summary>
            This indicates Search action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Assign">
            <summary>
            This indicates Assign action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Unassign">
            <summary>
            This indicates Unassign action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Enforcement">
            <summary>
            This indicates Enforcement action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.CreateNewVersion">
            <summary>
            This indicates Create New Version action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.DeleteVersion">
            <summary>
            This indicates Delete Version action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.ListDescendant">
            <summary>
            This indicates List Descendant action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.ListAscendant">
            <summary>
            This indicates List Ascendant action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.UpdateVersion">
            <summary>
            This indicates Update Version action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.PrivilegeAssignmentUpdate">
            <summary>
            This indicates Privilege Assignment Update Action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Set">
            <summary>
            This indicates set action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Read">
            <summary>
            This indicates Read action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Export">
            <summary>
            This indicates Export action
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemAction.Import">
            <summary>
            This indicates Import action
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.SystemResource">
            <summary>
            System resource enumeration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemResource.Subject">
            <summary>
            This indicates Subject
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemResource.Role">
            <summary>
            This indicates Role
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemResource.NamedProtectionDomain">
            <summary>
            This indicates NPD
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemResource.Attribute">
            <summary>
            This indicates Attribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemResource.AuthenticationRealm">
            <summary>
            This indicates Authentication Realm
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SystemResource.SubjectConstraint">
            <summary>
            This indicates SubjectConstraint
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Tokenizer">
            <summary>
            A utility class that performs the necessary operations to escape and unescape character values in a generic
            way.  Also provided are capabilities for use on the server where escaped characters can be obfuscated such 
            that parsing can be done and the resultant values can then be untokenized and unescaped.
            </summary>
            <remarks>
            The current implementation supports single characters only.  Supporting strings could be supported but is
            not currently required and will require significant work.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Tokenizer.#cctor">
            <summary>
            Initializes the table of tokens used internally.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Tokenizer.Tokenize(System.String,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            The Tokenize method is called by an application to convert escaped character sequences into tokens that
            are guaranteed to not interfere with an application's parsing algorithms.  The <paramref name="valueToTokenize"/> 
            is searched and Tokenize replaces the escaped representation of the characters or strings specified in 
            the <paramref name="targets"/> collection  with a token that is guaranteed to not interfere with an application's 
            parsing logic.  Once parsing is complete a call to Untokenize(string,IEnumerable&lt;string&gt;)"/> will 
            restore the parsed values to the original escaped values which can then be unescaped.
            </summary>
            <param name="valueToTokenize">
            The string containing escaped values that are to be tokenized.
            </param>
            <param name="targets">
            A list of characters for which the escaped representation will be computed and subsequently tokenized. 
            This character set should be used consistently on all methods accepting targets.
            </param>
            <returns>
            A tokenized string with the escape sequences tokenized so that parsing can be performed.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Tokenizer.Detokenize(System.String,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            The Detokenize method is called by an application to revert a previouly tokenized string back to the value
            before the tokenization was performed.  The embedded tokens are replaced with the same escaped character sequences 
            that were originally converted.
            </summary>
            <param name="valueToDetokenize">
            A previouly tokenized string that is to be converted back to the original value containing escaped values.
            </param>
            <param name="targets">
            A list of characters for which the escaped representation will be computed and subsequently used for replacing the 
            embedded tokens.  The values specified in this parameter must be the exact same values as were specified in the 
            previous call to Tokenize(string,IEnumerable&lt;string&gt;)"/>.
            </param>
            <returns>
            A detokenized string with the original escape sequences back.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Tokenizer.Escape(System.String,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            This Escape method is called by an application to convert certain special characters to a human-readable
            escaped values using the default escape sequence provided by the class.  (The default escape mechanism is to prepend 
            a backslash to the value - similar to how you escape a quote in C#).  
            </summary>
            <param name="valueToEscape">
            The string containing potential values that are to be escaped.
            </param>
            <param name="targets">
            A list of characters which will be replaced with an appropriate escaped representation.
            </param>
            <returns>
            A string with escape sequences that have replaced the special characters specified.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Tokenizer.Unescape(System.String,System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            This Unescape method is called by an application to revert a previously escaped string back to the value
            before the escaping was performed.  The embedded escape sequences are replaced with the same characters
            that were originally escaped.
            </summary>
            <param name="valueToUnescape">
            A previouly escaped string that is to be converted back to the original value.
            </param>
            <param name="targets">
            A list of characters for which the escaped representation will be computed and subsequently used for reverting the 
            escaped values to there original values. The values specified in this parameter must be the exact same values as were specified in the 
            previous call to Escape(string,IEnumerable&lt;char&gt;)"/>.
            </param>
            <returns>
            A string with the original character values restored from the passed in escape sequences.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Tokenizer.GetCanonicalizedTargets(System.Char[])">
            <summary>
            This method will return an array that is canonicalized such that the DefaultEscapeChar is always the first entry
            and all other characters are in a deterministic order.
            </summary>
            <param name="targets">
            The list of targets that are to be escaped.
            </param>
            <returns>
            A properly ordered array for use with the Escape and Tokenize methods.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Tokenizer.GetEscapeValueStrings(System.Char[])">
            <summary>
            This private method produces a list of values that can be used as the escape sequences for the corresponding <paramref name="targets"/>.
            The escape sequence is constructed by simply prepending the escapeTarget value with the value of the DefaultEscapeChar (a backslash).
            </summary>
            <param name="targets">
            The list of values for which to acquire corresponding escape sequences.
            </param>
            <returns>
            A list of values that can be used as the escape sequences for the corresponding <paramref name="targets"/>.
            </returns>
        </member>
        <member name="F:Microsoft.IT.Security.Core.TrustLevel.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.TrustLevel.Low">
            <summary>
            Low value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.TrustLevel.MediumLow">
            <summary>
            Medium low value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.TrustLevel.Medium">
            <summary>
            Medium value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.TrustLevel.MediumHigh">
            <summary>
            Medium high value
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.TrustLevel.High">
            <summary>
            High value
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.WindowsIdentityProvider">
            <summary>
            Implement IIdentityParser to parse WindowsIdentity object
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.WindowsIdentityProvider.NetWorkServiceAccount">
            <summary>
            This is constants representing network service accoutn
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.X509CertificateIdentityProvider">
            <summary>
            Implement IIdentityParser to parse X509Certificate
            </summary>    
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.CacheValidationIntervalSection">
            <summary>
             This section is used to define CacheValidationInterval for PIP and PDP Caches.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Configuration.CacheValidationIntervalSection.CacheIntervalSettings">
            <summary>
            This Property is used to have multiple Cache Store configurations
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.CacheIntervalElementCollection">
            <summary>
            This Calss is used to have multiple Cache Store configurations
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.CacheIntervalElement">
            <summary>
            Cache Inteval for each Strore . Ex Name = "PIP Cache" defaultInterval = 10
            </summary>
            
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider">
            <summary>
            A wrapper class that implements the <see cref="T:Microsoft.IT.Configuration.ConfigurationProvider"/> and that pulls configuration data from 
            the IT Configuration Manager service.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.#ctor">
            <summary>
            Default constructor initializes the <see cref="P:Microsoft.IT.Configuration.ConfigurationProvider.ConfigurationItemsBasePath"/>
            to a forward slash (/).
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.Initialize(System.String)">
            <summary>
            Initializes an RXP Configuration Manager client instance from the values in the passed in <paramref name="initializationData"/>.
            </summary>
            <param name="initializationData">
            A semi-colon delimited list of name=value pairs that provide the necessary information to connect and retrieve component information
            from an RXP Configuration Manager service. This value is of the form 'ComponentName=xxx;Environment=xxx;HostName=xxx;RefreshInterval=99:99:99' where
            ComponentName is required and the Environment and HostName are optional if the current server is registered with CM.  
            RefreshInterval is always optional and defaults to the CM default value (which in V3.0 is 00:20:00 - i.e. 20 minutes).
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.GetValue``1(System.String)">
            <summary>
            This method is called to acquire a configuration value.
            </summary>
            <typeparam name="T">
            The type of value being retrieved.  The Adapter infrastructure only requests instrinsic types like int, string, DateTime, etc.
            </typeparam>
            <param name="name">
            The name of the configuration value to retrieve.
            </param>
            <returns>
            Returns the value of the requested configuration item.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.GetValue``1(System.String,``0)">
            <summary>
            This method is called to acquire a configuration value.
            </summary>
            <typeparam name="T">
            The type of value being retrieved.  The Adapter infrastructure only requests instrinsic types like int, string, DateTime, etc.
            </typeparam>
            <param name="name">
            The name of the configuration value to retrieve.
            </param>
            <param name="defaultIfNotFound">
            A default value to be returned if the requested value is not found by the active configuration manager.
            </param>
            <returns>
            Returns the value of the requested configuration item.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.ParseName(System.String,System.String@,System.String@)" -->
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.Dispose">
            <summary>
            Disposes of critical resources (i.e. the internal ConfigurationProvider instance).
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.Dispose(System.Boolean)">
            <summary>
            Disposes of critical resources (i.e. the internal ConfigurationProvider instance).
            </summary>
            <param name="disposing">When true it disposes of all managed resources, false only unmanaged resources.</param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.ConfigurationManager">
            <summary>
            Gets the underlying <see cref="P:Microsoft.IT.Security.Core.Configuration.CMConfigurationProvider.ConfigurationManager"/> that is used to obtain and manage the configuration values
            from the CM web services.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.CMExportFileConfigurationProvider">
            <summary>
            This class is an implementation of the IT Platform SDK's <see cref="T:Microsoft.IT.Configuration.ConfigurationProvider"/> which will serve configuration values
            retrieved from an RXP Configuration Manager export file. This provider can then be 'chained' to the <see cref="T:Microsoft.IT.Configuration.ConfigurationProviderManager"/>
            to provide fallback support in the event that CM services are inaccessible and the application has never connected before.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMExportFileConfigurationProvider.Initialize(System.String)">
            <summary>
            Initializes the instance by reading and loading the data contained in the file referenced in the <paramref name="initializationData"/>
            input parameter.
            </summary>
            <param name="initializationData">
            Specifies the path and filename of the previously exported data file to be used as the data repository.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMExportFileConfigurationProvider.GetValue``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMExportFileConfigurationProvider.GetValue``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.CMExportFileConfigurationProvider.ParsePath(System.String,System.String@,System.String@)">
            <summary>
            Accepts a single string and parses it out into separate 'path' and 'name' fields taking into consideration the ConfigurationItemsBasePath value
            (which for this provider is a forward slass "/"). For example passing in 'Some/Hierarchical/ConfigName' for <paramref name="fullName"/> results in 
            output path="/Some/Hierarchical" and output name="ConfigName".
            </summary>
            <param name="fullName">
            The string that is to be parsed into path and name.
            </param>
            <param name="path">
            The leading portion of the fullname including a leading slash and excluding the trailing config name.
            </param>
            <param name="name">
            The name portion of the passed in fullName.
            </param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.ITSecurityAppSettingsConfigurationProvider">
            <summary>
            This class extends the IT Platform SDK base class provider to handle the retrieval of values that use 
            custom encryption to protect app settings.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityAppSettingsConfigurationProvider.GetValue``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityAppSettingsConfigurationProvider.GetValue``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityAppSettingsConfigurationProvider.GetCredentialFromEncryptedString(System.String)">
            <summary>
            This method accepts a string that has first been encrypted and then Base-64 encoded and parses it to get the values required
            to create a return a NetworkCredential.  The password portion is never put into a .NET immutable string and the buffers used
            are zeroed out immediately after that data has been placed into a SecureString.
            </summary>
            <param name="encryptedConfigValue">
            A comma-delimited 3 part string of the form "account,password,domain" which has been encrypted then Base-64 encoded.
            </param>
            <returns>
            A NetworkCredential constructed from the data contained in the passed in encrypted string if it can be successfully 
            decrypted and parsed.  Otherwise it returns null.
            </returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager">
            <summary>
            An ITA specific wrapper class for the IT Platform SDK's <see cref="T:Microsoft.IT.Configuration.ConfigurationProviderManager"/> that provides an 
            abstraction layer between the SDK infrastructure and ITA.  This class provides the ITA specific initialization
            and just provides a pass-through for requests for configuration values to the configured providers.
            </summary>
            <remarks>
            You must initialize this class prior to use via a call to <see cref="M:Microsoft.IT.Security.Configuration.ITSecurityConfigurationManager.Initialize()"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.Initialize">
            <summary>
            Reads the app.config file to obtain the necessary configuration values required for controlling what <see cref="T:Microsoft.IT.Configuration.ConfigurationProvider"/>
            instances are to be used.  This is the preferred initialization method for ITA.
            </summary>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException">
            Thrown when any catastrophic error occurs during initialization that would leave the intance in an indeterminate state.
            Applications should not start if this exception is thrown.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.Initialize(System.String)">
            <summary>
            Reads the app.config file to obtain the necessary configuration values required for controlling what <see cref="T:Microsoft.IT.Configuration.ConfigurationProvider"/>
            instances are to be used.  This overload should only be used if the default configuration provided by the Initialize() method is not adequate.
            </summary>
            <param name="configurationProviders">
            A delimited string that represents the names of the supported <see cref="T:Microsoft.IT.Configuration.ConfigurationProvider"/> types to be chained by the manager.
            The passed in string should be of the form "CMService, CMExportFile, AppSettings" where each word represents the corresponding provider.
            The order in which the parameters are specified is the order that will be used for locating configuration values.
            </param>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException">
            Thrown when any catastrophic error occurs during initialization that would leave the intance in an indeterminate state.
            Applications should not start if this exception is thrown.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.GetValue``1(System.String,System.String)">
            <summary>
            This method is called to acquire a configuration value or return a specified default if not found. 
            Implementors override this method to provide custom implementation. The base class implementation 
            handles passing the call down the chain when a derived class chooses to not process.
            </summary>
            <typeparam name="T">
            The type of value being retrieved.  The expected types instrinsic types like int, string, DateTime, etc.
            </typeparam>
            <param name="path">
            The path that comprises the part of the full name.
            </param>
            <param name="name">
            The name of the configuration value to retrieve.
            </param>
            <returns>
            Returns the value of the requested configuration item.
            </returns>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException">
            Thrown when the requested configuration value cannot be found or is not parsable into the requested data type.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.GetValue``1(System.String,System.String,``0)">
            <summary>
            This method is called to acquire a configuration value or return a specified default if not found. 
            Implementors override this method to provide custom implementation. The base class implementation 
            handles passing the call down the chain when a derived class chooses to not process.
            </summary>
            <typeparam name="T">
            The type of value being retrieved.  The expected types instrinsic types like int, string, DateTime, etc.
            </typeparam>
            <param name="path">
            The path that comprises the part of the full name.
            </param>
            <param name="name">
            The name of the configuration value to retrieve.
            </param>
            <param name="defaultIfNotFound">
            A default value to be returned if the requested value is not found by the active configuration manager.
            </param>
            <returns>
            Returns the value of the requested configuration item.
            </returns>
            <exception cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException">
            Thrown when the requested configuration value cannot be found or is not parsable into the requested data type.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.ConfigurationExceptionHandler(System.Object,Microsoft.IT.Configuration.ConfigurationExceptionEventArgs)">
            <summary>
            An event handler that is responsible for converting any exception that occurs into an ITSecurityConfigurationException.
            </summary>
            <param name="sender">
            The object instance that generated the event.
            </param>
            <param name="e">
            The event arguments containing the original exception and the WrappedException that is to be thrown instead.  
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.GetFullName(System.String,System.String)">
            <summary>
            Concatenates and returns a string that represents the combined <paramref name="path"/> and <paramref name="name"/>
            ensuring that the result is canonicalized such that the value never begins or ends with a '/'.
            </summary>
            <param name="path">
            The path to the configuration value that is to be prepended.
            </param>
            <param name="name">
            The name of the configuration value that is to be appended.
            </param>
            <returns>
            A string that represents the combined <paramref name="path"/> and <paramref name="name"/>
            ensuring that the result is canonicalized such that the value never begins or ends with a '/'.
            </returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.IsInitialized">
            <summary>
            Gets a flag indicating whether or not the singleton instance has been initialized.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Configuration.ITSecurityConfigurationManager.CMConfigurationManager">
            <summary>
            Gets the IT Configuration Manager that is used as the underlying instance for the CMConfigurationProvider.
            This can be used when a direct call to CM is needed for things like sections that are not supported for appSettings.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Configuration.ProviderSection">
            <summary>
            Defines data structure to hold provider configurable data
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Configuration.ProviderSection.Providers">
            <summary>
            Get all providers configuration data
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Configuration.ProviderSection.DefaultProvider">
            <summary>
            Get default provider name
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents">
            <summary>
            A static class that provides the names of all <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>s used within a single application.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ServiceNotResponding">
            <summary>
            A string constant similar to 'Service {0} is not responding.' 
            It has a MonitoringEventId of "1", a MonitoringEventType of "Error" and a name of "ServiceNotResponding".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DatabaseNotResponding">
            <summary>
            A string constant similar to 'Database is not responding.' 
            It has a MonitoringEventId of "2", a MonitoringEventType of "Error" and a name of "DatabaseNotResponding".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.MandatoryArgumentNull">
            <summary>
            A string constant similar to 'Mandatory argument {0} is null.' 
            It has a MonitoringEventId of "3", a MonitoringEventType of "Error" and a name of "MandatoryArgumentNull".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.AnElementInCollectionIsNull">
            <summary>
            A string constant similar to 'One of the elements in {0} collection is null.' 
            It has a MonitoringEventId of "4", a MonitoringEventType of "Error" and a name of "AnElementInCollectionIsNull".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.MaximumLengthExceeded">
            <summary>
            A string constant similar to 'Argument {0} exceeds maximum allowed length of {1}.' 
            It has a MonitoringEventId of "5", a MonitoringEventType of "Error" and a name of "MaximumLengthExceeded".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.HasInvalidCharacters">
            <summary>
            A string constant similar to 'Argument {0} contains invalid characters.' 
            It has a MonitoringEventId of "6", a MonitoringEventType of "Error" and a name of "HasInvalidCharacters".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ObjectDoesNotExist">
            <summary>
            A string constant similar to 'Object does not exist - {0}: {1}' 
            It has a MonitoringEventId of "7", a MonitoringEventType of "Error" and a name of "ObjectDoesNotExist".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ObjectAlreadyExist">
            <summary>
            A string constant similar to 'Object already exists - {0}: {1}' 
            It has a MonitoringEventId of "8", a MonitoringEventType of "Error" and a name of "ObjectAlreadyExist".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToInsertInDatabase">
            <summary>
            A string constant similar to 'Failed to insert {0} in the database.  {1}' 
            It has a MonitoringEventId of "10", a MonitoringEventType of "Error" and a name of "FailedToInsertInDatabase".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ObjectNotFound">
            <summary>
            A string constant similar to 'Object not found - {0}: {1}' 
            It has a MonitoringEventId of "11", a MonitoringEventType of "Error" and a name of "ObjectNotFound".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToDeleteFromDatabase">
            <summary>
            A string constant similar to 'Failed to delete {0} in the database.  {1}' 
            It has a MonitoringEventId of "12", a MonitoringEventType of "Error" and a name of "FailedToDeleteFromDatabase".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToUpdateInDatabase">
            <summary>
            A string constant similar to 'Failed to update {0} in the database.  {1}' 
            It has a MonitoringEventId of "13", a MonitoringEventType of "Error" and a name of "FailedToUpdateInDatabase".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToFetchFromDatabase">
            <summary>
            A string constant similar to 'Failed to fetch {0} from the database.  {1}' 
            It has a MonitoringEventId of "14", a MonitoringEventType of "Error" and a name of "FailedToFetchFromDatabase".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToSearchFromDatabase">
            <summary>
            A string constant similar to 'Failed to search {0} in the database.' 
            It has a MonitoringEventId of "15", a MonitoringEventType of "Error" and a name of "FailedToSearchFromDatabase".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToAssignInDatabase">
            <summary>
            A string constant similar to 'Failed to assign {0} to {1} in the database.  {0}: {2}  {1}: {3}' 
            It has a MonitoringEventId of "16", a MonitoringEventType of "Error" and a name of "FailedToAssignInDatabase".
            It takes 6 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToUnassignInDatabase">
            <summary>
            A string constant similar to 'Failed to unassign {0} from {1} in the database.  {0}: {2}  {1}: {3}' 
            It has a MonitoringEventId of "17", a MonitoringEventType of "Error" and a name of "FailedToUnassignInDatabase".
            It takes 6 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CallerNotAuthorized">
            <summary>
            A string constant similar to 'The caller is not authorized to perform the operation.' 
            It has a MonitoringEventId of "18", a MonitoringEventType of "Error" and a name of "CallerNotAuthorized".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CallerNotAuthorizedWithOperation">
            <summary>
            A string constant similar to 'The caller is not authorized to perform the operation: {0}.' 
            It has a MonitoringEventId of "18", a MonitoringEventType of "Error" and a name of "CallerNotAuthorizedWithOperation".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.HashDoNotMatch">
            <summary>
            A string constant similar to '{0} does not match with hash for {1}.' 
            It has a MonitoringEventId of "20", a MonitoringEventType of "Error" and a name of "HashDoNotMatch".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.UserHasInvalidRole">
            <summary>
            A string constant similar to 'Operation is not valid because {0}.' 
            It has a MonitoringEventId of "21", a MonitoringEventType of "Error" and a name of "UserHasInvalidRole".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.UserNotInRole">
            <summary>
            A string constant similar to 'Operation is not valid because user {0} has no {1} role.' 
            It has a MonitoringEventId of "22", a MonitoringEventType of "Error" and a name of "UserNotInRole".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.LastUserInRole">
            <summary>
            A string constant similar to 'Operation is not valid because the user is the last {0}.' 
            It has a MonitoringEventId of "23", a MonitoringEventType of "Error" and a name of "LastUserInRole".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.PropertyIsNullOrEmpty">
            <summary>
            A string constant similar to 'Property {0} is null or empty.' 
            It has a MonitoringEventId of "24", a MonitoringEventType of "Error" and a name of "PropertyIsNullOrEmpty".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ProviderNotSet">
            <summary>
            A string constant similar to 'Data provider {0} is not set in configuration file.' 
            It has a MonitoringEventId of "25", a MonitoringEventType of "Error" and a name of "ProviderNotSet".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.UnKnown">
            <summary>
            A string constant similar to 'Unknown error occurred while {0}.' 
            It has a MonitoringEventId of "26", a MonitoringEventType of "Error" and a name of "UnKnown".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.EnforcementRequestNotValid">
            <summary>
            A string constant similar to 'Enforcement request is not valid.' 
            It has a MonitoringEventId of "27", a MonitoringEventType of "Error" and a name of "EnforcementRequestNotValid".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidIdentity">
            <summary>
            A string constant similar to 'Error occurred during identity parsing.' 
            It has a MonitoringEventId of "28", a MonitoringEventType of "Error" and a name of "InvalidIdentity".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.PolicyInformationPointAttributeAsServiceContractNotValid">
            <summary>
            A string constant similar to 'Attribute source as WCF service has invalid contract.' 
            It has a MonitoringEventId of "29", a MonitoringEventType of "Error" and a name of "PolicyInformationPointAttributeAsServiceContractNotValid".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CrossReferencesExist">
            <summary>
            A string constant similar to 'Delete operation could not be performed as a reference to this {0} currently exists in RoleAdministration' 
            It has a MonitoringEventId of "30", a MonitoringEventType of "Error" and a name of "CrossReferencesExist".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.SchemaNamespaceMissing">
            <summary>
            A string constant similar to 'Schema namespace is missing in {0} Xml.' 
            It has a MonitoringEventId of "31", a MonitoringEventType of "Error" and a name of "SchemaNamespaceMissing".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.XmlIsInvalid">
            <summary>
            A string constant similar to '{0} XML content is invalid.' 
            It has a MonitoringEventId of "32", a MonitoringEventType of "Error" and a name of "XmlIsInvalid".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.AttributeIssuerCantHaveMultipleDefaultSources">
            <summary>
            A string constant similar to 'Attribute Issuer cannot have multiple default sources.' 
            It has a MonitoringEventId of "33", a MonitoringEventType of "Error" and a name of "AttributeIssuerCantHaveMultipleDefaultSources".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.AttributeIssuerShouldHaveAtleastOneDefaultSource">
            <summary>
            A string constant similar to 'Attribute should have at least one default source.' 
            It has a MonitoringEventId of "35", a MonitoringEventType of "Error" and a name of "AttributeIssuerShouldHaveAtleastOneDefaultSource".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToExportPolicySets">
            <summary>
            A string constant similar to 'Failed to export the policy sets.' 
            It has a MonitoringEventId of "36", a MonitoringEventType of "Error" and a name of "FailedToExportPolicySets".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToImportPolicySets">
            <summary>
            A string constant similar to 'Failed to import the policy sets.' 
            It has a MonitoringEventId of "37", a MonitoringEventType of "Error" and a name of "FailedToImportPolicySets".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidData">
            <summary>
            A string constant similar to 'Invalid data was supplied. Data provided was {0}' 
            It has a MonitoringEventId of "38", a MonitoringEventType of "Error" and a name of "InvalidData".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.EndDateTimeIsInPast">
            <summary>
            A string constant similar to 'End date cannot be in past.' 
            It has a MonitoringEventId of "40", a MonitoringEventType of "Error" and a name of "EndDateTimeIsInPast".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.StartDateGreaterThanEndDate">
            <summary>
            A string constant similar to 'Start date cannot be greater than end date.' 
            It has a MonitoringEventId of "41", a MonitoringEventType of "Error" and a name of "StartDateGreaterThanEndDate".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.SourceSubjectCannotBeSameAsTargetSubject">
            <summary>
            A string constant similar to 'Target subject cannot be same source subject.' 
            It has a MonitoringEventId of "42", a MonitoringEventType of "Error" and a name of "SourceSubjectCannotBeSameAsTargetSubject".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.PrivilegeAssignmentTypeNotSet">
            <summary>
            A string constant similar to 'PrivilegeAssignmentType is not set to a valid value.' 
            It has a MonitoringEventId of "43", a MonitoringEventType of "Error" and a name of "PrivilegeAssignmentTypeNotSet".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.SelfAssignmentNotAllowed">
            <summary>
            A string constant similar to 'Invalid Operation: Operation is not valid because the user is trying to assign himself/herself a role, which is not allowed.' 
            It has a MonitoringEventId of "44", a MonitoringEventType of "Error" and a name of "SelfAssignmentNotAllowed".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.AssignmentAlreadyExists">
            <summary>
            A string constant similar to 'Assignment from {0} to {1} already exists.  {0}: {2}  {1}: {3}' 
            It has a MonitoringEventId of "46", a MonitoringEventType of "Error" and a name of "AssignmentAlreadyExists".
            It takes 6 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.AssignmentDoesNotExist">
            <summary>
            A string constant similar to 'Assignment from {0} to {1} does not exist.  {0}: {2}  {1}: {3}' 
            It has a MonitoringEventId of "47", a MonitoringEventType of "Error" and a name of "AssignmentDoesNotExist".
            It takes 6 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.EnforcementBadXmlRequest">
            <summary>
            A string constant similar to 'Enforcement request xml has invalid format.' 
            It has a MonitoringEventId of "48", a MonitoringEventType of "Error" and a name of "EnforcementBadXmlRequest".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ProviderAlreadyInitialized">
            <summary>
            A string constant similar to 'The provider {0} has already been initialized.' 
            It has a MonitoringEventId of "49", a MonitoringEventType of "Error" and a name of "ProviderAlreadyInitialized".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.RBACIssuerAttributeType">
            <summary>
            A string constant similar to 'RBAC Issuer has an incorrect AttributeType. Valid type is Subject.' 
            It has a MonitoringEventId of "51", a MonitoringEventType of "Error" and a name of "RBACIssuerAttributeType".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.IntegrationFailed">
            <summary>
            A string constant similar to 'Integration failed from Role Administration to {0}.' 
            It has a MonitoringEventId of "52", a MonitoringEventType of "Error" and a name of "IntegrationFailed".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InternalError">
            <summary>
            A string constant similar to 'An internal error occurred: {0}' 
            It has a MonitoringEventId of "54", a MonitoringEventType of "Error" and a name of "InternalError".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DuplicateObjectFoundInRequest">
            <summary>
            A string constant similar to '{0} argument has duplicate items in the collection.' 
            It has a MonitoringEventId of "55", a MonitoringEventType of "Error" and a name of "DuplicateObjectFoundInRequest".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.AttributeScopeDoesNotMatchWithNPDScopeOfSystemUser">
            <summary>
            A string constant similar to 'Attribute scope does not match with the NPD scope for the system user.' 
            It has a MonitoringEventId of "58", a MonitoringEventType of "Error" and a name of "AttributeScopeDoesNotMatchWithNPDScopeOfSystemUser".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ReferencesExist">
            <summary>
            A string constant similar to 'Failed to delete in the database as a reference to this {0} currently exists.' 
            It has a MonitoringEventId of "60", a MonitoringEventType of "Error" and a name of "ReferencesExist".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CurrentVersionCantBeDeleted">
            <summary>
            A string constant similar to 'Failed to delete the current version of {0} in the database.  {1}' 
            It has a MonitoringEventId of "61", a MonitoringEventType of "Error" and a name of "CurrentVersionCantBeDeleted".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToCreateEmailMessage">
            <summary>
            A string constant similar to 'Failed to create email message due to an unknown reason.' 
            It has a MonitoringEventId of "62", a MonitoringEventType of "Error" and a name of "FailedToCreateEmailMessage".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToSendEmailMessage">
            <summary>
            A string constant similar to 'The Notification Service failed to send an email message.' 
            It has a MonitoringEventId of "63", a MonitoringEventType of "Error" and a name of "FailedToSendEmailMessage".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.OnlyNpdInOwnersList">
            <summary>
            A string constant similar to 'Failed to delete NPD {1} because it is the only NPD in owner's list for {0}.  {0}: {2}' 
            It has a MonitoringEventId of "64", a MonitoringEventType of "Error" and a name of "OnlyNpdInOwnersList".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.SchemaFileNotFound">
            <summary>
            A string constant similar to 'XML schema file not found.' 
            It has a MonitoringEventId of "70", a MonitoringEventType of "Error" and a name of "SchemaFileNotFound".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.UnAuthorizedSchemaFileAccess">
            <summary>
            A string constant similar to 'Unable to access schema file.' 
            It has a MonitoringEventId of "71", a MonitoringEventType of "Error" and a name of "UnAuthorizedSchemaFileAccess".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidOperation">
            <summary>
            A string constant similar to 'The operation being performed is invalid. Details: {0}.' 
            It has a MonitoringEventId of "72", a MonitoringEventType of "Error" and a name of "InvalidOperation".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FailedToGetConfiguration">
            <summary>
            A string constant similar to 'Failed to get {0} from configuration.' 
            It has a MonitoringEventId of "73", a MonitoringEventType of "Error" and a name of "FailedToGetConfiguration".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.NonDelegableObjectsCantBeDelegated">
            <summary>
            A string constant similar to 'One of the {0} cannot be delegated.' 
            It has a MonitoringEventId of "74", a MonitoringEventType of "Error" and a name of "NonDelegableObjectsCantBeDelegated".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.AttributeQuerySchemaIsInvalid">
            <summary>
            A string constant similar to '{0}. Schema of AttributeQuery is invalid.' 
            It has a MonitoringEventId of "75", a MonitoringEventType of "Error" and a name of "AttributeQuerySchemaIsInvalid".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidAttributeIssuer">
            <summary>
            A string constant similar to 'Cannot assign constraint value because the Attribute Issuer is invalid.' 
            It has a MonitoringEventId of "76", a MonitoringEventType of "Error" and a name of "InvalidAttributeIssuer".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.VelocityUnavilable">
            <summary>
            A string constant similar to 'Cache is unavailable.' 
            It has a MonitoringEventId of "77", a MonitoringEventType of "Error" and a name of "VelocityUnavilable".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.TrustLevelGreaterThanParents">
            <summary>
            A string constant similar to 'Trust level of {0} cannot be greater than {1}'s trust level.  {0}:{2}' 
            It has a MonitoringEventId of "78", a MonitoringEventType of "Error" and a name of "TrustLevelGreaterThanParents".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.TrustLevelLessThanChildrens">
            <summary>
            A string constant similar to 'Trust level of {0} cannot be less than {1}'s trust level.  {0}:{2}' 
            It has a MonitoringEventId of "79", a MonitoringEventType of "Error" and a name of "TrustLevelLessThanChildrens".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.TrustLevelLessThanRoles">
            <summary>
            A string constant similar to 'Trust level of {0} cannot be less than the role's trust level.' 
            It has a MonitoringEventId of "80", a MonitoringEventType of "Error" and a name of "TrustLevelLessThanRoles".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CollectionOutOfBounds">
            <summary>
            A string constant similar to 'The collection count is not within the required bounds.  The property '{0}' must have at least '{1}' item(s) and not more than '{2}'.  Actual count: '{3}'.  DictionaryEntry: {4}' 
            It has a MonitoringEventId of "81", a MonitoringEventType of "Error" and a name of "CollectionOutOfBounds".
            It takes 5 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidStringLength">
            <summary>
            A string constant similar to 'The length of the property is not within the required bounds.  The property '{0}' must have at least '{1}' character(s) and not more than '{2}'.  Actual length: '{3}'.  DictionaryEntry: {4}' 
            It has a MonitoringEventId of "82", a MonitoringEventType of "Error" and a name of "InvalidStringLength".
            It takes 5 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.NumberOutOfRange">
            <summary>
            A string constant similar to 'The numeric property is not within the required range of values.  The property '{0}' must greater than or equal to '{1}' and less than or equal to '{2}'.  Actual value: '{3}'.  DictionaryEntry: {4}' 
            It has a MonitoringEventId of "83", a MonitoringEventType of "Error" and a name of "NumberOutOfRange".
            It takes 5 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.RegexMustMatchFailure">
            <summary>
            A string constant similar to 'The string property being validated failed a regular expression validation.  The property '{0}' can contain only those characters and/or patterns specified by the data dictionary ValidationPattern's Pattern property.  DictionaryEntry: {1}  ValidationPattern: {2}' 
            It has a MonitoringEventId of "84", a MonitoringEventType of "Error" and a name of "RegexMustMatchFailure".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InputArgumentIsNullOrEmpty">
            <summary>
            A string constant similar to 'The input to the web method is null or contains a child property that is null.  DictionaryEntry: {0}' 
            It has a MonitoringEventId of "85", a MonitoringEventType of "Error" and a name of "InputArgumentIsNullOrEmpty".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.XmlSchemaValidationError">
            <summary>
            A string constant similar to 'The string property being validated against a defined XML schema failed validation.  The property '{0}' must be valid XML and conform to the XML schema defined in the DictionaryEntry's XmlSchema property.  DictionaryEntry: {1}' 
            It has a MonitoringEventId of "86", a MonitoringEventType of "Error" and a name of "XmlSchemaValidationError".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CustomValidationError">
            <summary>
            A string constant similar to 'A custom validator has thrown an exception while processing the property '{0}'.  DictionaryEntry: {1}' 
            It has a MonitoringEventId of "87", a MonitoringEventType of "Error" and a name of "CustomValidationError".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidConstraintExpression">
            <summary>
            A string constant similar to 'The constraint expression is invalid because it is malformed.  Constraint Value: {0}  Dictionary Entry: {1}' 
            It has a MonitoringEventId of "88", a MonitoringEventType of "Error" and a name of "InvalidConstraintExpression".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidAttributeName">
            <summary>
            A string constant similar to 'The constraint expression contains an attribute name that is invalid.  Constraint Value: {0}  AttributeName: {1}  DictionaryEntry: {2}' 
            It has a MonitoringEventId of "89", a MonitoringEventType of "Error" and a name of "InvalidAttributeName".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidAttributeValue">
            <summary>
            A string constant similar to 'The constraint expression contains an attribute value that is invalid.  Constraint Value: {0}  AttributeName: {1}  DictionaryEntry: {2}' 
            It has a MonitoringEventId of "90", a MonitoringEventType of "Error" and a name of "InvalidAttributeValue".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.IntegrationFailedForCP">
            <summary>
            A string constant similar to 'Integration failed from Corporate Permissions to {0}.' 
            It has a MonitoringEventId of "91", a MonitoringEventType of "Error" and a name of "IntegrationFailedForCP".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.StartDateEqualToEndDate">
            <summary>
            A string constant similar to 'Start date cannot be the same as end date.' 
            It has a MonitoringEventId of "92", a MonitoringEventType of "Error" and a name of "StartDateEqualToEndDate".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.StartDateTimeIsTooEarly">
            <summary>
            A string constant similar to 'Delegation cannot start before the assignment. Delegation start date should be greater than the assignment start date.' 
            It has a MonitoringEventId of "93", a MonitoringEventType of "Error" and a name of "StartDateTimeIsTooEarly".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.EndDateTimeIsTooLate">
            <summary>
            A string constant similar to 'Delegation cannot end after the assignment. Delegation end date should be less than the assignment end date.' 
            It has a MonitoringEventId of "94", a MonitoringEventType of "Error" and a name of "EndDateTimeIsTooLate".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPAndRelatedSystemsOutOfSync">
            <summary>
            A string constant similar to 'Corporate Permissions and {0} System(s) are out of sync. Details: {1}' 
            It has a MonitoringEventId of "95", a MonitoringEventType of "Error" and a name of "CPAndRelatedSystemsOutOfSync".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CacheFailureWarning">
            <summary>
            A string constant similar to 'An operation to {2} a cache item failed.  If the operation was retryable it was retried.  Key: {0}  CacheName: {1}  Operation: {2}  CacheRetryDelay: {3}  Operation Outcome: {4}  Attempts Made: {5}  Attempts Possible: {6}' 
            It has a MonitoringEventId of "96", a MonitoringEventType of "Warning" and a name of "CacheFailureWarning".
            It takes 8 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.InvalidAssignmentDuration">
            <summary>
            A string constant similar to 'Assignment duration specified using properties UtcStartDateTime and UtcEndDateTime cannot be different than specified on the role via the property AssignmentExpirationInDays.  Duration specified by the caller is {0} days whereas the duration specified on the role is {1} days.' 
            It has a MonitoringEventId of "97", a MonitoringEventType of "Error" and a name of "InvalidAssignmentDuration".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.SelfApproveNotAllowed">
            <summary>
            A string constant similar to 'Invalid Operation: Operation is not valid because the user is trying to approve himself/herself's request, which is not allowed.' 
            It has a MonitoringEventId of "98", a MonitoringEventType of "Error" and a name of "SelfApproveNotAllowed".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ApplicationEventNotFound">
            <summary>
            A string constant similar to 'A request was made to retrieve an ApplicationEvent that does not exist.  ApplicationEvent Name: {0}' 
            It has a MonitoringEventId of "100", a MonitoringEventType of "Error" and a name of "ApplicationEventNotFound".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.LegacySqlProviderError">
            <summary>
            A string constant similar to 'A call to SQL server failed and has been rethrown as a custom exception.' 
            It has a MonitoringEventId of "101", a MonitoringEventType of "Error" and a name of "LegacySqlProviderError".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConfigurationInitializationFailed">
            <summary>
            A string constant similar to 'An error occurred while initializing the ITSecurityConfigurationManager.  Error: {0}  Errant Provider Type: {1}' 
            It has a MonitoringEventId of "102", a MonitoringEventType of "Error" and a name of "ConfigurationInitializationFailed".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConfigurationValueError">
            <summary>
            A string constant similar to 'An error occurred attempting to retrieve a configuration value.  Error: {0}  Configured Providers: {1}  Configuration Value Name: {2}' 
            It has a MonitoringEventId of "103", a MonitoringEventType of "Error" and a name of "ConfigurationValueError".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.TracingInitialized">
            <summary>
            A string constant similar to 'The logging infrastructure has been initialized with the following values:  TraceMode: {0}  TraceContextData.FormatString: {1}  TraceListeners: {2}  Enabled Scenarios: {3}' 
            It has a MonitoringEventId of "104", a MonitoringEventType of "Information" and a name of "TracingInitialized".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.TracingInitializationFailed">
            <summary>
            A string constant similar to 'An error occurred attempting to initialize the tracing infrastructure.' 
            It has a MonitoringEventId of "105", a MonitoringEventType of "Error" and a name of "TracingInitializationFailed".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.PerformanceCountersInstanceInitializationFailure">
            <summary>
            A string constant similar to 'An error occurred attempting to initialize an instance of the PerformanceCounters.  These counters will not function for the duration of the process but application will not be affected.  CategoryName: {0}  InstanceName: {1}  Default SLA: {2}  NotApplicable Counter Name: {3}  Indeterminate Counter Name: {4}  Permit Counter Name: {5}  Deny Counter Name: {6}' 
            It has a MonitoringEventId of "106", a MonitoringEventType of "Warning" and a name of "PerformanceCountersInstanceInitializationFailure".
            It takes 7 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.MonitoringPerfCounterManagerInitialized">
            <summary>
            A string constant similar to 'The Monitoring Performance Counters initialized properly and are using the following configurable values:  Instance Prefix: {0}  Default SLA: {1}  Deny Counter Name: {2}  Indeterminate Counter Name: {3}  NotApplicable Counter Name: {4}  Permit Counter Name: {5}' 
            It has a MonitoringEventId of "107", a MonitoringEventType of "Information" and a name of "MonitoringPerfCounterManagerInitialized".
            It takes 6 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.SystemSecurityCacheSyncFailed">
            <summary>
            A string constant similar to 'An error occured attempting to sync update system security cache:  Retry time: {0}  Service Url: {1}  System user: {2}' 
            It has a MonitoringEventId of "108", a MonitoringEventType of "Error" and a name of "SystemSecurityCacheSyncFailed".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceStarted">
            <summary>
            A string constant similar to 'The CPUserAutoUnassignService has started successfully using the following configuration:  BatchStartTime: {0}  ErrorRetryInterval: {1}  HeartbeatInterval: {2}  ImpersonationAccount: {3}\{4}  MachineLockInterval: {5}  CorporatePermissionsConnection: {6}' 
            It has a MonitoringEventId of "1001", a MonitoringEventType of "Information" and a name of "CPUserAutoUnassignServiceStarted".
            It takes 7 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceStartupFailed">
            <summary>
            A string constant similar to 'The CPUserAutoUnassignService failed to start.  See the attached details for root cause information.' 
            It has a MonitoringEventId of "1002", a MonitoringEventType of "Error" and a name of "CPUserAutoUnassignServiceStartupFailed".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceStopped">
            <summary>
            A string constant similar to 'The CPUserAutoUnassignService has been gracefully stopped.' 
            It has a MonitoringEventId of "1003", a MonitoringEventType of "Information" and a name of "CPUserAutoUnassignServiceStopped".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceBatchStarting">
            <summary>
            A string constant similar to 'The CPUserAutoUnassignService batch process has started.' 
            It has a MonitoringEventId of "1004", a MonitoringEventType of "Information" and a name of "CPUserAutoUnassignServiceBatchStarting".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceBatchFinished">
            <summary>
            A string constant similar to 'The CPUserAutoUnassignService batch process has completed successfully.  Total user records processed: {0}  Total Roles unassigned: {1}  Total Delegations deleted: {2}  Total Roles with impacting properties: {3}  Records processed successfully: {4}  Records to be retried: {5}  Next run interval: {6}' 
            It has a MonitoringEventId of "1005", a MonitoringEventType of "Information" and a name of "CPUserAutoUnassignServiceBatchFinished".
            It takes 7 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceBatchTerminated">
            <summary>
            A string constant similar to 'The CPUserAutoUnassignService batch process has terminated due to an unrecoverable error.  The service is still running and a new attempt will be made at the next batch retry interval.  Total user records processed: {0}  Total Roles unassigned: {1}  Total Delegations deleted: {2}  Total Roles with impacting properties: {3}  Records processed successfully: {4}  Records to be ret[truncated]' 
            It has a MonitoringEventId of "1006", a MonitoringEventType of "Error" and a name of "CPUserAutoUnassignServiceBatchTerminated".
            It takes 7 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceUserRecordError">
            <summary>
            A string constant similar to 'An error occurred during the processing of a user's SubjectPropertyChanges record. The record has been skipped and will be retried during the next run cycle.  AccountName: {0}  RealmName: {1}' 
            It has a MonitoringEventId of "1007", a MonitoringEventType of "Error" and a name of "CPUserAutoUnassignServiceUserRecordError".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceInvalidReturnValues">
            <summary>
            A string constant similar to 'The call to '{0}' returned one or more null or blank return values.  ApplicationName: {1}  RoleName: {2}  PropertyName: {3}  AssignmentType: {4}' 
            It has a MonitoringEventId of "1008", a MonitoringEventType of "Error" and a name of "CPUserAutoUnassignServiceInvalidReturnValues".
            It takes 5 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceRolesRefreshRequired">
            <summary>
            A string constant similar to 'A user was updated via FIM/PAIX during the execution of the AutoUnassign service.  Update cycle started:  UTC: {0}   Local: {1}  Master list refreshed: UTC: {2}   Local: {3}' 
            It has a MonitoringEventId of "1009", a MonitoringEventType of "Warning" and a name of "CPUserAutoUnassignServiceRolesRefreshRequired".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceHeartbeat">
            <summary>
            A string constant similar to 'This message indicates the CPUserAutoUnassign services is alive and running.  Internal timers have been updated to any modified configuration values.  Next cycle will start:  UTC: {0}   Local: {1}' 
            It has a MonitoringEventId of "1010", a MonitoringEventType of "Information" and a name of "CPUserAutoUnassignServiceHeartbeat".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceUnhandledException">
            <summary>
            A string constant similar to 'The CPUserAutoUnassignService has encountered an unhandled exception.  CommandLine: {0}' 
            It has a MonitoringEventId of "1011", a MonitoringEventType of "Error" and a name of "CPUserAutoUnassignServiceUnhandledException".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAutoUnassignServiceRoleMasterListEmpty">
            <summary>
            A string constant similar to 'A batch cycle started and successfully retrieved an empty list of Roles that have impacting properties.  The batch cycle will continue but no roles will be unassigned nor delegations removed.  Roles Master List Count:  {0}' 
            It has a MonitoringEventId of "1012", a MonitoringEventType of "Warning" and a name of "CPUserAutoUnassignServiceRoleMasterListEmpty".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceStarted">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService has started successfully using the following configuration:  BatchStartTime: {0}  ErrorRetryInterval: {1}  ErrorRetryTimes: {2}  ImpersonationAccount: {3}\{4}  CorporatePermissionsConnection: {5}' 
            It has a MonitoringEventId of "1013", a MonitoringEventType of "Information" and a name of "CPUserAssignmentExpirationNoticeServiceStarted".
            It takes 6 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceStartupFailed">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService failed to start.  See the attached details for root cause information.' 
            It has a MonitoringEventId of "1014", a MonitoringEventType of "Error" and a name of "CPUserAssignmentExpirationNoticeServiceStartupFailed".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceStopped">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService has been gracefully stopped.' 
            It has a MonitoringEventId of "1015", a MonitoringEventType of "Information" and a name of "CPUserAssignmentExpirationNoticeServiceStopped".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceBatchStarting">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService batch process has started.' 
            It has a MonitoringEventId of "1016", a MonitoringEventType of "Information" and a name of "CPUserAssignmentExpirationNoticeServiceBatchStarting".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceBatchFinished">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService batch process has completed successfully.' 
            It has a MonitoringEventId of "1017", a MonitoringEventType of "Information" and a name of "CPUserAssignmentExpirationNoticeServiceBatchFinished".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceBatchTerminated">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService batch process has terminated due to an unrecoverable error.  The service is still running and a new attempt will be made at the next batch retry interval.  Next run interval: {0}' 
            It has a MonitoringEventId of "1018", a MonitoringEventType of "Error" and a name of "CPUserAssignmentExpirationNoticeServiceBatchTerminated".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceBatchTerminatedWithNoRetry">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService batch process has terminated due to an unrecoverable error.  The service is still running but no retry will be done for this batch.' 
            It has a MonitoringEventId of "1019", a MonitoringEventType of "Error" and a name of "CPUserAssignmentExpirationNoticeServiceBatchTerminatedWithNoRetry".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceSendingNoticeException">
            <summary>
            A string constant similar to 'Exception occured when sending notice for the following role.  Role: {0}' 
            It has a MonitoringEventId of "1020", a MonitoringEventType of "Error" and a name of "CPUserAssignmentExpirationNoticeServiceSendingNoticeException".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceUnhandledException">
            <summary>
            A string constant similar to 'The CPUserAssignmentExpirationNoticeService has encountered an unhandled exception.  CommandLine: {0}' 
            It has a MonitoringEventId of "1021", a MonitoringEventType of "Error" and a name of "CPUserAssignmentExpirationNoticeServiceUnhandledException".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceNoRoleAdministrators">
            <summary>
            A string constant similar to 'Failed to send notice because there is no role administrators assigned to the following role.  Role: {0}' 
            It has a MonitoringEventId of "1022", a MonitoringEventType of "Warning" and a name of "CPUserAssignmentExpirationNoticeServiceNoRoleAdministrators".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPUserAssignmentExpirationNoticeServiceNoMailAddresses">
            <summary>
            A string constant similar to 'Failed to send notice because there is no email addresses configured for the role administrators of the following role.  Role: {0}' 
            It has a MonitoringEventId of "1023", a MonitoringEventType of "Warning" and a name of "CPUserAssignmentExpirationNoticeServiceNoMailAddresses".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceStarted">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService has started successfully using the following configuration:  BatchStartTime: {0}  MaxRetryTime: {1}  ErrorRetryInterval: {2}  DBCommandTimeout: {3}  HeartbeatInterval: {4}  ImpersonationAccount: {5}\{6}' 
            It has a MonitoringEventId of "1024", a MonitoringEventType of "Information" and a name of "CPScopeTypeImportServiceStarted".
            It takes 7 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceStopped">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService has been gracefully stopped.' 
            It has a MonitoringEventId of "1025", a MonitoringEventType of "Information" and a name of "CPScopeTypeImportServiceStopped".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceStartupFailed">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService failed to start.  See the attached details for root cause information.' 
            It has a MonitoringEventId of "1026", a MonitoringEventType of "Error" and a name of "CPScopeTypeImportServiceStartupFailed".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceHeartbeat">
            <summary>
            A string constant similar to 'This message indicates the CPScopeTypeImport services is alive and running.  Internal timers have been updated to any modified configuration values.  Next cycle will start:  UTC: {0}   Local: {1}' 
            It has a MonitoringEventId of "1027", a MonitoringEventType of "Information" and a name of "CPScopeTypeImportServiceHeartbeat".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceBatchStarting">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService batch process has started.' 
            It has a MonitoringEventId of "1028", a MonitoringEventType of "Information" and a name of "CPScopeTypeImportServiceBatchStarting".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceBatchFinished">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService batch process has completed successfully.  Next run interval: {0}' 
            It has a MonitoringEventId of "1029", a MonitoringEventType of "Information" and a name of "CPScopeTypeImportServiceBatchFinished".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceBatchTerminated">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService batch process has terminated due to an unrecoverable error.  The service is still running and a new attempt will be made at the next batch retry interval.  Next run interval: {0}' 
            It has a MonitoringEventId of "1030", a MonitoringEventType of "Error" and a name of "CPScopeTypeImportServiceBatchTerminated".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceBatchException">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService batch exception:  {0}' 
            It has a MonitoringEventId of "1031", a MonitoringEventType of "Error" and a name of "CPScopeTypeImportServiceBatchException".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceUnhandledException">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService has encountered an unhandled exception.  CommandLine: {0}' 
            It has a MonitoringEventId of "1032", a MonitoringEventType of "Error" and a name of "CPScopeTypeImportServiceUnhandledException".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceBatchError">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService batch process encountered some errors.' 
            It has a MonitoringEventId of "1033", a MonitoringEventType of "Error" and a name of "CPScopeTypeImportServiceBatchError".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.CPScopeTypeImportServiceRetryStarted">
            <summary>
            A string constant similar to 'The CPScopeTypeImportService start to retry {0} times for scope type.' 
            It has a MonitoringEventId of "1034", a MonitoringEventType of "Information" and a name of "CPScopeTypeImportServiceRetryStarted".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceStarted">
            <summary>
            A string constant similar to 'The DataSynchronizationService has started successfully using the following configuration values:  HeartbeatInterval: {0}  Max Worker Threads: {1}  Sync Pair Configuration Connection String: {2}' 
            It has a MonitoringEventId of "2000", a MonitoringEventType of "Information" and a name of "DataSynchronizationServiceStarted".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceStopped">
            <summary>
            A string constant similar to 'The DataSynchronizationService has been gracefully stopped.' 
            It has a MonitoringEventId of "2001", a MonitoringEventType of "Information" and a name of "DataSynchronizationServiceStopped".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceHeartbeat">
            <summary>
            A string constant similar to 'This message indicates that ITAuthorize Data Sync service is alive and running.  Internal timers have been updated to any modified configuration values.  Active worker threads: {0}' 
            It has a MonitoringEventId of "2002", a MonitoringEventType of "Information" and a name of "DataSynchronizationServiceHeartbeat".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceUnableToCreateSyncPair">
            <summary>
            A string constant similar to 'The worker thread was unable to configure the SyncPair for processing.  Exception: {0}  Publisher Connection String: {1}  Subscriber Connection String: {2}' 
            It has a MonitoringEventId of "2020", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceUnableToCreateSyncPair".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceStartupFailed">
            <summary>
            A string constant similar to 'The DataSynchronizationService failed to start. See the attached details for root cause information.  Command Line: {0}  Exception: {1}' 
            It has a MonitoringEventId of "2021", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceStartupFailed".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceUnhandledException">
            <summary>
            A string constant similar to 'The DataSynchronizationService has encountered an unhandled exception.  CommandLine: {0}  Exception: {1}' 
            It has a MonitoringEventId of "2022", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceUnhandledException".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceFailedToResetHost">
            <summary>
            A string constant similar to 'The DataSynchronizationService was unable to reset SyncPair processing host informtion in the configuration database. See the attached details for root cause information.  Connection String: {0}  Exception: {1}' 
            It has a MonitoringEventId of "2024", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceFailedToResetHost".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceSyncFailed">
            <summary>
            A string constant similar to 'The data sync process for sync pair failed.  Sync Pair: {0}  Failure Details: {1}' 
            It has a MonitoringEventId of "2025", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceSyncFailed".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceExceptionWhileFetchingNextSyncPair">
            <summary>
            A string constant similar to 'An exception has occurred while attempting to fetch next SyncPair from Sync Pair Configuration database:  {0}  Exception: {1}' 
            It has a MonitoringEventId of "2026", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceExceptionWhileFetchingNextSyncPair".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceExceptionWhileCreatingSyncInstance">
            <summary>
            A string constant similar to 'An exception has occurred while attempting to configure a Sync Instance:  Exception: {0}' 
            It has a MonitoringEventId of "2027", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceExceptionWhileCreatingSyncInstance".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceExceptionCantSaveLastErrorMessage">
            <summary>
            A string constant similar to 'An exception has occurred while attempting to log error message for Sync Pair: {0}  Error Message to Log in database: {1}  Exception: {2}' 
            It has a MonitoringEventId of "2028", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceExceptionCantSaveLastErrorMessage".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceExceptionObjectCreationScriptFailed">
            <summary>
            A string constant similar to 'An exception has occurred while executing Object Creation Script for Subscriber: {0}  Exception: {1}' 
            It has a MonitoringEventId of "2029", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceExceptionObjectCreationScriptFailed".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceExceptionPostSyncScriptFailed">
            <summary>
            A string constant similar to 'An exception has occurred while executing Post Sync Script for Subscriber: {0}  Exception: {1}' 
            It has a MonitoringEventId of "2030", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceExceptionPostSyncScriptFailed".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceWorkerSyncPairAppliedChangesFailed">
            <summary>
            A string constant similar to 'A SyncPair failed to apply changes.  Role : {0}  SQL Server   : {1}  Database     : {2}  Table: {3}  Primary Key  : {4}  Conflict Type: {5}  Stage: {6}  Error: {7}  Action Taken : {8}  Base Error   :  {9}' 
            It has a MonitoringEventId of "2031", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceWorkerSyncPairAppliedChangesFailed".
            It takes 10 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceWorkerSyncPairCantAlterUserType">
            <summary>
            A string constant similar to 'The user type {0} has changed on the publisher, but cannot be updated on the subscriber due to object dependencies. Please reprovision the SyncPair in order to proceed with data synchronization.  SyncPair ID: {1}' 
            It has a MonitoringEventId of "2032", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceWorkerSyncPairCantAlterUserType".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceWorkerThreadNotRunning">
            <summary>
            A string constant similar to 'The following worker threads are not in a Running state:  {0}  State: {1}' 
            It has a MonitoringEventId of "2033", a MonitoringEventType of "Error" and a name of "DataSynchronizationServiceWorkerThreadNotRunning".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceBeginSync">
            <summary>
            A string constant similar to 'Beginning sync for SyncPair {0}' 
            It has a MonitoringEventId of "2050", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceBeginSync".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceFinishedSync">
            <summary>
            A string constant similar to 'Finished sync for SyncPair {0}  DownloadChangesApplied   : {1}  DownloadChangesFailed    : {2}  DownloadChangesTotal     : {3}  SyncStartTime    : {4}  SyncEndTime      : {5}' 
            It has a MonitoringEventId of "2051", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceFinishedSync".
            It takes 6 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceWorkerThreadSleeping">
            <summary>
            A string constant similar to 'Worker Thread ID: {0} : No further SyncPairs to process. Sleeping {1} seconds before checking again.' 
            It has a MonitoringEventId of "2054", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceWorkerThreadSleeping".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceWorkerSyncPairStateChanged">
            <summary>
            A string constant similar to 'A SyncPair has changed states:  Sync Orchestrator Old State: {0}  Sync Orchestrator New State: {1}' 
            It has a MonitoringEventId of "2055", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceWorkerSyncPairStateChanged".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceWorkerSyncPairSessionProgress">
            <summary>
            A string constant similar to 'A SyncPair Session Progress:  Reporting Provider: {0}  Total Work: {1}  Completed Work    : {2}  Stage     : {3}' 
            It has a MonitoringEventId of "2056", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceWorkerSyncPairSessionProgress".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceSetupSyncInstance">
            <summary>
            A string constant similar to 'Successfully setup SyncInstance :  Server: {0}  Database: {1}' 
            It has a MonitoringEventId of "2057", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceSetupSyncInstance".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceDatabaseAlreadyProvisioned">
            <summary>
            A string constant similar to 'Database already provisioned  Server: {0}  Database: {1}' 
            It has a MonitoringEventId of "2058", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceDatabaseAlreadyProvisioned".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceInfoMessageForSchemaSetup">
            <summary>
            A string constant similar to 'Schema Setup Sql Info Message: {0}' 
            It has a MonitoringEventId of "2059", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceInfoMessageForSchemaSetup".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceCancelRequestReceived">
            <summary>
            A string constant similar to 'Cancel request received.' 
            It has a MonitoringEventId of "2060", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceCancelRequestReceived".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceSetBatchingFolder">
            <summary>
            A string constant similar to 'Setting batch folder to {0}' 
            It has a MonitoringEventId of "2061", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceSetBatchingFolder".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceCreatingBatchingFolder">
            <summary>
            A string constant similar to 'Creating batch folder {0}' 
            It has a MonitoringEventId of "2062", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceCreatingBatchingFolder".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.DataSynchronizationServiceRemovingColumnWithInvalidType">
            <summary>
            A string constant similar to 'A column with an invalid type has been removed from this sync.  Sync Pair ID: {0}  Column Name : {1}  Column Type : {2}  Table Name  : {3}' 
            It has a MonitoringEventId of "2063", a MonitoringEventType of "Verbose" and a name of "DataSynchronizationServiceRemovingColumnWithInvalidType".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.TokenAcquireError">
            <summary>
            A string constant similar to 'An exception occurred when acquiring token. Exception is {0}.' 
            It has a MonitoringEventId of "3000", a MonitoringEventType of "Error" and a name of "TokenAcquireError".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.MissingUPNInToken">
            <summary>
            A string constant similar to '"Missing the UserPrincipalName in the ClaimsPrincipal extracted from the incoming authentication Token. Token Authentication might fail if UPN is required.' 
            It has a MonitoringEventId of "3001", a MonitoringEventType of "Warning" and a name of "MissingUPNInToken".
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FeatureInFlight">
            <summary>
            A string constant similar to 'The following feature is in flight.  Feature : {0}  Parameters : {1}' 
            It has a MonitoringEventId of "3005", a MonitoringEventType of "Information" and a name of "FeatureInFlight".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FeatureNotInFlight">
            <summary>
            A string constant similar to 'The following feature is not in flight.  Feature : '{0}'  Parameters : {1}' 
            It has a MonitoringEventId of "3006", a MonitoringEventType of "Information" and a name of "FeatureNotInFlight".
            It takes 2 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ErrorInFlighting">
            <summary>
            A string constant similar to 'An exception occurred while initializing or evaluating Flighting.  Exception is : {0}.  FeatureName : '{1}'  Flight parameters : '{2}'  Flight Context : '{3}'' 
            It has a MonitoringEventId of "3007", a MonitoringEventType of "Error" and a name of "ErrorInFlighting".
            It takes 4 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FeatureNameEmptyInFlight">
            <summary>
            A string constant similar to 'A call to check Flighting was made, but no feature name was provided. Flighting will not occur.  Caller stack follows : {0}' 
            It has a MonitoringEventId of "3008", a MonitoringEventType of "Error" and a name of "FeatureNameEmptyInFlight".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConflictingContextParameters">
            <summary>
            A string constant similar to 'The following parameter has already been added in the context dictionary. It cannot be added for the feature. Please review your code for duplicate calls to add this feature.  Parameter : '{0}'  Feature : '{1}'  Caller Stack : {2}' 
            It has a MonitoringEventId of "3009", a MonitoringEventType of "Error" and a name of "ConflictingContextParameters".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FixedResponseForFlight">
            <summary>
            A string constant similar to 'A fixed response was provided for the following Flighting call by the FlightingHelper.  Feature : '{0}'  Fixed response : {1}  Parameters : {2}' 
            It has a MonitoringEventId of "3010", a MonitoringEventType of "Information" and a name of "FixedResponseForFlight".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.FlightingInitialized">
            <summary>
            A string constant similar to 'Flighting library was initialized with the following parameters.  EnvironmentName : '{0}'  ServiceName : '{1}'  CertificateSubjectName : '{2}'  InitializationResult : '{3}'  FlightingConfiguration : {4}' 
            It has a MonitoringEventId of "3011", a MonitoringEventType of "Information" and a name of "FlightingInitialized".
            It takes 5 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConsistencyCheckingServerServiceEvent">
            <summary>
            A string constant similar to 'Service message : {0}' 
            It has a MonitoringEventId of "3015", a MonitoringEventType of "Information" and a name of "ConsistencyCheckingServerServiceEvent".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConsistencyCheckingServerProgressEvent">
            <summary>
            A string constant similar to 'Progress message : {0}' 
            It has a MonitoringEventId of "3016", a MonitoringEventType of "Information" and a name of "ConsistencyCheckingServerProgressEvent".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConsistencyCheckingServerVerificationError">
            <summary>
            A string constant similar to 'An exception occurred while verifying data.  SyncPair id : {0}  PublisherConnectionString : {1}  Table Name : {2}  Row identifier : {3}  Exception is {4}.' 
            It has a MonitoringEventId of "3017", a MonitoringEventType of "Error" and a name of "ConsistencyCheckingServerVerificationError".
            It takes 5 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConsistencyCheckingServerMetadataQueryError">
            <summary>
            A string constant similar to 'An exception occurred while querying sql server for table meta-data.  PublisherConnectionString : {0}  Table Name : {1}  Exception is : {2}.' 
            It has a MonitoringEventId of "3018", a MonitoringEventType of "Error" and a name of "ConsistencyCheckingServerMetadataQueryError".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConsistencyCheckingServerError">
            <summary>
            A string constant similar to 'An exception occurred in Consistency checking server  Exception is : {0}.' 
            It has a MonitoringEventId of "3019", a MonitoringEventType of "Error" and a name of "ConsistencyCheckingServerError".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConsistencyCheckingServerWarning">
            <summary>
            A string constant similar to 'The following warning was issued by the Consistency checker  Warning : {0}.' 
            It has a MonitoringEventId of "3020", a MonitoringEventType of "Warning" and a name of "ConsistencyCheckingServerWarning".
            It takes 1 parameter(s).
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ApplicationEvents.ConsistencyCheckingServerSyncPairFetch">
            <summary>
            A string constant similar to 'A sync pair fetch was called with the following parameters,  Sync pair Id : '{0}'  Start Time : '{1}'  End Time- '{2}'' 
            It has a MonitoringEventId of "3021", a MonitoringEventType of "Information" and a name of "ConsistencyCheckingServerSyncPairFetch".
            It takes 3 parameter(s).
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter">
            <summary>
            Base class for performance counters
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.TotalInstance">
            <summary>
            Instance name for total counters
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.BaseIdentifier">
            <summary>
            Base identifier. For counters that need base counters,
            BaseIdentifier is added to the counter name and used as counter name.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.performanceCountersEnabled">
            <summary>
            static variable for enabling performance counters
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.instance">
            <summary>
            Instance name of the counter
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.counter">
            <summary>
            .Net Performance counter that is wrapped in this class
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.baseCounter">
            <summary>
            .Net Performance counter used for base counters.
            For average or time performance indicators, we need a base counter.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.totalCounter">
            <summary>
            .Net Performance counter wrapped in this class for
            total performance indicators. This counter is required for
            total instances.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.totalBaseCounter">
            <summary>
            .Net Performance counter for total base indicator
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.counterType">
            <summary>
            Performance counter type
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.category">
            <summary>
            Performance counter category
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.name">
            <summary>
            Counter name
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.hasTotalCounter">
            <summary>
            Flag to indicate if there is total counter
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.#ctor(System.String,System.String,System.String,Microsoft.IT.Security.Core.Diagnostics.PerfCounterType,Microsoft.IT.Security.Core.Diagnostics.PerfCounterOptions)">
            <summary>
            Initializes a new instance of the BasePerfCounter class.
            </summary>
            <param name="categoryName">category name</param>
            <param name="counterName">counter name</param>
            <param name="instanceName">instance name</param>
            <param name="counterType">counter type</param>
            <param name="counterOptions">Perf counter options</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Increment">
            <summary>
            Abstract increment method to be implemented by derived classes
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Increment(System.Int64)">
            <summary>
            Abstract increment method to be implemented by derived classes
            </summary>
            <param name="value">Increment value</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Decrement">
            <summary>
            Abstract decrement method to be implemented by derived classes
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Decrement(System.Int64)">
            <summary>
            Abstract decrement method to be implemented by derived classes
            </summary>
            <param name="value">Decrement value</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Dispose">
            <summary>
            Public interface dispose method called by the using pattern
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Dispose(System.Boolean)">
            <summary>
            Internal overload of the Dispose operation for disposable pattern. Stops the elapsed counter
            </summary>
            <param name="disposing">true if we need to dispose non-disposable members</param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.IsEnabled">
            <summary>
            Gets a value indicating whether the performance counters are enabled
            </summary>
            <returns>true if the performance counters are enabled</returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Category">
            <summary>
            Gets Category Name
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.CounterType">
            <summary>
            Gets performance counter type
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.Name">
            <summary>
            Gets performance counter name
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.BaseName">
            <summary>
            Gets the base performance counter name.
            Base identifier( Base) is added to the name and returned.
            This name is used as the base counter name for counters that
            need base counters.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.RawValue">
            <summary>
            Gets or sets raw value of the counter
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.TotalRawValue">
            <summary>
            Gets or sets the raw value of the total counter.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.RawCounter">
            <summary>
            Gets performance counter
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.RawBaseCounter">
            <summary>
            Gets base performance counter
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.RawTotalCounter">
            <summary>
            Gets total performance counter
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.BasePerfCounter.RawTotalBaseCounter">
            <summary>
            Gets total base performance counter
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.TraceMode">
            <summary>
            An enumeration of the all valid tracing modes supported by the ITA infrastructure
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.TraceMode.None">
            <summary>
            No tracing is performed regardless of any other configuration settings.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.TraceMode.All">
            <summary>
            Tracing of all trace invocations will occur subject to the existing configuration of the TraceSource, TraceSwitch
            TraceListeners and Filters that are in effect.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.TraceMode.ScenariosOnly">
            <summary>
            Tracing of occurs only for specific scenarios that are enabled.  This mode is also subject to the existing configuration 
            of the TraceSource, TraceSwitch TraceListeners and Filters that are in effect.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.ErrorUtility.GenerateErrorCode(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,Microsoft.IT.Security.Core.ErrorCode)">
            <summary>
            This method is used to generate error code.
            </summary>
            <param name="component"></param>
            <param name="entity"></param>
            <param name="operation"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.ErrorUtility.GenerateEventID(Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,Microsoft.IT.Security.Core.ErrorCode)">
            <summary>
            This method is used to generate event Id.
            </summary>
            <param name="entity"></param>
            <param name="operation"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.ErrorUtility.PrintException(System.Exception)">
            <summary>
            Dumps the Exception in a string form
            </summary>
            <param name="ex">The Exception object that needs to be dumped.</param>        
            <returns>A System.String containing the stack trace.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.ErrorUtility.BuildExceptionMessage(System.Exception)">
            <summary>
            Builds an error string with the exception given.
            </summary>
            <param name="exception">A given exception where an error string can be built upon it and its inner exceptions.</param>
            <returns>The error string built by the information in the exception class.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.IMonitor.Ping(Microsoft.IT.Security.Core.Diagnostics.MonitorLevel)">
            <summary>
            <c>Ping</c>Method is used to monitor the service.
            <list type="table">
            <listheader>
            <term>Parameter</term><description>Requirement</description>
            </listheader>
            <item><term>MonitorLevel</term><description>Required</description></item>
            </list>
            </summary>
            <param name="policySet">Monitoring level to ping for.</param>
            <list type="table">
            <listheader>
            <term>Fields in MonitorLevel</term><description>Description</description>
            </listheader>
            <item><term>Level0</term><description>Level 0.</description></item>
            <item><term>Level1</term><description>Level 1</description></item>
            <item><term>Level2</term><description>Level 2</description></item>
            </list>
            <returns>MonitoredServicesResponse</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.PerfCounter">
            <summary>
            PerformanceCounter. Wrapper for ITAuthorize performance counters.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.ApplicationName">
            <summary>
            Performance counters category name.  This class contains performance counter methods 
            and also takes care of base and total counters.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.counterTimer">
            <summary>
            Performance counter timer. Marking this as ThreadStatic so that this is not shared between
            the threads.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.#ctor(System.String,System.String,Microsoft.IT.Security.Core.Diagnostics.PerfCounterType)">
            <summary>
            Initializes a new instance of the PerfCounter class.
            </summary>
            <param name="counterName">counter name</param>
            <param name="instance">The name of the counter category instance,
            or an empty string("") for single instance counter.</param>
            <param name="counterType">counter type</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.#ctor(System.String,System.String,Microsoft.IT.Security.Core.Diagnostics.PerfCounterType,Microsoft.IT.Security.Core.Diagnostics.PerfCounterOptions)">
            <summary>
            Initializes a new instance of the PerfCounter class.
            </summary>
            <param name="counterName">counter name</param>
            <param name="instance">The name of the counter category instance,
            or an empty string("") for single instance counter.</param>
            <param name="counterType">counter type</param>
            /// <param name="counterOptions">Perf counter options</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.#ctor(System.String,System.String,System.String,Microsoft.IT.Security.Core.Diagnostics.PerfCounterType,Microsoft.IT.Security.Core.Diagnostics.PerfCounterOptions)">
            <summary>
            Initializes a new instance of the PerfCounter class.
            </summary>
            <param name="category">category name</param>
            <param name="counterName">counter name</param>
            <param name="instance">The name of the counter category instance,
            or an empty string("") for single instance counter.</param>
            <param name="counterType">counter type</param>
            <param name="counterOptions">perf counter options</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Increment">
            <summary>
            Increment the value of this counter
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Increment(System.Int64)">
            <summary>
            Increment the value of this counter by some value
            </summary>
            <param name="value">The increment value</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Decrement">
            <summary>
            Increment the value of this counter
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Decrement(System.Int64)">
            <summary>
            Increment the value of this counter by some value
            </summary>
            <param name="value">The increment value</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Start">
            <summary>
            Start the timer
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Stop">
            <summary>
            Stop the timer and update the counters.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Stop(System.Boolean)">
            <summary>
            Stop the timer and increment counter if the incrementCounter flag is set.
            </summary>
            <param name="incrementCounter">increment counter</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounter.Reset">
            <summary>
            Sets the value of the performance counter back to zero.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement">
            <summary>
            Implement a Performance Counter wrapper that tracks 2 counters, a number of calls
            and a elapsed time counter that is "stopped" when the object is disposed
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement.elapsedCounter">
            <summary>
            Elapsed counter to stopped upon disposing
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement.disposed">
            <summary>
            Prevent redundant calls
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement.#ctor(Microsoft.IT.Security.Core.Diagnostics.PerfCounter,Microsoft.IT.Security.Core.Diagnostics.PerfCounter)">
            <summary>
            Initializes a new instance of the IWPerformanceCounter class.
            </summary>
            <param name="operationCounter">Operation counter to increment</param>
            <param name="elapsedCounter">elapsed counter to start</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement.#ctor(Microsoft.IT.Security.Core.Diagnostics.PerfCounter)">
            <summary>
            Initializes a new instance of the PerfCounterAutoIncrement class.
            </summary>
            <param name="elapsedCounter">elapsed counter to start</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement.Finalize">
            <summary>
            Finalizes an instance of the PerfCounterAutoIncrement class.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement.Dispose">
            <summary>
            Public interface dispose method called by the using pattern
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.PerfCounterAutoIncrement.Dispose(System.Boolean)">
            <summary>
            Internal overload of the Dispose operation for disposable pattern. Stops the elapsed counter
            </summary>
            <param name="disposing">true if we need to dispose non-disposable members</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.PerfCounterType">
            <summary>
            PerformanceCounterType
            Timer, Average and Other
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterType.Latency">
            <summary>
            Enum for latency type. Select this type for all timer related
            counters
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterType.Average">
            <summary>
            Enum for average type. Select this type for all average performance
            counters.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterType.Other">
            <summary>
            All other performance counter types
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.PerfCounterOptions">
            <summary>
            Enum for Performance Counter Options
            Marking as flag enum so that any of these options
            can be used.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterOptions.None">
            <summary>
            No options
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterOptions.MaintainTotalCounter">
            <summary>
            Enum option for maintaining total counter
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.PerfCounterOptions.ResetCounter">
            <summary>
            Enum option for auto reseting the perf counter
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.TimerStack">
            <summary>
            A thread-safe implementation of a LIFO stack structure that also provides an ability to access a
            thread specific instance.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.TimerStack.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.TimerStack.Pop">
            <summary>
            Removes and returns the top entry in the stack if one exists and null if the stack is empty.
            </summary>
            <returns>
            The top entry in the stack if one exists and null if the stack is empty.
            </returns>
            <remarks>
            This replaces the base class implementation because the base class throws on an empty stack and we don't want to.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.TimerStack.ToString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.TimerStack.CurrentParent">
            <summary>
            Gets the top <see cref="T:Microsoft.IT.Diagnostics.Timer"/> in the stack if the stack is not empty and null if it is empty.
            This property is useful for the parentTimer parameter on the <see cref="T:Microsoft.IT.Diagnostics.Timer"/> constructor.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.TimerStack.Root">
            <summary>
            Gets and sets the <see cref="T:Microsoft.IT.Diagnostics.Timer"/> that represents the root timer in the stack. 
            On a get if the stack is empty null is returned, otherwise the first timer pushed on the stack is returned.
            When setting this property all previous stack entries are removed leaving a single entry in the stack.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.TimerStack.Current">
            <summary>
            Gets or sets the <see cref="T:Microsoft.IT.Security.Core.Diagnostics.TimerStack"/> associated with the current thread.  On a get operation if an entry does not 
            yet exist a new entry is created and added to the internal dictionary for the current thread. Setting the current thread's
            value to null will remove the entry for the current thread from the dictionary.
            </summary>
            <remarks>
            <para>
            Note that for applications providing instrumentation on worker threads the current <see cref="T:Microsoft.IT.Security.Core.Diagnostics.TimerStack"/> must be acquired while 
            still on the primary thread and then passed as context to the worker thread.
            </para>
            <para>
            Also note that this implementation is optimized for ease of use and therefore the sets and gets do not necessarily
            roundtrip as might otherwise be expected.  When setting to null a subsequent get will still return a newed up value.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo">
            <summary>
            A class that exposes certain system derivable properties and is intended for use with
            the tracing methods to provide some standard values such as PID and thread ID.  The ToString()
            method returns values in the format defined by the FormatString property.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.DefaultFormatString">
            <summary>
            The format string that will be used by default if the instance FormatString property is not explicitly set.
            Current value is "{7}, PID: {2}, TID: {3}".  See the FormatString property for complete information regarding
            what positional variables are supported.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.#cctor">
            <summary>
            Initializes the more expensive properties that cannot change over time in the context of 
            the app domain.  This is done to improve performance when used in tracing methods.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.ToString">
            <summary>
            Returns a string representation of the instance that is formatted according to the <see cref="P:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.FormatString"/> property.
            </summary>
            <returns>
            A string representation of the instance that is formatted according to the <see cref="P:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.FormatString"/> property.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.ToString(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Returns a string representation of the instance that is formatted according to the <see cref="P:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.FormatString"/> property
            then appended with information from the passed in <paramref name="context"/>.
            </summary>
            <param name="context"></param>
            <returns>
            A string representation of the instance that is formatted according to the <see cref="P:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.FormatString"/> property
            then appended with information from the passed in <paramref name="context"/>.
            </returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.Name">
            <summary>
            Name to appear in the output string to distinguish the trace context from others.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.FormatString">
            <summary>
            The format string passed to a string.Format method that will be used to generate the output.  The default format string is: "{0,20}, {1}: PID: {2}, TID: {3}, Name: {4}, Machine: {5}"
            The arguments used in the call in order are: 
            <list type="bullet">
            <item>{0} <see cref="M:System.Diagnostics.Stopwatch.GetTimestamp"/>, </item>
            <item>{1} <see cref="P:Microsoft.IT.Security.Core.Diagnostics.TraceContextInfo.Name"/>,</item>
            <item>{2} <see cref="M:System.Diagnostics.Process.GetCurrentProcess"/>.Id,</item>
            <item>{3} <see cref="P:System.Threading.Thread.ManagedThreadId"/>,</item>
            <item>{4} <see cref="P:System.Threading.Thread.Name"/>,</item>
            <item>{5} <see cref="P:System.Environment.MachineName"/>,</item>
            <item>{6} <see cref="P:System.DateTime.Now"/>.Date,</item>
            <item>{7} <see cref="P:System.DateTime.Now"/>.TimeOfDay.</item>
            </list>
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.Utility">
            <summary>
            Utility class having some common methods.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Utility.#ctor">
            <summary>
            Hidden public constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Utility.PopulateGeneralInformation(Microsoft.IT.Security.Core.Diagnostics.MonitoredServicesResponse)">
            <summary>
            Populate general information that are not specific to any service.
            </summary>
            <param name="response">Response to be populated.</param>
            <returns>Populated response.</returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Utility.PopulateConfigFileEnvironmentName(Microsoft.IT.Security.Core.Diagnostics.MonitoredServicesResponse)">
            <summary>
            Check whether config file service is accessible or not.
            </summary>
            <param name="response">Response to be populated.</param>
            <returns>Populated response.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.IT.Security.Core.Diagnostics.Utility.PrintStringDictionary(System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.ScenarioName">
            <summary>
            Enumerations for ScenerioNames
            Do not change the order. Add the new values at the end
            Add the different scenerio names comes under
            AccessAdminControl,AccessControlEnforcement,PolicyAdministrationPoint,Provisioning
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AddUser">
            <summary>
            Add User
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AddPolicy">
            <summary>
            Add Policy
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateProvisioningRequest">
            <summary>
            Create Provisioning Request
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateProvisioningRequestStatus">
            <summary>
            Update Provisioning Request Status
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateProvisioningRequestPolicyStatus">
            <summary>
            Update Provisioning Request Policy Status
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AccessControlRequest">
            <summary>
            AccessControlRequest
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateResource">
            <summary>
            ResourceCreate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateResource">
            <summary>
            ResourceUpdate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteResource">
            <summary>
            ResourceDelete
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateNamedProtectionDomain">
            <summary>
            Named protection domain create.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateNamedProtectionDomain">
            <summary>
            Named protection domain update.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteNamedProtectionDomain">
            <summary>
            Named protection domain delete.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateSubject">
            <summary>
            Subject Create.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateSubject" -->
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteSubject">
            <summary>
            Subject delete.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateRealm">
            <summary>
            Realm Create.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateRealm">
            <summary>
            Realm update.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteRealm">
            <summary>
            Realm delete.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PermissionCreate">
            <summary>
            Permission Create.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PermissionUpdate">
            <summary>
            Permission update.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PermissionDelete">
            <summary>
            Permission delete.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignPermissionToRole">
            <summary>
            Permission Role assignment.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignPermissionFromRole">
            <summary>
            Permission Role deassignment.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateSubjectScopeEntry">
            <summary>
            Subject Scope Entry assignment.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteSubjectScopeEntry">
            <summary>
            Subject Scope Entry un-assignment.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.ConstraintTemplateCreate" -->
        <!-- Badly formed XML comment ignored for member "F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.ConstraintTemplateUpdate" -->
        <!-- Badly formed XML comment ignored for member "F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.ConstraintTemplateDelete" -->
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateSSDRoleSet">
            <summary>
            Role exclusion list create.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateSSDRoleSet">
            <summary>
            Role exclusion list update.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteSSDRoleSet">
            <summary>
            Role exclusion list delete.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateRole">
            <summary>
            RoleCreate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateRole">
            <summary>
            RoleUpdate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteRole">
            <summary>
            Role Delete
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignRoleToSubject">
            <summary>
            AssignRoleToSubject
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignRoleFromSubject">
            <summary>
            UnassignRoleFromSubject
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PolicySetCreate">
            <summary>
            PolicySetCreate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PolicySetUpdate">
            <summary>
            PolicySetUpdate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PolicySetDelete">
            <summary>
            PolicySetDelete
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PolicyCreate">
            <summary>
            PolicyCreate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PolicyUpdate">
            <summary>
            PolicyUpdate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.PolicyDelete">
            <summary>
            PolicyDelete
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignPolicySetToPolicySetGroup">
            <summary>
            Assign PolicySet to PolicySet
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignPolicyToPolicySet">
            <summary>
            Assign Policy to PolicySet
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignRuleToPolicy">
            <summary>
            Assign Rule to Policy
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignPolicySetFromPolicySetGroup">
            <summary>
            UnAssign PolicySet from PolicySet
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignPolicyFromPolicySet">
            <summary>
            UnAssign Policy from PolicySet
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignRuleFromPolicy">
            <summary>
            UnAssign Rule from Policy
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.RuleCreate">
            <summary>
            RuleCreate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.RuleUpdate">
            <summary>
            RuleUpdate
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.RuleDelete">
            <summary>
            RuleDelete
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignUserAsSupportEngineer">
            <summary>
            AssignUserAsSupportEngineer
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignUserAsAuditor">
            <summary>
            AssignUserAsAuditor
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignUserAsHelpdesk">
            <summary>
            AssignUserAsHelpdesk
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignUserAsAuditor">
            <summary>
            UnassignUserAsAuditor
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignUserAsHelpDesk">
            <summary>
            UnassignUserAsHelpDesk
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignUserAsSupportEngineer">
            <summary>
            UnassignUserAsSupportEngineer
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignUserAsBusinessDomainManager">
            <summary>
            AssignUserAsBusinessDomainManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignUserAsResourceManager">
            <summary>
            AssignUserAsResourceManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignUserAsBusinessDomainManager">
            <summary>
            UnassignUserAsBusinessDomainManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignUserAsResourceManager">
            <summary>
            UnassignUserAsResourceManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.AssignUserAsAccountManager">
            <summary>
            AssignUserAsAccountManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UnassignUserAsAccountManager">
            <summary>
            UnassignUserAsAccountManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetAuditor">
            <summary>
            GetAuditor
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetSupportEngineer">
            <summary>
            GetSupportEngineer
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetHelpDesk">
            <summary>
            GetHelpDesk
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetBusinessDomainManager">
            <summary>
            GetBusinessDomainManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetResourceManager">
            <summary>
            GetResourceManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetAccountManager">
            <summary>
            GetAccountManager
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetSystemRolesOfSystemUser">
            <summary>
            GetSystemRolesOfSystemUser
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetSystemAuthenticationRealm">
            <summary>
            GetSystemAuthenticationRealm
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateFirstLevelNamedProtectionDomain">
            <summary>
            CreateFirstLevelNamedProtectionDomain
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.CreateAttribute">
            <summary>
            CreateAttribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.UpdateAttribute">
            <summary>
            UpdateAttribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetAttribute">
            <summary>
            GetAttribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.SearchAttribute">
            <summary>
            SearchAttribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.DeleteAttribute">
            <summary>
            DeleteAttribute
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.ScenarioName.GetNamedProtectionDomain">
            <summary>
            GetNamedProtectionDomain
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.AuditingFallBackSource">
            <summary>
            Auditing Fall Back Logging Sources
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingFallBackSource.MatrixAuditFallback">
            <summary>
            Audit Fall back Source
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingFallBackSource.CoreAuthAuditor">
            <summary>
            Core Authorization
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.SecondaryUserType">
            <summary>
            Secondary User Type
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.SecondaryUserType.NotApplicable">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.SecondaryUserType.Delegated">
            <summary>
            Delegated User
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.SecondaryUserType.Impersonated">
            <summary>
            Impersonated User
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.SecondaryUserType.OnbehalfOf">
            <summary>
            On behalf User
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.AuditStatus">
            <summary>
            Enumerations for possible audit statuses
            Do not change the order. Add the new values at the end
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditStatus.Failure">
            <summary>
            Failure
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditStatus.Deny">
            <summary>
            Deny
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditStatus.Grant">
            <summary>
            Grant
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.AuditingSource">
            <summary>
            Enumerations for possible audit sources.
            Do not change the order. Add the new values at the end
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.Provisioning">
            <summary>
            Provisioning
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.RoleAdministration">
            <summary>
            Provisioning
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.SubjectAdministration">
            <summary>
            SubjectAdministration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.AccessIntegration">
            <summary>
            AccessIntegration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.PolicyAdministration">
            <summary>
            AccessIntegration
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.SystemSecurityManagement">
            <summary>
            SystemSecurityManagement
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.Enforcement">
            <summary>
            Enforcement
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.ClaimService">
            <summary>
            CliamService
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.NotificationService">
            <summary>
            NotificationService
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.CorporatePermissions">
            <summary>
            CorporatePermissionsService
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.AutoRoleService">
            <summary>
            AutoRoleService
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.AuditingSource.AuthorizationDataService">
            <summary>
            AuthorizationDataService
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.BaseFault">
            <summary>
            Base fault for deriving the custom faults.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.BaseFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.BaseFault.#ctor(System.String)">
            <summary>
            Constructor with faultCode and faultReason
            </summary>
            <param name="faultReason">
            Textual description of the error.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.BaseFault.#ctor(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,System.Int32,System.Int32)">
            <summary>
            Creates an instance using values in the passed in parameters. Use this overload when creating a fault that is 
            to mirror the fault returned by a call to an ITA web service only with different component specific values.
            </summary>
            <param name="component">
            The value that identifies the component in which the error occurred.
            </param>
            <param name="entity">
            The data entity being processed when the error occurred.
            </param>
            <param name="operation">
            The Operation that was being performed when the error occurred.
            </param>
            <param name="eventId">
            The eventId that represents the error logged to the server regarding the error that occurred.
            </param>
            <remarks>
            This overload is used by primarily by the CP fault conversion behavior to convert external ITA faults from RA/PA/SSM
            into fault information relevant to CP.
            </remarks>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.FaultReason">
            <summary>
             Gets a string value that will be be set into the FaultException.FaultReason property.
            </summary>
            <remarks>
            Note this is not a serialized valued for the data contract and is therefore not returned to the caller.
            </remarks>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.ErrorCode">
            <summary>
            Gets and sets the legacy ErrorCode value from ITA custom exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.Component">
            <summary>
            Gets a value that identifies the component which generated the exception.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.Entity">
            <summary>
            Gets a value that identifies the component which generated the exception.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.Operation">
            <summary>
            Gets a value that identifies the component which generated the exception.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.EventId">
            <summary>
            Gets a value that identifies the legacy EventId of the error.  This is not the event id used
            for entries that are logged to the event viewer.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.VerboseMessage">
            <summary>
            Gets and sets the verbose message that correlates to the fault that occurred. 
            Note: Verbose message for CP needs to be set by the CP FaultHandlerBehavior, which is why the setter isn't internal.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.ReferenceId">
            <summary>
            Gets or sets an id that can be used to correlate faults to messages in the event log. This field maps to the correlation id in the event log.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.BaseFault.ExtensionData">
            <summary>
            Gets and sets the extension data that is required for forward compatibility support on data contracts.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AnElementInCollectionIsNull">
            <summary>
              Looks up a localized string similar to One of the elements in {0} collection is null..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AssignmentAlreadyExists">
            <summary>
              Looks up a localized string similar to Assignment from {0} to {1} already exists. \n {0}: {2}\n{1}: {3}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AssignmentDoesNotExist">
            <summary>
              Looks up a localized string similar to Assignment from {0} to {1} does not exist.\n {0}: {2}\n{1}: {3}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AttributeIssuerCantHaveMultipleDefaultSources">
            <summary>
              Looks up a localized string similar to Attribute Issuer cannot have multiple default sources..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AttributeIssuerShouldHaveAtleastOneDefaultSource">
            <summary>
              Looks up a localized string similar to Attribute should have atleast one default source..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AttributeQuerySchemaIsInvalid">
            <summary>
              Looks up a localized string similar to {0}. Schema of AttributeQuery is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AttributeReferenced">
            <summary>
              Looks up a localized string similar to Attribute is referenced.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AttributeScopeChange">
            <summary>
              Looks up a localized string similar to AttributeScope cannot be changed..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AttributeScopeDoesNotMatchWithNPDScopeOfSystemUser">
            <summary>
              Looks up a localized string similar to Attribtue scope does not match with the NPD scope for the system user.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.AttributeSourceNotUnique">
            <summary>
              Looks up a localized string similar to Attribute sources are not unique..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.BulkLimitExceeded">
            <summary>
              Looks up a localized string similar to {0} count exceeds bulk limit for operation {1}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.CallerNotAuthorized">
            <summary>
              Looks up a localized string similar to The caller is not authorized to perform the operation..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.CrossReferencesExist">
            <summary>
              Looks up a localized string similar to Delete operation could not be performed as a reference to this {0} currently exists in RoleAdministration.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.CurrentVersionCantBeDeleted">
            <summary>
              Looks up a localized string similar to Current version of {0} cannot be deleted:\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.DatabaseNotResponding">
            <summary>
              Looks up a localized string similar to Database is not responding..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.DuplicateObjectFoundInRequest">
            <summary>
              Looks up a localized string similar to {0} argument has duplicate items in the collection..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.EndDateTimeIsInPast">
            <summary>
              Looks up a localized string similar to End datetime can not be in past..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.EndDateTimeIsTooLate">
            <summary>
              Looks up a localized string similar to Start date cannot be the so late..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.EnforcementBadXmlRequest">
            <summary>
              Looks up a localized string similar to Enforcement request xml has invalid format..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.EnforcementRequestNotValid">
            <summary>
              Looks up a localized string similar to Enforcement request is not valid..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToAssignInDatabase">
            <summary>
              Looks up a localized string similar to Failed to assign {0} to {1} in the database.\n{0}: {2}\n{1}: {3}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToCreateEmailMessage">
            <summary>
              Looks up a localized string similar to Failed to create email message due to an unknown reason..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToDeleteFromDatabase">
            <summary>
              Looks up a localized string similar to Failed to delete {0} in the database.\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToExportPolicySets">
            <summary>
              Looks up a localized string similar to Failed to export the policy sets..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToFetchFromDatabase">
            <summary>
              Looks up a localized string similar to Failed to fetch {0} from the database.\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToGetConfiguration">
            <summary>
              Looks up a localized string similar to Failed to get {0} from configuration..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToImportPolicySets">
            <summary>
              Looks up a localized string similar to Failed to import the policy sets..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToInsertInDatabase">
            <summary>
              Looks up a localized string similar to Failed to insert {0} in the database.\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToSearchFromDatabase">
            <summary>
              Looks up a localized string similar to Failed to search for {0} from the database..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToSendEmailMessage">
            <summary>
              Looks up a localized string similar to The Notification Service failed to send an email message..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToUnassignInDatabase">
            <summary>
              Looks up a localized string similar to Failed to unassign {0} from {1} in the database.\n{0}: {2}\n{1}: {3}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToUpdatedInDatabase">
            <summary>
              Looks up a localized string similar to Failed to update {0} in the database.\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FailedToUpdateInDatabase">
            <summary>
              Looks up a localized string similar to Failed to update {0} in the database.\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.FieldOfObjectCantBeSet">
            <summary>
              Looks up a localized string similar to Field {0} of object {1} cannot be set by the caller. It&apos;s system field only..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.HashDoNotMatch">
            <summary>
              Looks up a localized string similar to {0} does not match with hash for {1}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.HasInvalidCharacters">
            <summary>
              Looks up a localized string similar to Argument {0} contains invalid characters..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.IntegrationFailed">
            <summary>
              Looks up a localized string similar to Integration failed from Role Administration to {0}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InternalError">
            <summary>
              Looks up a localized string similar to An internal error occured: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InternalErrorFault">
            <summary>
              Looks up a localized string similar to Internal system error occurred..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InvalidArgumentFault">
            <summary>
              Looks up a localized string similar to One of the input arguments is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InvalidAttributeIssuer">
            <summary>
              Looks up a localized string similar to Cannot assign constraint value. Invalid Attribute Issuer.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InvalidData">
            <summary>
              Looks up a localized string similar to Invalid data was supplied. Data provided was {0}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InvalidIdentity">
            <summary>
              Looks up a localized string similar to Error occured during identity parsing.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InvalidOperation">
            <summary>
              Looks up a localized string similar to The operation being performed is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.InvalidOperationFault">
            <summary>
              Looks up a localized string similar to The operation being performed is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.LastUserInRole">
            <summary>
              Looks up a localized string similar to Operation is not valid because user is last {0}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.MandatoryArgumentNull">
            <summary>
              Looks up a localized string similar to Mandatory argument {0} is null..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.MaximumLengthExceeded">
            <summary>
              Looks up a localized string similar to Argument {0} exceeds maximum allowed length of {1}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.NonDelegableObjectsCantBeDelegated">
            <summary>
              Looks up a localized string similar to One of the {0} cannot be delegated..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.NoResultsExported">
            <summary>
              Looks up a localized string similar to No PolicSets were exported..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.NotificationFault">
            <summary>
              Looks up a localized string similar to The notification could not be sent..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ObjectAlreadyExist">
            <summary>
              Looks up a localized string similar to Object already exists - {0}:n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ObjectAlreadyExistsFault">
            <summary>
              Looks up a localized string similar to Another object with the same name already exists in the system..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ObjectDoesNotExist">
            <summary>
              Looks up a localized string similar to Object does not exist - {0}:\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ObjectNotFound">
            <summary>
              Looks up a localized string similar to Object not found - {0}:\n{1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ObjectNotFoundFault">
            <summary>
              Looks up a localized string similar to The object being looked for could not be found..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.OnlyNpdInOwnersList">
            <summary>
              Looks up a localized string similar to The NPD is only NPD in owner&apos;s list for {0}. NPD: {1}. {0}: {2}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.PageNumberLessThanZero">
            <summary>
              Looks up a localized string similar to Page number be be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.PolicyInformationPointAttributeAsServiceContractNotValid">
            <summary>
              Looks up a localized string similar to Attribute source as WCF service has invalid contract..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.PrivilegeAssignmentTypeNotSet">
            <summary>
              Looks up a localized string similar to PrivilegeAssignmentType is not set to a valid value..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.PropertyIsNullOrEmpty">
            <summary>
              Looks up a localized string similar to Property {0} is null or empty..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ProviderAlreadyInitialized">
            <summary>
              Looks up a localized string similar to The provider {0} has already been initialized..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ProviderNotSet">
            <summary>
              Looks up a localized string similar to Data provider {0} is not set in configuration file..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.RBACIssuerAttributeType">
            <summary>
              Looks up a localized string similar to RBAC Issuer has incorrect Attribute Types..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ReferencesExist">
            <summary>
              Looks up a localized string similar to Delete operation could not be performed as a reference to this {0} currently exists..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.RoleExclusionShouldHaveAtleastTwoRoles">
            <summary>
              Looks up a localized string similar to Role exclusion should have atleast two roles specified..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.SchemaFileNotFound">
            <summary>
              Looks up a localized string similar to XML Schema File not found..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.SchemaNamespaceMissing">
            <summary>
              Looks up a localized string similar to Schema namespace is missing in {0}  Xml..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ScopeTypeName">
            <summary>
              Looks up a localized string similar to Scope Type Name.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ScopeValueBlankApprovers">
            <summary>
              Looks up a localized string similar to Approvers of Scope Value {0} of Scope Type {1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ScopeValueDupApprovers">
            <summary>
              Looks up a localized string similar to Approvers of Scope Value {0} of Scope Type {1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ScopeValueDupValues">
            <summary>
              Looks up a localized string similar to Scope Value {0} of Scope Type {1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ScopeValueNullApprovers">
            <summary>
              Looks up a localized string similar to Approvers of Scope Value {0} of Scope Type {1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ScopeValueOutboundApprovers">
            <summary>
              Looks up a localized string similar to Approvers of Scope Value {0} of Scope Type {1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.ServiceNotResponding">
            <summary>
              Looks up a localized string similar to Service {0} is not responding..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.SourceSubjectCannotBeSameAsTargetSubject">
            <summary>
              Looks up a localized string similar to Target subject cannot be same source subject..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.StartDateGreaterThanEndDate">
            <summary>
              Looks up a localized string similar to Start date cannot be greater than end date..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.StartDateTimeIsInPast">
            <summary>
              Looks up a localized string similar to Start datetime can not be in past..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.StartDateTimeIsTooEarly">
            <summary>
              Looks up a localized string similar to Start date cannot be so early..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.SubjectConstraintAttributeEntryShouldHaveEitherRoleOrPermission">
            <summary>
              Looks up a localized string similar to Subject constraint attribute entry should have either role or permission..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.TrustLevelGreaterThanParents">
            <summary>
              Looks up a localized string similar to Trust level of {0} cannot be greater than  {1}&apos;s trust level.\n{0}:{2}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.TrustLevelLessThanChildrens">
            <summary>
              Looks up a localized string similar to Trust level of {0} cannot be less than {1}&apos;s trust level.\n{0}:{2}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.TrustLevelLessThanRoles">
            <summary>
              Looks up a localized string similar to Trust level of {0} cannot be less than role&apos;s trust level..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.UnauthorizedFault">
            <summary>
              Looks up a localized string similar to The caller is not authorized to perform this operation..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.UnAuthorizedSchemaFileAccess">
            <summary>
              Looks up a localized string similar to Unable to access Schema file..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.UnKnown">
            <summary>
              Looks up a localized string similar to Unknown Error occured while {0}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.UserHasInvalidRole">
            <summary>
              Looks up a localized string similar to Operation is not valid because {0}..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.UserNotInRole">
            <summary>
              Looks up a localized string similar to Operation is not valid because user {0} has no {1} role..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.VelocityUnavilable">
            <summary>
              Looks up a localized string similar to Cache is unavailable..
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ExceptionStringResource.XmlIsInvalid">
            <summary>
              Looks up a localized string similar to {0}  XML  content is invalid..
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.InternalErrorFault">
            <summary>
            Fault that represents an infrastructure error on the server.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorFault.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorFault.#ctor(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.InvalidArgumentFault">
            <summary>
            Fault indicating an invalid value was passed as a parameter to the web service.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidArgumentFault.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidArgumentFault.#ctor(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.InvalidOperationFault">
            <summary>
            Fault that specifies an invalid operation was attempted during the processing of the request. 
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationFault.#ctor(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException">
            <summary>
            A base class that derives from the root base class <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> which is 
            used to represent exceptions that occur due to application rules and do not represent any sort
            of infrastructure failure that would require operations personnel involvement.
            These types of exceptions are not generally logged though the diagnostic information contained
            within is of interest to the caller of the service.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Constructs a new instance from the passed in parameters.  This is the primary constructor used by ITAuthorize.
            </summary>
            <param name="customContext">
            Optional parameter that provides additional context information regarding the process at the time of the error.
            This value can be null.
            </param>
            <param name="innerException">
            The newly created instance will wrap this value as the 'innerException'.
            </param>
            <param name="applicationEvent">
            The <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text and will be added to the Data collection
            for access by the logging infrastructure.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="applicationEvent"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.GetInstance``1(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            A factory method that will construct and return an exception of type T based on the passed in parameters.
            </summary>
            <typeparam name="T">
            Specifies a type derived from <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> other than <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> or
            <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException"/> which are base classes and not to be used.
            </typeparam>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of the requested exception type.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            Thrown if <paramref name="customContext"/> or <paramref name="applicationEventName"/> is null.
            </exception>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.TryGetApplicationEvent(System.String,System.Object[])">
            <summary>
            A shim to emulate the IT Platform SDK V3.0 method of the same name.
            </summary>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            A <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> if found and NULL if not found.
            </returns>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.CustomContext">
            <summary>
            Gets a value that provides contextual information regarding the application at the time the exception was thrown.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.ErrorCode">
            <summary>
            Gets the ITA ErrorCode value that is carried in the <see cref="P:System.Exception.HResult"/> property.
            This property is provided for backward compatibility with V2.0 and earlier.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.Component">
            <summary>
            Gets a value that identifies the component which generated the exception.
            </summary>
            <remarks>
            This value is carried over to the corresonding fault for this exception.
            </remarks>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.Entity">
            <summary>
            Gets a value that identifies the component which generated the exception.
            </summary>
            <remarks>
            This value is carried over to the corresonding fault for this exception.
            </remarks>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.Operation">
            <summary>
            Gets a value that identifies the component which generated the exception.
            </summary>
            <remarks>
            This value is carried over to the corresonding fault for this exception.
            </remarks>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.EventId">
            <summary>
            Gets a value that identifies the legacy EventId of the error.  This is not the event id used
            for entries that are logged to the event viewer.
            </summary>
            <remarks>
            This value is carried over to the corresponding fault for this exception.
            </remarks>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.VerboseMessage">
            <summary>
            Gets or sets a verbose message that corresponds to the exception that occurred.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Exceptions.ITSecurityException.ReferenceId">
            <summary>
            Gets an id that corresponds to the correlation id of an operation. 
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException">
            <summary>
            A base class that derives from the root base class <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityException"/> which is 
            used to represent exceptions that occur due to system failures that are typically transient and 
            environmental in nature.  These types of exceptions are of interest to Operations personnel 
            because they represent some sort of failure that requires human attention.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an ITSecurityConfigurationException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an ITSecurityConfigurationException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ITSecurityConfigurationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an ITSecurityConfigurationException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>ITSecurityConfigurationException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ArgumentException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when a required argument is not properly passed.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ArgumentException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ArgumentException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ArgumentException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ArgumentException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ArgumentException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an ArgumentException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an ArgumentException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ArgumentException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an ArgumentException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>ArgumentException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when an authorization request cannot be evaluated.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an AuthorizationEvaluationException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an AuthorizationEvaluationException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.AuthorizationEvaluationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an AuthorizationEvaluationException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>AuthorizationEvaluationException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.DatabaseException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException"/> derived class that represents and error that occurs
            when an unanticipated error occurs during the processing of a request.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.DatabaseException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.DatabaseException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.DatabaseException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.DatabaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.DatabaseException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.DatabaseException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an DatabaseException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an DatabaseException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.DatabaseException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an DatabaseException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>DatabaseException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when an enforcement call has parameters that are not valid.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an EnforcementValidationException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an EnforcementValidationException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.EnforcementValidationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an EnforcementValidationException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>EnforcementValidationException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.IdentityDataException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when an identity type cannot be parsed.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.IdentityDataException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.IdentityDataException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.IdentityDataException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.IdentityDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.IdentityDataException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.IdentityDataException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an IdentityDataException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an IdentityDataException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.IdentityDataException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an IdentityDataException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>IdentityDataException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.InternalErrorException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException"/> derived class that represents and error that occurs
            when an unanticipated error occurs during the processing of a request.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an InternalErrorException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an InternalErrorException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InternalErrorException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an InternalErrorException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>InternalErrorException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when during the processing of a request the operation cannot be completed because the state of the data is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an InvalidOperationException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an InvalidOperationException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.InvalidOperationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an InvalidOperationException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>InvalidOperationException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.NotificationFault">
            <summary>
            Fault indicating an error within the notification.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.NotificationFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when an create request cannot be completed because the request object already exists.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an ObjectAlreadyExistsException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an ObjectAlreadyExistsException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an ObjectAlreadyExistsException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>ObjectAlreadyExistsException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsFault">
            <summary>
            Fault indicating the request could not be processed because an object it was trying to create
            already exists.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectAlreadyExistsFault.#ctor(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when an update or lookup request could not be completed due to a required object not existing.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an ObjectDoesNotExistException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an ObjectDoesNotExistException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectDoesNotExistException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an ObjectDoesNotExistException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>ObjectDoesNotExistException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ObjectNotFoundFault">
            <summary>
            Fault indicating the request could not be processed because an object that was required 
            does not exist.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectNotFoundFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ObjectNotFoundFault.#ctor(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ProviderException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecuritySystemException"/> derived class that represents a provider specific error.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ProviderException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ProviderException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ProviderException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ProviderException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ProviderException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an ProviderException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an ProviderException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ProviderException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an ProviderException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>ProviderException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when an authorization has not been granted for the activity being attempted.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an UnauthorizedAccessException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an UnauthorizedAccessException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an UnauthorizedAccessException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>UnauthorizedAccessException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessFault">
            <summary>
            Fault indicating the request could not be processed because the caller is not authorized to 
            perform the requested action.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessFault.#ctor">
            <summary>
            Default constructor that sets an internal FaultReason property specific to this fault type.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.UnauthorizedAccessFault.#ctor(Microsoft.IT.Security.Core.Component,Microsoft.IT.Security.Core.EntityName,Microsoft.IT.Security.Core.OperationName,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Exceptions.ValidationException">
            <summary>
            This is an <see cref="T:Microsoft.IT.Security.Core.Exceptions.ITSecurityApplicationException"/> derived class that represents and error that occurs
            when a request cannot complete due to invalid data.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ValidationException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ValidationException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ValidationException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ValidationException.#ctor(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ValidationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,System.String,System.Object[])">
            <summary>
            Creates and returns an ValidationException constructed from the passed in parameters.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEventName">
            Required parameter that specifies the name of the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/> that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. This parameter is required.
            </param>
            <param name="paramValues">
            An arbitrary list of objects that will be used as substitution parameters for constructing the <see cref="T:Microsoft.IT.Diagnostics.ApplicationEvent"/>.
            </param>
            <returns>
            An instance of an ValidationException.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Exceptions.ValidationException.GetInstance(Microsoft.IT.Security.Core.CustomContext,System.Exception,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Returns an ValidationException populated with a generic message based upon the errorCode supplied.
            </summary>
            <param name="customContext">
            Required parameter that provides additional context information regarding the process at the time of the error.
            </param>
            <param name="innerException">
            The newly created instance will wrap this optional value as the 'innerException'. This value can be null.
            </param>
            <param name="applicationEvent">
            Required parameter that will be used create the exception text 
            and will be added to the Data collection for access by the logging infrastructure. 
            </param>
            <returns>ValidationException instance</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.DatabaseListener">
            <summary>
            Custom database listener class for writing to the database
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.Logger">
            <summary>
            External Interface for accessing the Logging Methods
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.Log(Microsoft.IT.Security.Core.Diagnostics.LogType,System.Int32,System.Guid,System.String)">
            <summary>
            Log method for logging Error/Exception/Warning/Information
            </summary>
            <param name="logType">Logging Type</param>
            <param name="eventId">Event Identifier</param>
            <param name="correlationId">Correlation Identifier</param>
            <param name="message">Message can be Nullable, if exception is not null</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.Log(Microsoft.IT.Security.Core.Diagnostics.LogType,System.Int32,System.Guid,System.Exception)">
            <summary>
            Log the exception
            </summary>
            <param name="logType">Logging Type</param>
            <param name="errorCode">Error Code</param>
            <param name="correlationId">Correlation Identifier</param>
            <param name="exceptionInfo">Exception can be Nullable, if message is not null</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.LogEvent(System.Guid,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Exception,System.Object[])">
            <summary>
            (For infrastructure use only - application code should use one of the other overrides)
            Logs an event to the configured EventLog and DB trace sources.
            </summary>
            <param name="correlationId">ITAuthorize correlation id for identifying related events.</param>
            <param name="eventType">Designates the severity of the event (Info, Warning, Error)</param>
            <param name="eventId">Unique identifier for the event.</param>
            <param name="message">Human readable message that is to be logged</param>
            <param name="exception">Optional exception to be included in the logged event. This value can be null.</param>
            <param name="extraDetails">
            Optional additional context data to be included.  DO NOT pass null for this parameter. 
            If no additional context data is to be supplied don't enter anything.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.LogEvent(System.Guid,System.String,System.Exception,System.Object[])">
            <summary>
            Logs an event to the configured EventLog and DB trace sources.
            </summary>
            <param name="correlationId">ITAuthorize correlation id for identifying related events.</param>
            <param name="message">Human readable message that is to be logged</param>
            <param name="exception">Optional exception to be included in the logged event. This value can be null.</param>
            <param name="extraDetails">
            Optional additional context data to be included.  DO NOT pass null for this parameter. 
            If no additional context data is to be supplied don't enter anything.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.LogEvent(System.Guid,Microsoft.IT.Diagnostics.ApplicationEvent,System.Object[])">
            <summary>
            Logs an event to the configured EventLog and DB trace sources.
            </summary>
            <param name="correlationId">ITAuthorize correlation id for identifying related events.</param>
            <param name="applicationEvent">
            An ApplicationEvent instance that fully describes the event including the EventId and severity.
            </param>
            <param name="extraDetails">
            Optional additional context data to be included.  DO NOT pass null for this parameter. 
            If no additional context data is to be supplied don't enter anything.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.LogEvent(System.Guid,Microsoft.IT.Diagnostics.ApplicationEvent,System.Exception,System.Object[])">
            <summary>
            Logs an event to the configured EventLog and DB trace sources.
            </summary>
            <param name="correlationId">ITAuthorize correlation id for identifying related events.</param>
            <param name="applicationEvent">
            An ApplicationEvent instance that fully describes the event including the EventId and severity.
            </param>
            <param name="exception">Exception to be included in the logged event. </param>
            <param name="extraDetails">
            Optional additional context data to be included.  DO NOT pass null for this parameter. 
            If no additional context data is to be supplied don't enter anything.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.LogEvent(System.Guid,System.Exception,System.Object[])">
            <summary>
            Logs an event to the configured EventLog and DB trace sources.
            </summary>
            <param name="correlationId">ITAuthorize correlation id for identifying related events.</param>
            <param name="exception">Exception to be included in the logged event. </param>
            <param name="extraDetails">
            Optional additional context data to be included.  DO NOT pass null for this parameter. 
            If no additional context data is to be supplied don't enter anything.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Logger.GetAppendedDetails(System.Object[],System.Object[])">
            <summary>
            Merges two arrays of objects into a single array.
            </summary>
            <param name="extraDetails">The first array to be merged.</param>
            <param name="detailsToAppend">The second array to be merged.</param>
            <returns>An array that contains the elements from both of the input arrays</returns>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.LoggingDALHelper">
            <summary>
            Logging DAL helper class
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.LoggingDALHelper.spLogIns">
            <summary>
            Audit Stored Procedure
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.LoggingDALHelper.spTraceIns">
            <summary>
            Trace Stored Procedure
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.LoggingDALHelper.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.LoggingDALHelper.SaveLog(System.Int32,System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            Database call for logging the message
            </summary>
            <param name="eventId"> event identifier</param>
            <param name="correlationId">correlation identifier</param>
            <param name="message">logging message</param>
            <param name="logSeverity">logging severity</param>
            <param name="serverName">server name</param>
            <param name="moduleName">module name derived from the stack trace</param>
            <param name="className">class name derived from the stack trace</param>
            <param name="methodName">method name derived from the stack trace</param>
            <param name="logTimestamp">logging utc time stamp</param>
            <param name="stackTrace">stack trace of the log</param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.LoggingDALHelper.SaveTrace(System.Int32,System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Database call for tracing the message
            </summary>
            <param name="eventId"> event identifier</param>
            <param name="correlationId">correlation identifier</param>
            <param name="scenarioName">scenario name</param>
            <param name="message">tracing message</param>
            <param name="serverName">server name</param>
            <param name="moduleName">module name derived from the stack trace</param>
            <param name="className">class name derived from the stack trace</param>
            <param name="methodName">method name derived from the stack trace</param>
            <param name="traceTimestamp">tracing utc time stamp</param>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.LoggingResource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.LoggingResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.LoggingResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.LoggingResource.WebTraceEnd">
            <summary>
              Looks up a localized string similar to {0} Scenario , ended in the method : {1}.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.LoggingResource.WebTraceStart">
            <summary>
              Looks up a localized string similar to {0} Scenario , started from the method : {1}.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.LogType">
            <summary>
            Logging Type
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.LogType.Error">
            <summary>
            Error messages
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.LogType.Exception">
            <summary>
            Exceptions
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.LogType.Warning">
            <summary>
            Warning messages
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.Diagnostics.LogType.Information">
            <summary>
            Informational messages
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Diagnostics.Tracer">
            <summary>
            Tracer Class for Tracing
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.#cctor">
            <summary>
            Type initializer just calls Reset().
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.Reset">
            <summary>
            Initializes or reinitializes all values to what has been configured in the app.config file.  This is called
            automatically by the type initializer and can be called at any time by the application to reset all values.
            </summary>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMethodEntry(System.Reflection.MemberInfo)">
            <summary>
            Tracing method used to mark entry into a method. This method results in a message of type Information
            of the form "Entering method [methodname].".  
            </summary>
            <param name="methodInfo">
            A <see cref="T:System.Reflection.MemberInfo"/> instance that is used to identify the method from which the call was made.
            </param>
            <remarks>
            Whenever this call is used in a method you must ensure that the corresponding <see cref="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMethodExit(System.Reflection.MemberInfo)"/> 
            method is also called.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMethodError(System.Reflection.MemberInfo,System.Exception)">
            <summary>
            Tracing method used to output minimal exception information.  Use this in methods that are being traced and that have
            catch blocks for handling exceptions.  It will output the TypeName and Message of the passed in <paramref name="error"/>
            as well as the innermost exception which identifies the root cause.
            </summary>
            <param name="methodInfo">
            A <see cref="T:System.Reflection.MemberInfo"/> instance that is used to identify the method from which the call was made.
            </param>
            <param name="error">
            The <see cref="T:System.Exception"/> that is to be output to the trace file.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMethodExit(System.Reflection.MemberInfo)">
            <summary>
            Tracing method used to mark exit from a method. This method results in a message of type Information
            of the form "Exiting method [methodname].".  
            </summary>
            <param name="methodInfo">
            A <see cref="T:System.Reflection.MemberInfo"/> instance that is used to identify the method from which the call was made.
            </param>
            <remarks>
            This call is used in conjunction with the corresponding <see cref="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMethodEntry(System.Reflection.MemberInfo)"/> method.
            </remarks>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMessage(System.Reflection.MemberInfo,System.Diagnostics.TraceEventType,System.String,System.Object[])">
            <summary>
            Public method that writes the trace information after formatting the output string from the passed in parameters.
            </summary>
            <param name="methodInfo">
            Identifies the method from which the TraceXxxx method was called.
            </param>
            <param name="traceEventType">
            Specifies the verbosity of the trace entry - Verbose, Information, Warning or Error.
            </param>
            <param name="format">
            A string used to format the output.  The string is a typical C# format string of the form "Abc {0} and Xyz {1}."
            </param>
            <param name="args">
            Values that will be used as substitution parameters when formatting the string.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMessage(System.Reflection.MemberInfo,Microsoft.IT.Diagnostics.ApplicationEvent)">
            <summary>
            Public method that writes the trace information after formatting the output string from the passed in parameters.
            </summary>
            <param name="methodInfo">
            Identifies the method from which the TraceXxxx method was called.
            </param>
            <param name="applicationEvent">
            An ApplicationEvent instance that fully describes the event including the EventId and severity.
            </param>
            <param name="args">
            Values that will be used as substitution parameters when formatting the string.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMessage(System.Reflection.MemberInfo,System.Diagnostics.TraceEventType,Microsoft.IT.Security.Core.CustomContext,System.String,System.Object[])">
            <summary>
            Public method that writes the trace information after formatting the output string from the passed in parameters.
            </summary>
            <param name="methodInfo">
            Identifies the method from which the TraceXxxx method was called.
            </param>
            <param name="traceEventType">
            Specifies the verbosity of the trace entry - Verbose, Information, Warning or Error.
            </param>
            <param name="context">
            The <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> instance to be used for adding additional information like ScenarioName to the trace output.
            </param>
            <param name="format">
            A string used to format the output.  The string is a typical C# format string of the form "Abc {0} and Xyz {1}."
            </param>
            <param name="args">
            Values that will be used as substitution parameters when formatting the string.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.IsEnabled">
            <summary>
            Evaluates the values of the TraceMode and Scenarios properties to determine if the a trace method call
            would produce output using the ScenarioName of the globally accessible <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> when required.  
            Use this method to prevent costly Verbose tracing calls in situations where no output would be produced anyway.
            </summary>
            <returns>
            True if TraceMode==On, or if TraceMode==ScenariosOnly and the globally accessible <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> object 
            specifies a scenario name that is contained in the list of enabled scenarios.  False is returned in all other cases.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.IsEnabled(Microsoft.IT.Security.Core.CustomContext)">
            <summary>
            Evaluates the values of the TraceMode and Scenarios properties to determine if the a trace method call
            would produce output using the ScenarioName of the passed in context when required.  Use this method to
            prevent costly Verbose tracing calls in situations where no output would be produced anyway.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> from which to determine the currently executing scenario.
            </param>
            <returns>
            True if TraceMode==On, or if TraceMode==ScenariosOnly and the context object specifies a scenario name that is
            contained in the list of enabled scenarios.  False is returned in all other cases.
            </returns>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.WriteTrace(System.Reflection.MemberInfo,System.Diagnostics.TraceEventType,System.String,System.Object[])">
            <summary>
            Worker method that writes the trace information after formatting the output string from the passed in parameters.
            </summary>
            <param name="methodInfo">
            Identifies the method from which the TraceXxxx method was called.
            </param>
            <param name="traceEventType">
            Specifies the verbosity of the trace entry - Verbose, Information, Warning or Error.
            </param>
            <param name="format">
            A string used to format the output.  The string is a typical C# format string of the form "Abc {0} and Xyz {1}."
            </param>
            <param name="args">
            Values that will be used as substitution parameters when formatting the string.
            </param>
        </member>
        <member name="M:Microsoft.IT.Security.Core.Diagnostics.Tracer.WriteTrace(System.Reflection.MemberInfo,System.Diagnostics.TraceEventType,Microsoft.IT.Security.Core.CustomContext,System.String,System.Object[])">
            <summary>
            Worker method that writes the trace information after formatting the output string from the passed in parameters.
            </summary>
            <param name="methodInfo">
            Identifies the method from which the TraceXxxx method was called.
            </param>
            <param name="traceEventType">
            Specifies the verbosity of the trace entry - Verbose, Information, Warning or Error.
            </param>
            <param name="context">
            The <see cref="T:Microsoft.IT.Security.Core.CustomContext"/> instance to be used for adding additional information like ScenarioName to the trace output.
            </param>
            <param name="format">
            A string used to format the output.  The string is a typical C# format string of the form "Abc {0} and Xyz {1}."
            </param>
            <param name="args">
            Values that will be used as substitution parameters when formatting the string.
            </param>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.Tracer.Scenarios">
            <summary>
            Gets the collection of scenarios that are enabled for tracing.  These values are ignored if the 
            TraceMode property is anything except TraceMode.ScenariosOnly.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMode">
            <summary>
            Gets the currently configured <see cref="P:Microsoft.IT.Security.Core.Diagnostics.Tracer.TraceMode"/> that controls whether tracing is turned off,
            turned on for everything, or turned on for certain scenarios only.
            </summary>
        </member>
        <member name="T:Microsoft.IT.Security.Core.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Resources.ApplicationEvents">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  --&gt;
            &lt;!--  Whenever a new Event is added or an old is deleted or a name is changed you must generate the           --&gt;
            &lt;!--  ApplicationEvents.generated.cs file by right clicking on the ApplicationEvents.tt file and              --&gt;
            &lt;!--  and selecting the &quot;Run custom tool&quot; option                                                              --&gt;
            &lt;!-- - - -  [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.Resources.DataDictionary">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;DataDictionary MetaDataVersion=&quot;1.0&quot; xmlns=&quot;http://schemas.microsoft.com/2013/03/it/security/datadictionary&quot; &gt;
              &lt;!--  This is the set of standard character sets which should be adequate for all validation purposes.  Please get dev-lead approval 
                    prior to adding an entry to this list.  When a new string type data contract property has no special requirements the first
                    choice to consider should be the &apos;StandardEntryFieldChars&apos; character set.
              --&gt; [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SecurityGlobals.DataContractNamespace">
            <summary>
            Defines the ITA standard namespace to be used on all DataContracts and ServiceContracts.  
            Current value is 'http://schemas.xmlsoap.org/microsoft-services/2009/08/it/security'.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SecurityGlobals.DataContractLegacyFaultNamespace">
            <summary>
            Defines the default namespace that was generated by .NET in ITA versions V2.0 and earlier when the the ITA fault contracts
            did not explicitly set a DataContractNamespace.  In order to maintain backward compatibility this namespace must be used.
            Current value is 'http://schemas.datacontract.org/2004/07/Microsoft.IT.Security.FaultExceptionLibrary'.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SecurityGlobals.DataDictionaryNamespace">
            <summary>
            Defines the namespace used for serializing the DataDictionary.xml.
            Current value is 'http://schemas.microsoft.com/2013/03/it/security/datadictionary'.
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SecurityGlobals.ApplicationEventsModuleName">
            <summary>
            The logical name used to locate the module's event definitions in ApplicationEvents.xml
            </summary>
        </member>
        <member name="F:Microsoft.IT.Security.Core.SecurityGlobals.TracingSessionId">
            <summary>
            An arbitrary well-known GUID that is used to identify ETW trace sessions in ITA.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.SecurityGlobals.ApplicationEventManager">
            <summary>
            Gets the <see cref="P:Microsoft.IT.Security.Core.SecurityGlobals.ApplicationEventManager"/> object instance that contains the definitions of all events that are 
            logged and/or used for the construction of exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.SecurityGlobals.ApplicationEventsXml">
            <summary>
            Gets the module's ApplicationEvents XML for use by the Listener services.
            </summary>
        </member>
        <member name="P:Microsoft.IT.Security.Core.SecurityGlobals.MonitoringPerformanceCountersManager">
            <summary>
            Gets and sets the global static instance of a thread-safe collection of Monitoring performance counter instances.  Each 
            application should initialize this value at startup.
            </summary>
        </member>
    </members>
</doc>
